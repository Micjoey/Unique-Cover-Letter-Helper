{"version":3,"sources":["components/jobInfo/AllJobs.js","components/pagination/Pagination.js","components/cover_letter/CoverLetterForm.js","containers/job_container/JobListView.js","components/jobInfo/formattedData.js","components/jobInfo/JobDetail.js","components/cover_letter/templates/CoverLetter.js","components/cover_letter/templates/NonTechnicalCoverLetter.js","components/cover_letter/templates/StandardJobTemplate.js","components/cover_letter/templates/TriplebyteCoverLetter.js","containers/cover_letters/determineCoverLetterFormat.js","containers/cover_letters/CoverLetterDisplayContainer.js","containers/job_container/JobDetailView.js","store/axiosApi.js","store/actions/ActionTypes.js","store/actions/Auth.js","containers/forms/CoverLetterView.js","containers/forms/Login.js","containers/forms/signUpForms.js/SignupInitial.js","containers/Account/Shell.js","components/Account/ChangeEmail.js","components/homepage/homepage.js","containers/Account/accountDashboard.js","components/Account/ChangePassword.js","components/Account/ChangeAccountInfo.js","containers/forms/signUpForms.js/SignUpDetails.js","routes.js","store/ErrorBoundary.js","containers/Banners/Header/NavBar.js","containers/Banners/Footer/FooterBar.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Jobs","props","allJobs","Object","values","jobs","ListGroup","map","job","href","id","Item","style","minHeight","position_title","company","Pagination","pageIndex","total","perPage","onNext","onPrevious","setAllJobs","setNext","setOnPrevious","setPageIndex","lastPage","Math","ceil","previous","onClick","previousPage","next","nextPage","home","goHome","axios","get","then","res","data","results","className","JobForm","history","useHistory","useState","localStorage","getItem","accessToken","requestType","userId","jwt_decode","user_id","jobID","jobStage","templateChoices","job_stage","template_choices","buttonTxt","useForm","defaultValues","job_posting_website","top_skills","bullet_point_one","bullet_point_two","bullet_point_three","bullet_point_four","bullet_point_five","register","errors","handleSubmit","onSubmit","defaults","headers","Authorization","post","push","catch","console","log","put","window","location","reload","job_stages","Container","Segment","inverted","display","color","name","ref","margin","keys","key","idx","value","defaultValue","width","placeholder","required","city","link","recruiter","description","pre_bullet_point_paragraph_one","pre_bullet_point_paragraph_two","bullet_point_six","bullet_point_seven","bullet_point_eight","post_bullet_point_paragraph_one","post_bullet_point_paragraph_two","type","JobList","jobProps","setJobProps","isLoaded","loaded","setLoaded","count","setCount","useEffect","response","err","length","as","content","fontSize","formattedJobData","jobDetail","jobDetailKeys","to","CoverLetter","NonTechnicalCoverLetter","user","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","email","linkedin","github","portfolio_website","phone_number","preferred_name","last_name","first_name","StandardCoverLetter","TriplebyteCoverLetter","determineCoverLetter","coverLetter","CoverLetterChoiceContainer","setUser","currentCoverLetterChoice","setCurrentCoverLetterChoice","template_choice","JobDetailView","setjob","setUserId","paramsJobId","useParams","belongs_to_user","error","alert","reveal","JobDetail","confirmAlert","title","message","buttons","label","delete","divToHide","button","div","document","getElementsByClassName","getElementById","innerText","includes","replace","axiosInstance","create","timeout","interceptors","use","originalRequest","config","undefined","status","statusText","refresh_token","access_token","refresh","setItem","access","authCheckState","Promise","reject","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","authStart","actionTypes","authSuccess","token","authFail","logout","removeItem","authLogin","username","password","setErrorState","justSignedUp","dispatch","expirationTime","expirationDate","getTime","setTimeout","CoverLetterView","useSelector","state","isAuthenticated","loading","Login","setLoading","useDispatch","onAuth","useCallback","actions","setErrorMessage","errorMessage","size","minWidth","Grid","columns","relaxed","stackable","Column","Form","Message","heading","Field","icon","autoComplete","Button","primary","disabled","verticalAlign","Divider","vertical","RegistrationForm","password1","password2","confirm_password","refreshToken","match","Table","striped","textAlign","Header","Row","HeaderCell","colSpan","Body","Cell","minLength","maxLength","Footer","horizontal","Shell","jwtDecode","resp","container","divided","Menu","fluid","active","pathname","children","ChangeEmail","newEmail","confirmEmail","setError","patch","Input","dependencies","HomepageHeading","mobile","text","fontWeight","marginBottom","marginTop","Icon","DesktopContainer","hideFixedMenu","setState","fixed","showFixedMenu","this","Visibility","once","onBottomPassed","onBottomPassedReverse","padding","Component","ResponsiveContainer","Homepage","floated","celled","paddingBottom","paddingTop","textTransform","AccountDashboard","class","previousLocation","is_superuser","ChangePassword","newPassword","confirmPassword","successMessage","setSuccessMessage","oldPassword","new_password","new_password1","newPassword2","new_password2","backendData","old_password","success","ChangeAccountInfo","middle_name","street_address","city_address","state_address","zip_code","negative","AccountDetailsForm","PrivateRoute","components","rest","render","NeedUserCredentials","BaseRouter","exact","path","component","JobListView","Signup","HomePage","ErrorBoundary","hasError","React","e","loggedInNav","loggedOutNav","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","FooterPage","List","target","action","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM"],"mappings":"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","file":"static/js/main.2542b323.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { ListGroup } from 'react-bootstrap'\n\n\nconst Jobs = props => {\n    const allJobs = Object.values(props.jobs)\n    \n    return (\n        <ListGroup>\n           {allJobs.map(job => (\n               <a href={`/job/${job.id}`} key={job.id}>\n                   <ListGroup.Item style={{minHeight: \"fit-content\"}}>\n                       {job.position_title} - {job.company}\n                   </ListGroup.Item>\n               </a>  \n           ))}\n        </ListGroup>\n    );\n};\n\n\nexport default Jobs;","import axios from 'axios'\n;\nimport React, { useEffect } from 'react';\n\n\nexport default function Pagination(props) {\n    const { pageIndex, total, perPage, onNext, onPrevious, setAllJobs, setNext, setOnPrevious, setPageIndex } = props;\n    const lastPage = Math.ceil(total / perPage);\n    const previous = pageIndex > 1 ? (<button onClick={() => previousPage()}>Previous</button>) : null;\n    const next = pageIndex < lastPage ? (<button onClick={() => nextPage()}>Next</button>) : null;\n    const home = pageIndex > 1 ? (<button onClick={() => goHome()}>Home</button>) : null;\n\n    const nextPage = () => {\n        axios.get(onNext)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex+1)\n            })\n    }\n\n    const previousPage = () => {\n        axios.get(onPrevious)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex - 1)\n            })\n    }\n\n    const goHome = () => {\n        axios.get(`api/jobs/`)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(1)\n            })\n    }\n\n    return (\n        <div className=\"Pagination\">\n            <div className=\"Pagination-actions\">\n                {previous}\n                {home}\n                {next}\n            </div>\n            <div className=\"Pagination-stats\">\n                Page {pageIndex} of {lastPage}\n                &nbsp;(displaying {perPage} items per page)\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from 'axios'\n;\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Segment } from \"semantic-ui-react\";\n\n\nexport const JobForm = (props) => {\n    const history = useHistory()\n    const [accessToken, setAccessToken] = useState(localStorage.getItem('access_token'))\n    let job = null\n    const requestType = props.requestType\n    const userId = jwt_decode(accessToken).user_id\n    let jobID = null\n    let jobStage = \"Initial\"\n    let templateChoices = \"non-technical-cover-letter\"\n    if (props.job) {\n        job = props.job\n        jobID = job.id\n        jobStage = job.job_stage\n        templateChoices = job.template_choices\n    }\n    const buttonTxt = props.buttonTxt\n    const { register, errors, handleSubmit} = useForm({\n        defaultValues: {\n            job_posting_website: \"LinkedIn\",\n            top_skills: \"Dynamic and accomplished Software Engineer with experience and expertise in \",\n            bullet_point_one: \"Over the last five years, I have worked in multiple team-based, customer-oriented, professional roles.\",\n            bullet_point_two: \"For sixteen years on competitive soccer teams, I practiced the art of communicating in a fast moving environment, including four years of college D3 soccer. \",\n            bullet_point_three: \"My passion for competitive soccer has taught me to learn from my mistakes using constructive feedback to improve future action.\",\n            bullet_point_four: \"I continually strive for opportunities to improve my skills and have the opportunity to problem-solve.\",\n            bullet_point_five: \"A passion for reading books on communication, relationship building, and leadership allow me to learn continually.\",\n            job_stage: jobStage,\n            template_choices: templateChoices,\n\n        }\n    })\n\n    const onSubmit = (data) => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        switch (requestType) {\n            case 'post':\n                axios.post('/api/jobs/', data)\n                    .then(res => history.push(`/job/${res.data.id}`, {...res.data.id}))\n                    .catch(errors => console.log(errors))\n                break\n            case 'put':\n                axios.put(`/api/jobs/${jobID}`, {...data,jobID})\n                    .then(() => window.location.reload())\n                    .catch(errors => console.log(errors))\n                break\n            default:\n                history.push('/login/')\n                break\n        }\n\n    };\n\n    const template_choices = {\n        'non-technical-cover-letter': 'Non-technical Cover Letter',\n        'Standard Job Template': 'Standard Job Template',\n        'Triplebyte (message-version)': 'Triplebyte (message-version)',\n        'cover-letter-4': 'Template 4',\n        'cover-letter-5': 'Template 5',\n    }\n        \n    const job_stages = {\n        'Initial': 'Initial',\n        'Active': 'Active',\n        'Accepted': 'Accepted',\n        'Rejected': 'Rejected',\n        'No Response': 'No Response',\n    }\n\n    if (job) {\n        return (\n            <Container>\n                <Segment inverted>\n\n                    <div className=\"update-job-form\">\n                        <h1 className=\"form-title\">Update Job Info</h1>\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <label style={{ display: 'flex' }}>\n                                <p>Template Choices: </p>\n                                <select style={{ color: 'Red' }} name=\"template_choices\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                                    {Object.keys(template_choices).map((key, idx)=> (\n                                        <option value={key} key={idx } name={template_choices[key]}> {template_choices[key]} </option>\n                                    ))}\n                                </select>\n                            </label>\n                            <label style={{ display: 'flex' }}>\n                                <p>Job Stage: </p>\n                                <select style={{ color: 'black' }} name=\"job_stage\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                                    {Object.keys(job_stages).map((key, idx)=> (\n                                        <option \n                                            defaultValue={job_stages[key]} \n                                            key={idx} \n                                            name={job_stages[key]}\n                                        > {job_stages[key]} </option>\n                                    ))}\n                                </select>\n                            </label>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Job Posting Website: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Job Posting Website\"}\n                                    defaultValue={job.job_posting_website}\n                                    name={\"job_posting_website\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.job_posting_website && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Position Title: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Position Title\"}\n                                    defaultValue={job.position_title}\n                                    name={\"position_title\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.position_title && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Company: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Company\"}\n                                    defaultValue={job.company}\n                                    name={\"company\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.company && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>City: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"City\"}\n                                    defaultValue={job.city}\n                                    name={\"city\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.city && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Link: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Link\"}\n                                    defaultValue={job.link}\n                                    name={\"link\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em'}}\n                                />\n                                {errors.link && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Recruiter: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Recruiter\"}\n                                    defaultValue={job.recruiter}\n                                    name={\"recruiter\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.recruiter && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Description: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Description\"}\n                                    defaultValue={job.description}\n                                    name={\"description\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.description && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Pre Bullet Point - Paragraph one: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Pre Bullet Point - Paragraph one\"}\n                                    defaultValue={job.pre_bullet_point_paragraph_one}\n                                    name={\"pre_bullet_point_paragraph_one\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.pre_bullet_point_paragraph_one && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Pre Bullet Point - Paragraph two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Pre Bullet Point - Paragraph two\"}\n                                    name={\"pre_bullet_point_paragraph_two\"}\n                                    defaultValue={job.pre_bullet_point_paragraph_two}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.pre_bullet_point_paragraph_two && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Top Skill: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Top Skill\"}\n                                    defaultValue={job.top_skills}\n                                    name={\"top_skills\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.top_skills && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Bullet Point One: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point One\"}\n                                    defaultValue={job.bullet_point_one}\n                                    name={\"bullet_point_one\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_one && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Bullet Point Two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Two\"}\n                                    defaultValue={job.bullet_point_two}\n                                    name={\"bullet_point_two\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_two && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Bullet Point Three: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Three\"}\n                                    defaultValue={job.bullet_point_three}\n                                    name={\"bullet_point_three\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_three && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Bullet Point Four: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Four\"}\n                                    defaultValue={job.bullet_point_four}\n                                    name={\"bullet_point_four\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_four && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Bullet Point Five: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Five\"}\n                                    defaultValue={job.bullet_point_five}\n                                    name={\"bullet_point_five\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_five && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Bullet Point Six: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Six\"}\n                                    defaultValue={job.bullet_point_six}\n                                    name={\"bullet_point_six\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_six && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Bullet Point Seven: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Seven\"}\n                                    defaultValue={job.bullet_point_seven}\n                                    name={\"bullet_point_seven\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_seven && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Bullet Point Eight: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Eight\"}\n                                    defaultValue={job.bullet_point_eight}\n                                    name={\"bullet_point_eight\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_eight && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Post Bullet Point - Paragraph one: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Post Bullet Point - Paragraph one\"}\n                                    defaultValue={job.post_bullet_point_paragraph_one}\n                                    name={\"post_bullet_point_paragraph_one\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.post_bullet_point_paragraph_one && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{ width: '12em' }}>Post Bullet Point - Paragraph two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Post Bullet Point - Paragraph two\"}\n                                    defaultValue={job.post_bullet_point_paragraph_two}\n                                    name={\"post_bullet_point_paragraph_two\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.post_bullet_point_paragraph_two && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                {/* <p style={{width: '12em'}}>Choice of User: </p> */}\n                                <input\n                                    type=\"hidden\"\n                                    style={{ color: 'black' }}\n                                    placeholder={userId}\n                                    name={\"belongs_to_user\"}\n                                    defaultValue={userId}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {/* {errors.choice_of_user && \"Your input is required\"} */}\n                            </div>\n                            <input style={{ color: 'Black' }} type=\"submit\" value={buttonTxt} className=\"form-button\"/>\n                        </form>\n                    </div>\n                </Segment>\n            </Container>\n        );\n    } else {\n        return (\n            <Container>\n                <Segment inverted>\n\n                    <div className=\"create-job-form\">\n                        <h1 className=\"form-title\">Create Cover Letter</h1>\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <label style={{ display: 'flex' }}>\n                                <p style={{width: '12em'}}>Template Choices: </p>\n                                <select style={{ color: 'Red' }} name=\"template_choices\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                                    {Object.keys(template_choices).map((key, idx) => (\n                                        <option value={key} key={idx} name={template_choices[key]}> {template_choices[key]} </option>\n                                    ))}\n                                </select>\n                            </label>\n                            <label style={{ display: 'flex' }}>\n                                <p style={{width: '12em'}}>Job Stage: </p>\n                                <select style={{ color: 'black' }} name=\"job_stage\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                                    {Object.keys(job_stages).map((key, idx) => (\n                                        <option key={idx} name={job_stages[key]}> {job_stages[key]} </option>\n                                    ))}\n                                </select>\n                            </label>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Job Posting Website: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Job Posting Website\"}\n                                    name={\"job_posting_website\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.job_posting_website && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Position Title: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Position Title\"}\n                                    name={\"position_title\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.position_title && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                {/* <p style={{width: '12em'}}>Choice of User: </p> */}\n                                <input\n                                    type=\"hidden\"\n                                    style={{ color: 'black' }}\n                                    placeholder={userId}\n                                    name={\"belongs_to_user\"}\n                                    defaultValue={userId}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {/* {errors.choice_of_user && \"Your input is required\"} */}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Company: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Company\"}\n                                    name={\"company\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.company && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>City: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"City\"}\n                                    name={\"city\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.city && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Link: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Link\"}\n                                    name={\"link\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em'}}\n                                />\n                                {errors.link && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Recruiter: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Recruiter\"}\n                                    name={\"recruiter\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.recruiter && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Description: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Description\"}\n                                    name={\"description\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.description && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Pre Bullet Point - Paragraph one: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Pre Bullet Point - Paragraph one\"}\n                                    name={\"pre_bullet_point_paragraph_one\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.pre_bullet_point_paragraph_one && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Pre Bullet Point - Paragraph two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Pre Bullet Point - Paragraph two\"}\n                                    name={\"pre_bullet_point_paragraph_two\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.pre_bullet_point_paragraph_two && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Top Skill: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Top Skill\"}\n                                    name={\"top_skills\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.top_skills && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Bullet Point One: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point One\"}\n                                    name={\"bullet_point_one\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_one && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Bullet Point Two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Two\"}\n                                    name={\"bullet_point_two\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_two && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Bullet Point Three: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Three\"}\n                                    name={\"bullet_point_three\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_three && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Bullet Point Four: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Four\"}\n                                    name={\"bullet_point_four\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_four && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Bullet Point Five: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Five\"}\n                                    name={\"bullet_point_five\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_five && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Bullet Point Six: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Six\"}\n                                    name={\"bullet_point_six\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_six && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Bullet Point Seven: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Seven\"}\n                                    name={\"bullet_point_seven\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_seven && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Bullet Point Eight: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Eight\"}\n                                    name={\"bullet_point_eight\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.bullet_point_eight && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Post Bullet Point - Paragraph one: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Post Bullet Point - Paragraph one\"}\n                                    name={\"post_bullet_point_paragraph_one\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.post_bullet_point_paragraph_one && \"Your input is required\"}\n                            </div>\n                            <div style={{ display: 'flex', margin: '1em 0' }}>\n                                <p style={{width: '12em'}}>Post Bullet Point - Paragraph two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Post Bullet Point - Paragraph two\"}\n                                    name={\"post_bullet_point_paragraph_two\"}\n                                    ref={register({ required: false })}\n                                    style={{ display: 'flex', margin: '0em 1em' }}\n                                />\n                                {errors.post_bullet_point_paragraph_two && \"Your input is required\"}\n                            </div>\n                            <input style={{ color: 'Black' }} type=\"submit\" value={buttonTxt} className=\"form-button\" />\n                        </form>\n                    </div>\n                </Segment>\n            </Container>\n        )\n    }\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport { useHistory } from 'react-router-dom';\n\nimport Jobs from '../../components/jobInfo/AllJobs'\nimport Pagination from '../../components/pagination/Pagination'\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm';\n\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    List,\n    Menu,\n    Segment,\n    Sidebar,\n    Visibility,\n} from 'semantic-ui-react'\n\n\nconst JobList = () => {\n    let history = useHistory()\n\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const [jobProps, setJobProps] = useState([])\n    const [allJobs, setAllJobs] = useState([])\n    const [next, setNext] = useState([])\n    const [onPrevious, setOnPrevious] = useState([])\n    const [loaded, setLoaded] = useState({isLoaded: false})\n    const [pageIndex, setPageIndex] = useState(1)\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(\"/api/jobs/\")\n        .then( res => {\n            setAllJobs(res.data.results)\n            return res\n        })\n        .then(response => {\n            setAllJobs(response.data.results)\n            setJobProps(response.data)\n            setNext(response.data.next)\n            setCount(response.data.count)\n            setOnPrevious(response.data.previous)\n        })\n        .then(() => {\n            setLoaded({isLoaded: true})\n        })\n        .catch(err => {\n            // alert(err)\n        })\n    }, [])\n    \n    if (loaded.isLoaded) {\n        if (allJobs.length) {\n            return (\n                <Container>\n                    <Segment>\n                        <Header\n                            as='h1'\n                            content='All Jobs'\n                            // inverted\n                            style={{\n                                fontSize: '2em',\n                                // fontWeight: 'normal',\n                                // marginBottom: 0,\n                                // marginTop: '.5em',\n                            }}\n                        />\n                        <Segment style={{fontSize: '2em'}}>\n                            <Jobs jobs={allJobs} jobProps={jobProps} />\n                        </Segment>\n                        <Segment style={{ fontSize: '1em' }}>\n                            <Pagination\n                                pageIndex={pageIndex}\n                                total={count}\n                                perPage={20}\n                                onNext={next}\n                                onPrevious={onPrevious}\n                                setAllJobs={setAllJobs}\n                                setNext={setNext}\n                                setOnPrevious={setOnPrevious}\n                                setPageIndex={setPageIndex}\n                            />\n                        </Segment>\n                    </Segment>\n                </Container>\n            )\n        } else {\n            return (\n                <div>\n                    <Container>\n                        <Header \n                            as='h1'\n                            content='No Cover Letters Exist'\n                            // inverted\n                            style={{\n                                fontSize: '2em',\n                                // fontWeight: 'normal',\n                                // marginBottom: 0,\n                                // marginTop: '.5em',\n                            }}\n                        />\n                        <Header \n                            as='h3'\n                            content='Please create one below:'\n                            // inverted\n                            style={{\n                                fontSize: '2em',\n                                // fontWeight: 'normal',\n                                // marginBottom: 0,\n                                // marginTop: '.5em',\n                            }}\n                        />\n                        <Segment>\n                            <JobForm requestType=\"post\" jobID={null} buttonTxt=\"Create Cover Letter\" />\n                        </Segment>\n\n                    </Container>\n\n\n                </div>\n            )\n        }\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobList","export const formattedJobData = {\n    'id': 'Id',\n    'form_creation_date': 'Creation Date',\n    'template_choices': 'Template Choice',\n    'job_stage': 'Job Stage',\n    'choice_of_user': 'Choice of User',\n    'job_posting_website': 'Job Website',\n    'position_title': 'Position Title',\n    'company': 'Company',\n    'city': 'City',\n    'link': 'Job Link',\n    'recruiter': 'Recruiter',\n    'description': 'Description',\n    'pre_bullet_point_paragraph_one': 'Pre Paragraph One',\n    'pre_bullet_point_paragraph_two': 'Pre Paragraph Two',\n    'top_skills': 'Top Skills',\n    'bullet_point_one': 'Bullet Point One',\n    'bullet_point_two': 'Bullet Point Two',\n    'bullet_point_three': 'Bullet Point Three',\n    'bullet_point_four': 'Bullet Point Four',\n    'bullet_point_five': 'Bullet Point Five',\n    'bullet_point_six': 'Bullet Point Six',\n    'bullet_point_seven': 'Bullet Point Seven',\n    'bullet_point_eight': 'Bullet Point Eight',\n    'post_bullet_point_paragraph_one': 'Post Paragraph One',\n    'post_bullet_point_paragraph_two': 'Post Paragraph Two',\n    'modified_date': 'Modified Date',\n    'created_date': 'Created Date',\n    'belongs_to_user': 'Belongs To User ID',\n}\n\nexport const formattedUserData = {\n    \"first_name\": \"First Name\",\n    \"middle_name\":\"Middle Name\",\n    \"last_name\":\"Last Name\",\n    \"preferred_name\":\"Preferred Name\",\n    \"phone_number\":\"Phone Number Name\",\n    \"linkedin\":\"Linkedin\",\n    \"github\":\"Github\",\n    \"portfolio_website\":\"Portfolio Website\",\n    \"street_address\":\"Stree Address\",\n    \"city_address\":\"City Address\",\n    \"state_address\":\"State Address\",\n    \"zip_code\":\"Zip Code\",\n\n}","import React from \"react\";\nimport {formattedJobData} from \"./formattedData\";\nimport {Link} from 'react-router-dom'\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab\n} from 'semantic-ui-react'\n\nconst Jobs = props => {\n    \n    const jobDetail = props.jobDetail\n    const jobDetailKeys = Object.keys(jobDetail)\n\n    return (\n        <Container className=\"job-detail\">\n            <Header\n                as='h1'\n                inverted\n                content='Job Detail'\n                // inverted\n                style={{\n                    fontSize: '2em',\n                    // fontWeight: 'normal',\n                    // marginBottom: 0,\n                    // marginTop: '.5em',\n                }}\n            />\n            <Segment inverted>\n                {jobDetailKeys.map(key => (\n                    <div className=\"job-detail-container\" key={`${key} - container`}>\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p key={`${key}`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p className=\"job-info-data\" key={`key value - ${key}`} key={`${key} - ${key}`}>{jobDetail[key]}</p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p key={`${key} + 1`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p><Link to={jobDetail[key]} className=\"job-info-data\" key={`key value - ${key} + 1`} key={`${key} - ${key}`}>{jobDetail[key]}</Link></p> : null }\n                    </div>\n               ))}\n            </Segment>\n        </Container>\n    );\n};\n\n\nexport default Jobs;\n\n\n\n","const CoverLetter = (props) => {\n    const job = props.job \n    // const user = props.user\n    return (\n        <div>\n            <h1>Cover Letter</h1>\n            {job.position_title}\n        </div>\n    )\n}\n\nexport default CoverLetter","\n\n\n\nconst NonTechnicalCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Non Tech Cover Letter</h1>\n                    <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3>\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            {user.email ? <p className=\"com\">{user.email}</p> \n                            :\n                            null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a> | </p> \n                            :\n                            null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a> | </p> \n                            :\n                            null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a> | </p> \n                            :\n                            null}\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter }:</p> \n                                :\n                                <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                Thank you for the opportunity to apply for the {` ${job.position_title} `} \n                                role at your company - { job.company }.\n                                After reviewing your job description, it's clear that you're looking\n                                for a candidate that is familiar with\n                                the responsibilities associated with the \n                                {job.position_title ? ` ${job.position_title} ` : null }\n                                 role and can perform them confidently. Given these requirements,\n                                I am confident that I can do the job adeptly and fulfill the above\n                                expectations successfully.\n                            </p>\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <br/>\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title } ` : null }\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email } to arrange a convenient time to chat.\n                            </p>\n                            <br/>\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely, \n                                <br/>\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                :\n                                `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n    \n            </div>\n        )\n    }\n}\n\nexport default NonTechnicalCoverLetter","const StandardCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Standard Letter</h1>\n                    <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3>\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            {user.email ? <p className=\"com\">{user.email}</p>\n                                :\n                                null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a> | </p>\n                                :\n                                null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a> | </p>\n                                :\n                                null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a> | </p>\n                                :\n                                null}\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter}:</p>\n                                    :\n                                    <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                As advertised on the {job.job_posting_website ? ` ${job.job_posting_website } ` : ` ${ job.company } ` } website, your need for a\n                                {` ${job.position_title} ` } is an excellent match to my background \n                                and career goals. With my strong education and experience, I am \n                                confident I can make an immediate contribution given the opportunity.\n                            </p>\n                            {job.pre_bullet_point_paragraph_one ? <p>{job.pre_bullet_point_paragraph_one}</p> : null}\n                            {job.pre_bullet_point_paragraph_two ? <p>{job.pre_bullet_point_paragraph_two}</p> : null}\n                            <p>Highlights of my qualifications most relevant to your needs include:</p>\n                            <p> * {job.top_skills}</p>\n                            {job.bullet_point_one ? <p> * {job.bullet_point_one }</p> : null }\n                            {job.bullet_point_two ? <p> * {job.bullet_point_two }</p> : null }\n                            {job.bullet_point_three ? <p> * {job.bullet_point_three }</p> : null }\n                            {job.bullet_point_four ? <p> * {job.bullet_point_four }</p> : null }\n                            {job.bullet_point_five ? <p> * {job.bullet_point_five }</p> : null }\n                            {job.bullet_point_six ? <p> * {job.bullet_point_six }</p> : null }\n                            {job.bullet_point_seven ? <p> * {job.bullet_point_seven }</p> : null }\n                            {job.bullet_point_eight ? <p> * {job.bullet_point_eight }</p> : null }\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <p>These proven abilities can contribute to {`${job.company} `}'s continued success. I would welcome the opportunity to discuss my background with you in detail and to learn more about your company and its goals. </p>\n                            <br />\n                            {job.post_bullet_point_paragraph_one ? <p>{job.post_bullet_point_paragraph_one}</p> : null}\n                            {job.post_bullet_point_paragraph_two ? <p>{job.post_bullet_point_paragraph_two}</p> : null}\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title} ` : null}\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email} to arrange a convenient time to chat.\n                            </p>\n                            <br />\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely,\n                                <br />\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                    :\n                                    `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default StandardCoverLetter","const TriplebyteCoverLetter = (props) => {\n    const job = props.job \n    const user = props.user\n    return (\n        <div>\n            <h1> Triplebyte Cover Letter</h1>\n            {job.position_title}\n        </div>\n    )\n}\n\nexport default TriplebyteCoverLetter","import CoverLetter from '../../components/cover_letter/templates/CoverLetter'\nimport NonTechnicalCoverLetter from '../../components/cover_letter/templates/NonTechnicalCoverLetter'\nimport StandardCoverLetter from '../../components/cover_letter/templates/StandardJobTemplate'\nimport TriplebyteCoverLetter from '../../components/cover_letter/templates/TriplebyteCoverLetter'\n\nexport const determineCoverLetter = (coverLetter, job, user) => {\n    \n    switch (coverLetter) {\n        case \"non-technical-cover-letter\":\n            return <NonTechnicalCoverLetter job={job} user={user} />\n        case 'cover-letter':\n            return <CoverLetter job={job} user={user}/>\n        case 'Triplebyte (message-version)':\n            return <TriplebyteCoverLetter job={job} user={user}/>\n        case 'Standard Job Template':\n            return <StandardCoverLetter job={job} user={user}/>\n        default:\n            return <NonTechnicalCoverLetter job={job} user={user} />;\n    }\n}","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport { useForm } from 'react-hook-form'\nimport { determineCoverLetter } from './determineCoverLetterFormat'\nimport { Link } from 'react-router-dom'\n\n\n\nconst CoverLetterChoiceContainer = ({job, userId}) => {\n    const accessToken = localStorage.getItem(\"access_token\")\n    const [user, setUser] = useState({})\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [currentCoverLetterChoice, setCurrentCoverLetterChoice] = useState(job.template_choices)\n    const { register, handleSubmit } = useForm({\n        defaultValues: {\n            template_choice: job.template_choices,\n        }\n    })\n\n    const template_choices = {\n        'non-technical-cover-letter': 'Non-technical Cover Letter',\n        'Standard Job Template': 'Standard Job Template',\n        'Triplebyte (message-version)': 'Triplebyte (message-version)',\n        'cover-letter': 'Cover Letter',\n        'cover-letter-4': 'Template 4',\n        'cover-letter-5': 'Template 5',\n    }\n\n    const onSubmit = (data) => {\n        setCurrentCoverLetterChoice(data['template_choice'])\n    }\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}`)\n            .then(res => {\n                setUser(res.data)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(err => {\n                setLoaded({ isLoaded: false })\n            })\n    }, [])\n\n    if (loaded.isLoaded) {\n        return (\n            <div className=\"cover-letter-display-container\">\n                <div>\n                    <Link to=\"/job/form\">Create another cover letter?</Link>\n                </div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <label>\n                        <p>Template Choices: </p>\n                        <select style={{ color: 'Red' }} name=\"template_choice\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                            {Object.keys(template_choices).map((key, idx) => (\n                                <option value={key} key={idx} name={template_choices[key]}> {template_choices[key]} </option>\n                                ))}\n                        </select>\n                    </label>\n                    <input className=\"cover-letter-display-button\" type=\"submit\" value=\"Change Cover Letter\" />\n                </form>\n                <div>\n                    {determineCoverLetter(currentCoverLetterChoice, job, user)}\n                </div>\n            </div>\n    \n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CoverLetterChoiceContainer","import React, { useState, useEffect } from 'react'\nimport JobDetail from '../../components/jobInfo/JobDetail'\nimport axios from 'axios'\n\nimport { useHistory, useParams } from 'react-router'\nimport { useForm } from 'react-hook-form'\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm'\nimport { confirmAlert, alert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport CoverLetterChoiceContainer from '../cover_letters/CoverLetterDisplayContainer'\n\n\nconst JobDetailView = () => {\n    const [job, setjob] = useState([])\n    const [userId, setUserId] = useState([])\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const { handleSubmit } = useForm()\n    const paramsJobId = useParams().jobID\n    const history = useHistory()\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/jobs/${paramsJobId}/`, {...paramsJobId})\n            .then(res => {\n                setjob(res.data)\n                setUserId(res.data.belongs_to_user)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(error => {\n                setLoaded({isLoaded: false})\n                alert(error)\n                history.push('/login')\n            })\n    }, [])\n\n    const onSubmit = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: `Are you sure you want to delete ${job.position_title} at ${job.company}?`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`/api/jobs/${paramsJobId}/`, {...paramsJobId})\n                            .then(() => history.push('/all-jobs'))\n                            .catch(error => console.log(error))\n                    }\n                },\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n\n    if (loaded.isLoaded) {\n        return (\n            <div>\n                <div className=\"hide-buttons\">\n                    <button id=\"show-job-update-button\" onClick={() => reveal('update-job-container', 'show-job-update-button')}>Show Update Form</button>\n                    <button id=\"show-cover-letter-button\" onClick={() => reveal('cover-letter-container', \"show-cover-letter-button\")}>Show Cover Letter</button>\n                    <button id=\"hide-job-details-button\" onClick={() => reveal('job-detail', \"hide-job-details-button\")}>Hide Job Details</button>\n                </div>\n                <div className=\"job-container\">\n                    <div className=\"job-and-cover-letter-container\">\n                        <div>\n                            <JobDetail jobDetail={job} />\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"delete-button\">\n                                <button className=\"btn-warning\" type=\"submit\">Delete</button>\n                            </form>\n\n                        </div>\n                        <div className=\"update-job-container\">\n                            <JobForm requestType=\"put\" job={job} buttonTxt=\"Update\" />\n                        </div>\n                    </div>\n                    <div className=\"cover-letter-container\" id=\"cover-letter-choice\">\n                        <CoverLetterChoiceContainer job={job} userId={userId} />\n                    </div>\n                    \n                </div>\n                {/* <div className=\"job-container\">\n                    \n                </div> */}\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobDetailView\n\n\nconst reveal = (divToHide, button) => {\n    const div = document.getElementsByClassName(divToHide)[0]\n    if (divToHide !== \"job-detail\") {\n        div.style.display === '' ? div.style.display = 'block' : div.style.display = ''\n    } else {\n        div.style.display === 'none' ? div.style.display = 'block' : div.style.display = 'none'\n    } \n\n\n    let buttonTxt = document.getElementById(button)\n    if (buttonTxt.innerText.includes(\"Hide\")) {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Hide\", \"Show\")\n    } else {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Show\", \"Hide\")\n    }\n}","import axios from 'axios'\n\nimport { authCheckState} from './actions/Auth';\n\nconst axiosInstance = axios.create({\n    // baseURL: '',\n    timeout: 3000,\n    headers: {\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    },\n\n});\n\naxios.interceptors.response.use(response => \n    {\n        return response;\n    }, error => {\n        const originalRequest = error.config;\n        if (error !== undefined && error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\n            const refresh_token = localStorage.getItem('refresh_token');\n            const access_token = localStorage.getItem('access_token');\n            \n            return axiosInstance\n                .post('/api/token/refresh/', { refresh: refresh_token, access_token: access_token })\n                .then(response => {\n                    localStorage.setItem('access_token', response.data.access);\n                    axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    originalRequest.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    return axiosInstance(originalRequest);\n                })\n                .catch(err => {\n                    authCheckState()\n                });\n        }\n        \n        return Promise.reject(error);\n    }, () => {\n        // console.log(`checked state in the axiosAPI`)\n        authCheckState()\n    }\n    \n);\n\n\nexport default axiosInstance\n","export const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"","\nimport axios from 'axios'\n\nimport axiosInstance from '../axiosApi'\nimport * as actionTypes from './ActionTypes'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, refresh_token) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        access_token: token,\n        refresh_token: refresh_token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user')\n    localStorage.removeItem('token')\n    localStorage.removeItem('access_token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('refresh_token')\n    authCheckState()\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const authLogin = (username, password, setErrorState = null, justSignedUp = false, history = null) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(\"/api/token/\", {\n            username: username,\n            password: password\n        }).then(response => {\n            axiosInstance.defaults.headers['Authorization'] = `Bearer ${response.data.access}`;\n            const token = response.data.access;\n            const refresh_token = response.data.refresh;\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n            dispatch(authSuccess(token, refresh_token));\n            if (justSignedUp) {\n                history.push(\"signup-user-details/\")\n                // window.location.href=\"signup-user-details/\"\n            } else {\n                // window.location.href=\"/all-jobs/\"\n                history.push(\"all-jobs/\")\n            }\n\n        }).catch(err => {\n            if (setErrorState !== null){\n                setErrorState(\"Failed to log in. Try again or sign up.\")\n            }\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const authSignUp = ({ ...data }, setErrorMessage, justSignedUp, history) => {\n    const username = data.username\n    const password1 = data.password\n    const password2 = data.confirm_password\n    const email = data.email\n\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(response => {\n            const token = response.data.key;\n            // const expirationDate = new Date(new Date().getTime() + 5000 * 1000);\n            const accessToken = response.data.access;\n            const refreshToken = response.data.refresh;\n            localStorage.setItem('access_token', accessToken);\n            localStorage.setItem('refresh_token', refreshToken);\n            localStorage.setItem('token', token);\n            dispatch(authLogin(username, password1, null, true, history))\n            dispatch(authSuccess(accessToken, refreshToken));\n        }).catch(err => {\n            setErrorMessage(\"Either the password was too common (i.e password123), the Username taken, or the Email was. Please try again.\")\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('access_token')\n        if (token === undefined) {\n            dispatch(logout())\n        } \n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}","import React, { useCallback, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from \"../../store/actions/Auth\"\nimport { useHistory } from 'react-router-dom';\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm'\nimport NotLoggedInPage from '../../components/NotLoggedInPage';\nimport { Segment } from 'semantic-ui-react';\n\n\nconst CoverLetterView = () => {\n    const paramsJobId = null\n    let history = useHistory()\n    const props = useSelector(state => (\n        {\n            ...state, \n            isAuthenticated: state.token !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    return (\n        <Segment inverted>\n            <JobForm requestType=\"post\" jobID={paramsJobId} buttonTxt=\"Create Cover Letter\"/>\n        </Segment>\n    )\n}\n\nexport default CoverLetterView","// import { Form, Input, Button, Checkbox, Spin, Space, Alert } from 'antd';\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab, Divider\n} from 'semantic-ui-react'\n\nimport {Nav} from 'react-bootstrap';\nimport React, { useEffect, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as actions from '../../store/actions/Auth'\nimport { useHistory }  from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\n\n\n\nconst Login = () => {\n    const history = useHistory()\n    const [loading, setLoading] = useState(false)\n    const props = useSelector(state => (\n        { ...state, \n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const {register, handleSubmit} = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        (username, password) => dispatch(actions.authLogin(username, password, setErrorMessage, false, history))\n    )\n\n    const [errorMessage, setErrorMessage] = useState(null)\n    \n    const onFinish = (values) => {\n        setLoading(true)\n        try {\n            onAuth(values.username, values.password)\n        } catch {\n            setErrorMessage(\"Please try again or signup.\")\n        }\n        setLoading(false)\n    };\n\n    \n    return (\n        <div className=\"login-form\">\n            <Segment size=\"large\">\n                <Segment placeholder inverted style={{minWidth: \"10vh\"}}>\n                    <Grid columns={2} relaxed='very' stackable>\n                        <Grid.Column>\n                            <Form onSubmit={handleSubmit(onFinish)} loading={props.loading} error={errorMessage !== null} inverted>\n                                {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                <Form.Field required>\n                                    <label>Username</label>\n                                    <input\n                                        icon='user'\n                                        label='Username'\n                                        name={'username'}\n                                        placeholder='Username'\n                                        autoComplete=\"username\"\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Password</label>\n                                    <input\n                                        icon='lock'\n                                        label='Password'\n                                        name={'password'}\n                                        autoComplete=\"current-password\"\n                                        type='password'\n                                        ref={register()}\n                                    />\n\n                                </Form.Field>\n\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Login</Button>\n                            </Form>\n                        </Grid.Column>\n\n                        <Grid.Column verticalAlign='middle'>\n                            <Button content='Sign up' icon='signup' size='big' onClick={() => history.push(\"/signup\")}/>\n                        </Grid.Column>\n                    </Grid>\n                    <Divider vertical inverted>Or</Divider>\n                </Segment>\n            </Segment>\n        </div>\n    );\n};\n\n\nexport default Login","import React, {useCallback, useState } from 'react'\nimport * as actions from '../../../store/actions/Auth'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    Form, Message,Button, \n    Grid, Segment, Table,  Divider\n} from 'semantic-ui-react'\n\n// import {\n//     Form,\n//     Input,\n//     Select,\n//     Button,\n// } from 'antd';\nimport { Nav } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\n\nconst RegistrationForm = () => {\n    const history = useHistory()\n    const [loading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const props = useSelector(state => (\n        {\n            ...state,\n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const { register, handleSubmit } = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        ({ ...values }) => dispatch(actions.authSignUp(values, setErrorMessage, true, history))\n    )\n\n    const onSubmit = (values) => {\n        const data = {...values}\n        const passwordCheck = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n       if (data.password === data.confirm_password) {\n            if (data.password.length > 5) {\n                if (data.password.match(passwordCheck)){\n                    onAuth({...values})\n                    \n                } else {\n                    setErrorMessage(\"Password needs to contain at least one numeric digit, one uppercase and one lowercase letter\")\n                }\n            } else {\n                setErrorMessage(\"Password needs to be greater than 5 characters\")\n            }\n       } else {\n           setErrorMessage(\"Passwords don't match!\")\n       }\n        // history.push('/')\n    };\n\n\n    return (\n        <div className=\"login-form\">\n            <Segment size=\"large\">\n                <Segment placeholder inverted>\n                    <Grid stackable >\n                        <Grid.Column stackable>\n                            <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                                <Table striped inverted textAlign=\"center\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Username: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Username:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"username\"}\n                                                        ref={register()}\n                                                        minLength={4}\n                                                        maxLength={20}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Email: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Email:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"email\"\n                                                        name={\"email\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Password: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Password:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"password\"\n                                                        name={\"password\"}\n                                                        minLength={6}\n                                                        maxLength={20}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Confirm Password: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Confirm Password:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"password\"\n                                                        minLength={6}\n                                                        maxLength={20}\n                                                        name={\"confirm_password\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                    <Table.Footer>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                                {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                            </Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Footer>\n                                </Table>\n                            </Form>\n                        </Grid.Column>\n                    </Grid>\n                    <Divider horizontal inverted>Or</Divider>\n                    <Grid.Column verticalAlign='middle'>\n                        <Button content='Login' icon='signup' size='medium' onClick={() => history.push(\"/login\")}/>\n                    </Grid.Column>\n                </Segment>\n            </Segment>\n        </div>\n    );\n};\n\nexport default RegistrationForm","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport {logout} from '../../store/actions/Auth'\nimport {Grid, Container, Segment, Header, Menu} from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\nimport axiosInstance from '../../store/axiosApi'\n\nconst Shell = props => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const userId = jwtDecode(localStorage.getItem('access_token')).user_id\n    const [user, setUser] = useState({})\n    const [loaded, isLoaded] = useState(false)\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n        // axios.get(`${url}/api/users/${userId}`)\n        axios.get(`/api/users/${userId}`)\n        .then(resp => {\n            setUser(resp.data)\n            // history.push({user: resp.data})\n        })\n        .then(() => {\n            isLoaded(true)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }, [localStorage.getItem('access_token')])\n\n        return (    \n            <Segment vertical>\n                <Container>\n                    <Grid container stackable verticalAlign='top' divided columns={2}>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                <Header as=\"h3\">Account</Header>\n                                <Menu vertical fluid>\n                                    <Menu.Item \n                                        onClick={() => history.push(\"/user-admin/change-email/\", {user: user})} \n                                        active={history.location.pathname === \"/user-admin/change-email/\"}\n                                        name=\"change-email\">\n                                        Change Email\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/user-admin/change-password/\", { user: user })}\n                                        active={history.location.pathname === \"/user-admin/change-password/\"}\n                                        name=\"change-password\">\n                                        Change Password\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/user-admin/change-account-info/\", { user: user })}\n                                        active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                        name=\"change-account-info\">\n                                        Change Account Info\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => dispatch(logout())}\n                                        name=\"logout\">\n                                        Logout\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Column>\n                            <Grid.Column width={12}>\n                                {props.children}\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n}\n\nexport default Shell\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Button, Table\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\nimport Shell from '../../containers/Account/Shell';\n\n\n\nconst ChangeEmail = (props) => {\n    const [user, setUser] = useState(\"\")\n    const [newEmail] = useState(\"\")\n    const [confirmEmail] = useState(\"\")\n    const [error, setError] = useState({})\n    const {register, handleSubmit} = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(false)\n\n    useEffect(() => {\n        axios.get(`/api/users/${userId}/`, { userId: userId })\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n\n    const onSubmit = data => {\n        const email = data.newEmail\n        const confirmEmail = data.confirmEmail\n        if (data.newEmail !== '' || data.confirmEmail !== '') {\n            if (email === confirmEmail) {\n                if (email !== user.email) {\n                    setLoading(true)\n                    data = {email: email}\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    axios.patch(`/api/users/${user.id}/`, data)\n                    .then(resp => {\n                        setUser(resp.data)\n                    })\n                    .catch(err => {\n                        setError(err.Message)\n                    })\n                    setLoading(false)\n                } else {\n                    setError(`Your email is already ${email}`)\n                }\n            } else {\n                setError(\"Emails don't match!\")\n            }\n        } else {\n            setError(\"Fields are empty!\")\n\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Email</Table.HeaderCell>\n                            <Table.HeaderCell>New Email</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {/* <Header as=\"h2\">Change Email</Header> */}\n                        {/* <br /> */}\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Email: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <Input\n                                            // placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.email}\n                                            type=\"text\"\n                                            name={\"currentEmail\"}\n                                            ref={register({ name: \"currentEmail\" })}\n                                            disabled\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                    <Form.Field>Change Email</Form.Field>\n                                </Table.Cell>\n                                <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Email</label>\n                                    <input\n                                        placeholder=\"New Email\"\n                                        defaultValue={newEmail}\n                                        type=\"email\"\n                                        name={\"newEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Email</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Email\"\n                                        defaultValue={confirmEmail}\n                                        dependencies={[\"newEmail\"]}\n                                        type=\"email\"\n                                        name={\"confirmEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n \n\nexport default ChangeEmail","\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Icon,\n    List,\n    Menu,\n    Segment,\n    Sidebar,\n    Visibility,\n} from 'semantic-ui-react'\n\n\n/* Heads up!\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\n * components for such things.\n */\nconst HomepageHeading = ({ mobile }) => {\n    const history = useHistory()\n    return(\n        <Container text>\n            <Header\n                as='h1'\n                content='Unique Cover Letter Generator'\n                inverted\n                style={{\n                    fontSize: mobile ? '2em' : '4em',\n                    fontWeight: 'normal',\n                    marginBottom: 0,\n                    marginTop: mobile ? '1.5em' : '3em',\n                }}\n            />\n            <Header\n                as='h2'\n                content='Want to save time while applying to jobs?'\n                inverted\n                style={{\n                    fontSize: mobile ? '1.5em' : '1.7em',\n                    fontWeight: 'normal',\n                    marginTop: mobile ? '0.5em' : '1.5em',\n                }}\n            />\n            <Button primary size='huge' onClick={() => history.push('/all-jobs/')}>\n                Get Started\n                <Icon name='right arrow' />\n            </Button>\n        </Container>\n    )\n}\n\n\nHomepageHeading.propTypes = {\n    mobile: PropTypes.bool,\n}\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n    state = {}\n\n    hideFixedMenu = () => this.setState({ fixed: false })\n    showFixedMenu = () => this.setState({ fixed: true })\n\n    render() {\n        const { children } = this.props\n        const { fixed } = this.state\n\n        return (\n            <Container>\n                <Visibility\n                    once={false}\n                    onBottomPassed={this.showFixedMenu}\n                    onBottomPassedReverse={this.hideFixedMenu}\n                >\n                    <Segment\n                        inverted\n                        textAlign='center'\n                        style={{ minHeight: 700, padding: '1em 0em' }}\n                        vertical\n                    >\n                        <HomepageHeading />\n                    </Segment>\n                </Visibility>\n\n                {children}\n            </Container>\n        )\n    }\n}\n\nDesktopContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n    state = {}\n\n    handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n    handleToggle = () => this.setState({ sidebarOpened: true })\n\n    render() {\n        const { children } = this.props\n        const { sidebarOpened } = this.state\n\n        return (\n            <Container as={Sidebar.Pushable} at='mobile'>\n                <Sidebar.Pushable>\n                    <Sidebar\n                        as={Menu}\n                        animation='overlay'\n                        inverted\n                        onHide={this.handleSidebarHide}\n                        vertical\n                        visible={sidebarOpened}\n                    >\n                        <Menu.Item as='a' active>\n                            Home\n                        </Menu.Item>\n                        <Menu.Item as='a'>Work</Menu.Item>\n                        <Menu.Item as='a'>Company</Menu.Item>\n                        <Menu.Item as='a'>Careers</Menu.Item>\n                        <Menu.Item as='a'>Log in</Menu.Item>\n                        <Menu.Item as='a'>Sign Up</Menu.Item>\n                    </Sidebar>\n\n                    <Sidebar.Pusher dimmed={sidebarOpened}>\n                        <Segment\n                            inverted\n                            textAlign='center'\n                            style={{ minHeight: 350, padding: '1em 0em' }}\n                            vertical\n                        >\n                            <Container>\n                                <Menu inverted pointing secondary size='large'>\n                                    <Menu.Item onClick={this.handleToggle}>\n                                        <Icon name='sidebar' />\n                                    </Menu.Item>\n                                    <Menu.Item position='right'>\n                                        <Button as='a' inverted>\n                                            Log in\n                                        </Button>\n                                        <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                                            Sign Up\n                                        </Button>\n                                    </Menu.Item>\n                                </Menu>\n                            </Container>\n                            <HomepageHeading mobile />\n                        </Segment>\n\n                        {children}\n                    </Sidebar.Pusher>\n                </Sidebar.Pushable>\n            </Container>\n        )\n    }\n}\n\nMobileContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst ResponsiveContainer = ({ children }) => (\n    /* Heads up!\n     * For large applications it may not be best option to put all page into these containers at\n     * they will be rendered twice for SSR.\n     */\n        <DesktopContainer>{children}</DesktopContainer>\n)\n\nResponsiveContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst Homepage = () => (\n    <ResponsiveContainer>\n        <Segment style={{ padding: '8em 0em' }} vertical inverted>\n            <Grid container stackable verticalAlign='middle'>\n                <Grid.Row>\n                    <Grid.Column width={8}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            We Help Companies and Companions\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            We can give your company superpowers to do things that they never thought possible.\n                            Let us delight your customers and empower your needs... through pure data analytics.\n                        </p>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            We Make Bananas That Can Dance\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            Yes that's right, you thought it was the stuff of dreams, but even bananas can be\n                            bioengineered.\n                        </p>\n                    </Grid.Column>\n                    <Grid.Column floated='right' width={6}>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column textAlign='center'>\n                        <Button size='huge'>Check Them Out</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n\n        <Segment style={{ padding: '0em' }} vertical inverted>\n            <Grid celled='internally' columns='equal' stackable>\n                <Grid.Row textAlign='center'>\n                    <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            \"What a Company\"\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n                    </Grid.Column>\n                    <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            \"I shouldn't have gone with their competitor.\"\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            <b>Nan</b> Chief Fun Officer Acme Toys\n                        </p>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n\n        <Segment style={{ padding: '8em 0em' }} vertical inverted>\n            <Container text>\n                <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                    Breaking The Grid, Grabs Your Attention\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Instead of focusing on content creation and hard work, we have learned how to master the\n                    art of doing nothing by providing massive amounts of whitespace and generic content that\n                    can seem massive, monolithic and worth your attention.\n                </p>\n                <Button as='a' size='large'>\n                    Read More\n                </Button>\n\n                <Divider\n                    as='h4'\n                    className='header'\n                    horizontal\n                    style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n                >\n                    <a href='#'>Case Studies</a>\n                </Divider>\n\n                <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                    Did We Tell You About Our Bananas?\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\n                    it's really true. It took years of gene splicing and combinatory DNA research, but our\n                    bananas can really dance.\n                </p>\n                <Button as='a' size='large'>\n                    I'm Still Quite Interested\n                </Button>\n            </Container>\n        </Segment>\n\n    </ResponsiveContainer>\n)\n\nexport default Homepage","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport { logout } from '../../store/actions/Auth'\nimport { Grid, Container, Segment, Header, Menu } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\n\n\nconst AccountDashboard = () => {\n    const [user, setUser] = useState({})\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(true)\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}`, {userId: userId})\n            .then(resp => {\n                console.log(resp)\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    if (loaded) {\n        return (\n            <div class=\"outer-semantic\">\n                <Segment placeholder className=\"outer-semantic\">\n                    <Container text textAlign=\"center\">\n                        <Grid container divided textAlign=\"center\" >\n                            {/* <Grid.Row> */}\n                                {/* <Grid.Column width={8}> */}\n                                    <Header as=\"h3\">Account</Header>\n                                    <Menu vertical fluid>\n                                        <Menu.Item\n                                            onClick={() => history.push(\"/user-admin/change-email/\", { user: user, previousLocation: \"/admin/change-email/\"})}\n                                            active={history.location.pathname === \"/user-admin/change-email/\"}\n                                            name=\"change-email\">\n                                            Change Email\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/user-admin/change-password/\", { user: user, previousLocation: \"/admin/change-password/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-password/\"}\n                                            name=\"change-password\">\n                                            Change Password\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/user-admin/change-account-info/\", { user: user, previousLocation: \"/admin/change-info/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                            name=\"change-account-info\">\n                                            Change Account Info\n                                        </Menu.Item>\n                                            {user.is_superuser ? <Menu.Item onClick={() => history.push(\"/admin/\")}\n                                            active={history.location.pathname === \"/admin/\"}\n                                            name=\"change-account-info\">\n                                            Change Account Info\n                                        </Menu.Item> : null}\n                                        <Menu.Item onClick={() => dispatch(logout())}\n                                            name=\"logout\">\n                                            Logout\n                                        </Menu.Item>\n                                    </Menu>\n                                {/* </Grid.Column> */}\n                            {/* </Grid.Row> */}\n                        </Grid>\n                    </Container>\n                </Segment>\n            </div>\n        )\n    } else {\n        return(\n            <Segment vertical>\n                <Container>\n                    <Grid container stackable verticalAlign='top' divided columns={2}>\n                        <Grid.Column width={4}>\n                            Loading\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n    }\n}\n\nexport default AccountDashboard","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\n\nimport axios from 'axios'\n\nimport jwtDecode from 'jwt-decode';\nimport Shell from '../../containers/Account/Shell';\n\n\n\n\nconst ChangePassword = (props) => {\n    const [newPassword, setNewPassword] = useState(\"\")\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [error, setError] = useState({})\n    const [successMessage, setSuccessMessage] = useState(null)\n    const { register, handleSubmit } = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n\n\n\n    const onSubmit = data => {\n        const oldPassword = data.oldPassword\n        const new_password = data.new_password1\n        const newPassword2 = data.new_password2\n        if (new_password !== '' || newPassword2 !== '' || oldPassword) {\n            if (new_password === newPassword2) {\n                    setLoading(true)\n                    const backendData = { old_password: oldPassword, new_password: new_password }\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    // axios.patch(`${url}/api/change-password/`, backendData)\n                    axios.patch(`/api/change-password/`, backendData)\n                        .then(resp => {\n                            setSuccessMessage(\"You have successfully changed the password!\")\n                            setError({})\n                        })\n                        .catch(err => {\n                            setError(\"Woops seems like something went wrong. Did you enter the correct current password?\")\n                            setSuccessMessage(null)\n                        })\n                    setLoading(false)\n            } else {\n                setError(\"Passwords don't match!\")\n                setSuccessMessage(null)\n            }\n        } else {\n            setError(\"Fields are empty!\")\n            setSuccessMessage(null)\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null} success={successMessage !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Password</Table.HeaderCell>\n                            <Table.HeaderCell>New Password</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Password: </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field>\n                                    <label>Current Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Current Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"oldPassword\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                <Form.Field>New Password</Form.Field>\n                            </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"New Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"new_password1\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Password\"\n                                        defaultValue={confirmPassword}\n                                        dependencies={[\"newPassword\"]}\n                                        type=\"password\"\n                                        name={\"new_password2\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                {successMessage && (<Message success heading=\"Success\" content={successMessage} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n\n\nexport default ChangePassword","import React, { useEffect, useState } from 'react'\nimport { Form, Message, \n        Header, Button, Grid, \n        Container, Segment, Menu, \n        Table, Icon, Label } from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\nimport { confirmAlert, alert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport Shell from '../../containers/Account/Shell';\nimport { useHistory } from 'react-router-dom';\n\n\n\nconst ChangeAccountInfo = (props) => {\n    const [user, setUser] = useState({})\n    const history = useHistory()\n    const [error, setError] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n\n    const onSubmit = data => {\n        setLoading(true)\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`/api/users/${user.id}/`, data)\n            .then(resp => {\n                setUser(resp.data)\n                // history.go()\n            })\n            .catch(err => {\n                setError(err.Message)\n            })\n        setLoading(false)\n    }\n\n    const onDelete = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: `Are you sure you want to delete your account ${user.first_name} ${user.last_name}? This is permenant and there is no coming back.`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`/api/users/${user.id}/`, { ...user.id })\n                            .then(() => history.push('/login/'))\n                            .catch(error => console.log(error))\n                    }\n                }\n                ,\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n    if (user) {\n        return (\n            <Shell>\n                <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                    <Table striped inverted textAlign=\"center\">\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n    \n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">First Name: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.first_name}\n                                            type=\"text\"\n                                            name={\"first_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                \n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Middle Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"middle_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update middle Name: ${user.middle_name}`}\n                                            defaultValue={user.middle_name}\n                                            type=\"text\"\n                                            name={\"middle_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Last Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"last_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Last Name: ${user.last_name}`}\n                                            defaultValue={user.last_name}\n                                            type=\"text\"\n                                            name={\"last_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"preferred_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Preferred Name: ${user.preferred_name}`}\n                                            defaultValue={user.preferred_name}\n                                            type=\"text\"\n                                            name={\"preferred_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Phone Number: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"phone_number\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Phone Number: ${user.phone_number}`}\n                                            defaultValue={user.phone_number}\n                                            type=\"text\"\n                                            name={\"phone_number\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">LinkedIn: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field name=\"LinkedIn\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update LinkedIn: ${user.linkedin}`}\n                                            defaultValue={user.linkedin}\n                                            type=\"text\"\n                                            name={\"linkedin\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Github: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"github\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Github: ${user.github}`}\n                                            defaultValue={user.github}\n                                            type=\"text\"\n                                            name={\"github\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Portfolio Website: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"portfolioWebsite\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Portfolio Website: ${user.portfolio_website}`}\n                                            defaultValue={user.portfolio_website}\n                                            type=\"text\"\n                                            name={\"portfolio_website\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Street Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Street Address: ${user.street_address}`}\n                                            defaultValue={user.street_address}\n                                            type=\"text\"\n                                            name={\"street_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">City Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update City Address: ${user.city_address}`}\n                                            defaultValue={user.city_address}\n                                            type=\"text\"\n                                            name={\"city_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">State Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update State Address: ${user.state_address}`}\n                                            defaultValue={user.state_address}\n                                            type=\"text\"\n                                            name={\"state_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Zip Code: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Zip Code: ${user.zip_code}`}\n                                            defaultValue={user.zip_code}\n                                            type=\"text\"\n                                            name={\"zip_code\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n    \n                        <Table.Footer>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan='2'textAlign=\"center\">\n                                    {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                    <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                </Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Form>\n                <br></br>\n                <Form onSubmit={handleSubmit(onDelete)} error={error !== null}>\n                    <Button type=\"submit\" negative>Delete Account</Button>\n                    {error.length && (<Message error heading=\"There was an error deleting your account. Please try again later.\" content={error} />)}\n                </Form>\n            </Shell>\n        )\n    } else {\n        history.push('/user-admin/')\n    }\n\n}\n\n\nexport default ChangeAccountInfo","import React, { useState } from 'react'\nimport {\n    Form, Message,\n    Button, Grid,\n    Segment, Table, \n} from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios'\n\nimport jwtDecode from 'jwt-decode';\n\nconst AccountDetailsForm = () => {\n    const history = useHistory()\n    const [errorMessage, setErrorMessage] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    // const dispatch = useDispatch()\n\n\n    const onSubmit = data => {\n        setLoading(true)\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`/api/users/${userId}/`, data)\n            .then(() => {\n                history.push(\"all-jobs/\")\n            })\n            .catch(err => {\n                setErrorMessage(err.Message)\n            })\n        setLoading(false)\n    }\n\n\n    return (\n        <div className=\"login-form\">\n            <Segment placeholder>\n                <Grid stackable >\n                    <Grid.Column stackable>\n                        <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                            <Table striped inverted textAlign=\"center\">\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>Account Info</Table.HeaderCell>\n                                        <Table.HeaderCell> </Table.HeaderCell>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`First Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"first_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Middle Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"middle_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`Last Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"last_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Preferred Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"preferred_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Cover Letter Information </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field name=\"phone_number\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Phone Number:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"phone_number\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"LinkedIn\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`LinkedIn:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"linkedin\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"github\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Github:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"github\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"portfolioWebsite\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Portfolio Website:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"portfolio_website\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Address: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Street Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"street_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`City Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"city_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`State Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"state_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Zip Code:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"zip_code\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Footer>\n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                            {errorMessage.length && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                            <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Footer>\n                            </Table>\n                        </Form>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </div>\n\n    );\n};\n\nexport default AccountDetailsForm","import React from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\nimport JobListView from './containers/job_container/JobListView'\nimport JobDetailView from './containers/job_container/JobDetailView'\nimport CoverLetterView from './containers/forms/CoverLetterView'\nimport Login from './containers/forms/Login'\nimport Signup from './containers/forms/signUpForms.js/SignupInitial'\nimport ChangeEmail from './components/Account/ChangeEmail'\nimport HomePage from './components/homepage/homepage'\nimport AccountDashboard from './containers/Account/accountDashboard'\nimport ChangePassword from './components/Account/ChangePassword'\nimport ChangeAccountInfo from './components/Account/ChangeAccountInfo'\nimport AccountDetailsForm from './containers/forms/signUpForms.js/SignUpDetails'\n\n\nconst PrivateRoute = ({components: Component, ...rest}) => {\n    const authenticated = localStorage.getItem(\"access_token\") !== null\n    return (\n        authenticated === true ? \n        <Route {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/login\"/>\n    )\n    \n}\nconst NeedUserCredentials = ({components: Component, ...rest}) => {\n    const state = useHistory().location.state\n    return (\n        state !== undefined ? \n        <PrivateRoute {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/user-admin/\"/>\n    )\n}\n\n\nconst BaseRouter = (props) => (\n    <div>\n        <Switch>\n            <PrivateRoute exact path='/job/form/' component={CoverLetterView}/>\n            <PrivateRoute exact path='/job/:jobID/' component={JobDetailView}/>\n            <PrivateRoute exact path='/all-jobs/' component={JobListView}/>\n            <PrivateRoute exact path='/signup-user-details/' component={AccountDetailsForm}/>\n            <NeedUserCredentials exact path='/user-admin/change-email/' component={ChangeEmail} {...props}/>\n            <NeedUserCredentials exact path='/user-admin/change-password/' component={ChangePassword} {...props}/>\n            <NeedUserCredentials exact path='/user-admin/change-account-info/' component={ChangeAccountInfo} {...props}/> */}\n            <PrivateRoute exact path='/user-admin/' component={AccountDashboard} />\n            <Route exact path='/signup/' component={Signup}/>\n            <Route exact path='/login/' component={Login}/>\n            <Route exact path='' component={HomePage}/>\n            <Route path='/' component={HomePage}/>\n        </Switch>\n    </div>\n)\n\n\n\nexport default BaseRouter","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    // componentDidCatch(error, errorInfo) {\n    //     // You can also log the error to an error reporting service\n    //     logErrorToMyService(error, errorInfo);\n    // }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","import { \n  Navbar, \n  Nav, \n  NavDropdown, \n  Form, \n  FormControl, \n  Button } from 'react-bootstrap';\nimport React, { useCallback, useEffect, useState, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../../../store/actions/Auth'\nimport ErrorBoundary from '../../../store/ErrorBoundary';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\n\n\nconst Header = () => {\n  let history = useHistory()\n  const [user, setUser] = useState({})\n  const accessToken = localStorage.getItem('access_token')\n  \n  const userId = jwtDecode(accessToken).user_id\n  useEffect(() => {\n    axios.defaults.headers = {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    }\n    axios.get(`/api/users/${userId}/`)\n      .then(resp => {\n        setUser(resp.data)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }, [])\n\n  const props = useSelector(state => (\n    {\n      ...state, \n      isAuthenticated: localStorage.getItem('access_token') !== null,\n      loading: state.loading,\n      error: state.error\n    }))\n  \n  const dispatch = useDispatch()\n\n  const logout = () => {\n    try {\n      dispatch(actions.logout())\n      history.push('/login')\n    } catch (e) {\n      // alert(e)\n      alert('unable to logout')\n    }\n  }\n\n  return  (\n    <div>\n      {props.isAuthenticated ? loggedInNav(props, user, logout) : loggedOutNav(props, logout)}\n    </div>\n  )\n}\n\n\n\nexport default Header\n\nconst loggedInNav = (props, user, logout) => (\n  <Navbar bg=\"light\" expand=\"lg\" className=\"nav-bar\" sticky={true}>\n    <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\n        <Nav.Link href=\"/all-jobs\">All Jobs</Nav.Link>\n        <Nav.Link href=\"/job/form\">Cover Letter Form</Nav.Link>\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Header>Welcome {user.preferred_name ? user.preferred_name : user.first_name}</NavDropdown.Header>\n          <NavDropdown.Item href=\"/user-admin/\">Account</NavDropdown.Item>\n          {\n            user.is_superuser ? \n            <NavDropdown.Item href=\"/admin/\">Admin</NavDropdown.Item> :\n            null\n          }\n          <NavDropdown.Divider />\n          <ErrorBoundary>\n            {\n              props.isAuthenticated ?\n                <NavDropdown.Item onClick={() => logout()}>Logout</NavDropdown.Item>\n                :\n                <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\n            }\n          </ErrorBoundary>\n        </NavDropdown>\n      </Nav>\n      {/* <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form> */}\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nconst loggedOutNav = (props, logout) => (\n  < Navbar bg=\"light\" expand=\"lg\" className=\"text-center\" >\n    <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/login/\">Login</Nav.Link>\n        <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar >\n)\n\n\n  ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Container,\n    Grid,\n    Header,\n    List,\n    Segment,\n} from 'semantic-ui-react'\n\n\nconst FooterPage = () => {\n    return (\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n            <Container>\n                <Grid divided inverted stackable>\n                    <Grid.Row>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='Creator' />\n                            <List link inverted>\n                                <List.Item href='http://macallan.space/' target=\"_blank\">Personal Portfolio</List.Item>\n                                <List.Item href='https://github.com/Micjoey' target=\"_blank\">Github</List.Item>\n                                <List.Item href='https://www.linkedin.com/in/macallan-savett/' target=\"_blank\">LinkedIn</List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='About' />\n                            <List link inverted>\n                                <List.Item as='a'>About</List.Item>\n                                <List.Item as='a'>FAQ</List.Item>\n                                <List.Item as='a'>How To Access</List.Item>\n                                {/* <List.Item as='a'>Favorite X-Men</List.Item> */}\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={7}>\n                            <Header as='h4' inverted>\n                                Footer Header\n                            </Header>\n                            <p>\n                                Any suggestions or comments please send to <Link type=\"submit\" action=\"mailto:someone@example.com\">Here</Link>.\n                            </p>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Segment>\n    );\n}\n\nexport default FooterPage;","import BaseRouter from './routes'\nimport { BrowserRouter as Router}  from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport './css/App.css';\nimport Header from './containers/Banners/Header/NavBar';\nimport FooterPage from './containers/Banners/Footer/FooterBar';\nimport {\n  Container, Segment,\n} from 'semantic-ui-react'\n\n\nfunction App() {\n  const props = useSelector(state => ({ ...state, isAuthenticated: localStorage.getItem('access_token') !== null}))\n  \n  return (\n    <Segment inverted>\n      {/* <Container> */}\n        <div className=\"App\">\n          <header className=\"App-header\">\n              <Router>\n                <Header {...props}/>\n                <BaseRouter/> \n                <FooterPage/>\n              </Router>\n          </header>\n        </div>\n      {/* </Container> */}\n    </Segment>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/ActionTypes'\nimport { updateObject } from '../utility'\n\nconst initialState = {\n    token: null,\n    access_token: null,\n    refresh_token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        access_token: action.access_token,\n        refresh_token: action.refresh_token,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n    })\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: \n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: \n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: \n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: \n            return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducers/auth'\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux'\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}