{"version":3,"sources":["components/jobInfo/AllJobs.js","components/pagination/Pagination.js","components/cover_letter/CoverLetterForm.js","store/axiosApi.js","store/actions/ActionTypes.js","store/actions/Auth.js","components/cover_letter/templates/NonTechnicalCoverLetter.js","components/cover_letter/templates/StandardJobTemplate.js","components/cover_letter/templates/TriplebyteCoverLetter.js","containers/cover_letters/determineCoverLetterFormat.js","containers/forms/CoverLetterView.js","containers/job_container/JobListView.js","components/jobInfo/formattedData.js","components/jobInfo/JobDetail.js","containers/cover_letters/CoverLetterDisplayContainer.js","components/cover_letter/UpdateCoverLetter.js","containers/job_container/JobDetailView.js","containers/forms/Login.js","containers/Account/Shell.js","components/Account/ChangeEmail.js","components/homepage/homepage.js","containers/Account/accountDashboard.js","components/Account/ChangePassword.js","components/Account/ChangeAccountInfo.js","containers/forms/signUpForms/SignUpDetails.js","containers/forms/signUpForms/SignupInitial.js","routes.js","store/ErrorBoundary.js","containers/Banners/Header/NavBar.js","containers/Banners/Footer/FooterBar.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Jobs","props","allJobs","Object","values","jobs","ListGroup","map","job","href","id","Item","style","minHeight","position_title","company","Pagination","pageIndex","total","perPage","onNext","onPrevious","setAllJobs","setNext","setOnPrevious","setPageIndex","lastPage","Math","ceil","previous","onClick","previousPage","next","nextPage","home","goHome","axios","get","then","res","data","results","className","JobForm","history","useHistory","useForm","reValidateMode","handleSubmit","register","watch","errors","useState","localStorage","getItem","accessToken","handleChange","e","name","value","setFormVariables","prevState","Container","Segment","inverted","Form","onSubmit","defaults","headers","Authorization","post","push","catch","console","log","as","content","fontSize","fontWeight","textAlign","Select","fluid","required","placeholder","options","key","text","onChange","Input","type","recruiter","Popup","trigger","job_posting_website","link","TextArea","description","Grid","container","columns","padded","verticalAlign","centered","Row","job_template_choices","Column","pre_bullet_point_paragraph_one","pre_bullet_point_paragraph_two","top_skills","bullet_point_one","bullet_point_two","bullet_point_three","bullet_point_five","bullet_point_four","bullet_point_six","bullet_point_seven","Button","primary","axiosInstance","create","baseURL","timeout","interceptors","response","use","error","originalRequest","config","undefined","status","statusText","refresh_token","access_token","refresh","setItem","access","err","authCheckState","Promise","reject","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","authStart","actionTypes","authSuccess","token","authFail","logout","removeItem","authLogin","username","password","setErrorState","justSignedUp","rg4js","identifier","isAnonymous","dispatch","document","getElementsByClassName","display","expirationTime","expirationDate","Date","getTime","setTimeout","NonTechnicalCoverLetter","user","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","email","linkedin","github","portfolio_website","phone_number","preferred_name","last_name","first_name","StandardCoverLetter","bullet_point_eight","post_bullet_point_paragraph_one","post_bullet_point_paragraph_two","TriplebyteCoverLetter","determineCoverLetter","coverLetter","CoverLetterView","setUser","userId","jwtDecode","user_id","job_stage","city","formVariables","useSelector","state","isAuthenticated","loading","useEffect","resp","firstName","fullName","stackable","JobList","jobProps","setJobProps","isLoaded","loaded","setLoaded","count","setCount","actions","length","formattedJobData","jobDetail","paramsJobId","jobDetailKeys","keys","to","confirmAlert","title","message","buttons","label","delete","CoverLetterChoiceContainer","template_choices","currentCoverLetterChoice","setCurrentCoverLetterChoice","defaultValues","template_choice","SegmentGroup","ref","idx","offset","UpdateJobForm","updatedJob","updateJob","vertical","List","divided","selection","put","window","location","reload","Label","color","horizontal","requiwhite","defaultValue","width","JobDetailView","setJob","setUserId","useParams","jobID","belongs_to_user","alert","reveal","JobDetail","divToHide","button","div","coverLetterButton","getElementById","innerText","replace","buttonTxt","includes","backgroundColor","Login","setLoading","useDispatch","onAuth","useCallback","setErrorMessage","errorMessage","size","minWidth","relaxed","Message","heading","Field","icon","autoComplete","disabled","Divider","Shell","Menu","active","pathname","children","ChangeEmail","newEmail","confirmEmail","setError","patch","Table","striped","Header","HeaderCell","Body","Cell","dependencies","Footer","colSpan","HomepageHeading","mobile","marginBottom","marginTop","Icon","DesktopContainer","hideFixedMenu","setState","fixed","showFixedMenu","this","Visibility","once","onBottomPassed","onBottomPassedReverse","padding","Component","ResponsiveContainer","Homepage","floated","celled","paddingBottom","paddingTop","margin","textTransform","AccountDashboard","class","previousLocation","is_superuser","ChangePassword","newPassword","confirmPassword","successMessage","setSuccessMessage","oldPassword","new_password","new_password1","newPassword2","new_password2","backendData","old_password","success","ChangeAccountInfo","middle_name","street_address","city_address","state_address","zip_code","go","negative","AccountDetailsForm","setRequiredFields","RegistrationForm","password1","password2","confirm_password","match","minLength","maxLength","PrivateRoute","components","rest","render","NeedUserCredentials","BaseRouter","exact","path","component","JobListView","HomePage","ErrorBoundary","hasError","React","LoggedInNav","loggedOutNav","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","FooterPage","target","createBrowserHistory","App","listen","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM"],"mappings":"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","file":"static/js/main.5328985d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { ListGroup } from 'react-bootstrap'\n\n\nconst Jobs = props => {\n    const allJobs = Object.values(props.jobs)\n    \n    return (\n        <ListGroup>\n           {allJobs.map(job => (\n               <a href={`/job/${job.id}`} key={job.id}>\n                   <ListGroup.Item style={{minHeight: \"fit-content\"}}>\n                       {job.position_title} - {job.company}\n                   </ListGroup.Item>\n               </a>  \n           ))}\n        </ListGroup>\n    );\n};\n\n\nexport default Jobs;","import axios from 'axios'\n;\nimport React, { useEffect } from 'react';\n\n\nexport default function Pagination(props) {\n    const { pageIndex, total, perPage, onNext, onPrevious, setAllJobs, setNext, setOnPrevious, setPageIndex } = props;\n    const lastPage = Math.ceil(total / perPage);\n    const previous = pageIndex > 1 ? (<button onClick={() => previousPage()}>Previous</button>) : null;\n    const next = pageIndex < lastPage ? (<button onClick={() => nextPage()}>Next</button>) : null;\n    const home = pageIndex > 1 ? (<button onClick={() => goHome()}>Home</button>) : null;\n\n    const nextPage = () => {\n        axios.get(onNext)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex+1)\n            })\n    }\n\n    const previousPage = () => {\n        axios.get(onPrevious)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex - 1)\n            })\n    }\n\n    const goHome = () => {\n        axios.get(`api/jobs/`)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(1)\n            })\n    }\n\n    return (\n        <div className=\"Pagination\">\n            <div className=\"Pagination-actions\">\n                {previous}\n                {home}\n                {next}\n            </div>\n            <div className=\"Pagination-stats\">\n                Page {pageIndex} of {lastPage}\n                &nbsp;(displaying {perPage} items per page)\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Container, Form, Grid, Header, Input, Popup, Segment, Select } from \"semantic-ui-react\";\n\n\nexport const JobForm = (props) => {\n    const job = props.job\n    const history = useHistory()\n    const { register, watch, errors, handleSubmit} = useForm({\n        reValidateMode: 'onChange'\n    })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const handleChange = (e, { name, value }) => {\n        props.setFormVariables(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    \n    const onSubmit = () => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.post('/api/jobs/', job)\n            .then(res => history.push(`/job/${res.data.id}`, {...res.data.id}))\n            .catch(errors => console.log(errors))\n    };\n\n    const job_template_choicess = [\n        { key: 'non-technical-cover-letter', value: 'non-technical-cover-letter', text: 'Non-technical Cover Letter'},\n        { key: 'Triplebyte (message-version)', value: 'Triplebyte (message-version)', text: 'Triplebyte (message-version)'},\n        { key: 'Standard Job Template', value: 'Standard Job Template', text: 'Standard Job Template'},\n        // 'cover-letter-4': 'Template 4',\n        // 'cover-letter-5': 'Template 5',\n    ]\n        \n    const job_stages = [\n        { key: 'Initial', value: 'Initial', text: 'Initial'},\n        { key: 'Accepted', value: 'Accepted', text: 'Accepted'},\n        { key: 'Rejected', value: 'Rejected', text: 'Rejected'},\n        { key: 'No Response', value: 'No Response', text: 'No Response'},\n\n    ]\n    \n    return (\n        <Container>\n            <Segment inverted>\n                <Form onSubmit={handleSubmit(onSubmit)} >\n                    <Header\n                        as='h3'\n                        content='Create Cover Letter'\n                        inverted\n                        style={{\n                            fontSize: '4em',\n                            fontWeight: 'normal',\n                        }}\n                        textAlign=\"center\"\n                    />\n                    <Form.Select\n                        fluid\n                        required\n                        placeholder=\"Choose Template\" \n                        options={job_template_choicess} \n                        name=\"job_template_choices\"\n                        onChange={handleChange}\n                    />\n                    <Form.Select \n                        placeholder=\"Choose Job Stage\" \n                        options={job_stages}\n                        name=\"job_stage\"\n                        onChange={handleChange}\n                    />\n                    <Form.Input \n                        type=\"text\" \n                        placeholder={job.position_title ? job.position_title : \"**Position Title**\"}\n                        name=\"position_title\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <Form.Input \n                        type=\"text\" \n                        placeholder={job.company ? job.company : \"**Company Applying To**\"}\n                        name=\"company\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <Form.Input \n                        type=\"text\" \n                        placeholder={job.recruiter ? job.recruiter : \"Recruiter's Name\"}\n                        name=\"recruiter\"\n                        onChange={handleChange}\n                    />\n                    <Popup\n                        content={`I.e LinkedIn or Google. It will default to the ${job.company}.`}\n                        trigger={\n                        <Form.Input \n                            type=\"text\" \n                            placeholder={job.job_posting_website ? job.job_posting_website : \"Hosting Website\"}\n                                name=\"job_posting_website\"\n                            onChange={handleChange}\n                        />}\n                    />\n                    <Popup\n                        content=\"Web url link\"\n                        trigger={\n                        <Form.Input \n                            type=\"url\" \n                            placeholder={job.link ? job.link : \"**Link for Job Post**\"}\n                            name=\"link\"\n                            onChange={handleChange}\n                            required\n                        />}\n                    />\n                    <Form.TextArea \n                        type=\"text\" \n                        placeholder={job.description ? job.description : \"Description of Job Post\"}\n                        name=\"description\"\n                        onChange={handleChange}\n                    />\n                    <Grid container columns=\"equal\" padded=\"vertically\" verticalAlign=\"middle\" centered>\n                        <Grid.Row>\n                            {job.job_template_choices === \"Standard Job Template\" ?\n                                <Grid.Column>\n                                        <Popup\n                                            content=\"This field fulfills the pre-bullet-point paragraph.\"\n                                            trigger={\n                                                <Form.TextArea\n                                                    placeholder={job.pre_bullet_point_paragraph_one ? job.pre_bullet_point_paragraph_one : `Unique Paragraph One `}\n                                                    name=\"pre_bullet_point_paragraph_one\"\n                                                    onChange={handleChange} />\n                                            } />\n                                </Grid.Column>\n                                    :\n                                    null\n                                }\n                            {job.job_template_choices === \"Standard Job Template\" && job.pre_bullet_point_paragraph_one?\n                                <Grid.Column>\n                                        <Popup\n                                            content=\"This field fulfills the SECOND pre-bullet-point paragraph.\"\n                                            trigger={\n                                                <Form.TextArea\n                                                    placeholder={job.pre_bullet_point_paragraph_two ? job.pre_bullet_point_paragraph_two : `Unique Paragraph Two `}\n                                                    name=\"pre_bullet_point_paragraph_two\"\n                                                    onChange={handleChange} />\n                                            } />\n                                </Grid.Column>\n                                    :\n                                    null\n                                }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {job.job_template_choices === \"Standard Job Template\" ?\n                                <Grid.Column>\n                                    <Popup\n                                        content=\"Fill in the YOUR skills that match the JOBS description.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder={job.top_skills ? job.top_skills : `**Top skills related to job**`}\n                                                name=\"top_skills\"\n                                                onChange={handleChange}\n                                                required\n                                            />\n                                        } />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                            {job.job_template_choices === \"Standard Job Template\" && job.top_skills ?\n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_one ? job.bullet_point_one : `Second Bullet Point `}\n                                            name=\"bullet_point_one\"\n                                            onChange={handleChange} />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {job.job_template_choices === \"Standard Job Template\" && job.bullet_point_one?\n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_two ? job.bullet_point_two : `Third Bullet Point `}\n                                            name=\"bullet_point_two\"\n                                            onChange={handleChange} />\n                                </Grid.Column>\n                                    :\n                                    null\n                                }\n                                {job.job_template_choices === \"Standard Job Template\" && job.bullet_point_two? \n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_three ? job.bullet_point_three : `Fourth Bullet Point `}\n                                            name=\"bullet_point_three\"\n                                            onChange={handleChange}/> \n                                </Grid.Column>\n                                    :\n                                    null\n                                }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {job.job_template_choices === \"Standard Job Template\" && job.bullet_point_three?\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={job.bullet_point_five ? job.bullet_point_four : `Fifth Bullet Point `}\n                                        name=\"bullet_point_four\"\n                                        onChange={handleChange} />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                            {job.job_template_choices === \"Standard Job Template\" && job.bullet_point_four ?\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={job.bullet_point_five ? job.bullet_point_five : `Sixth Bullet Point `}\n                                        name=\"bullet_point_five\"\n                                        onChange={handleChange} />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {job.job_template_choices === \"Standard Job Template\" && job.bullet_point_six ?\n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_six ? job.bullet_point_six : `Seventh Bullet Point `}\n                                            name=\"bullet_point_six\"\n                                            onChange={handleChange} />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                            {job.job_template_choices === \"Standard Job Template\" && job.bullet_point_seven?\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={job.bullet_point_seven ? job.bullet_point_seven : `Eigth Bullet Point `}\n                                        name=\"bullet_point_seven\"\n                                        onChange={handleChange} />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                        </Grid.Row>\n                    </Grid>\n                    <Form.Button primary content=\"Create Cover Letter\"/>\n                </Form>\n            </Segment>\n        </Container>\n    )\n}\n\n","import axios from 'axios'\n\nimport { authCheckState} from './actions/Auth';\n\nconst axiosInstance = axios.create({\n    baseURL: '',\n    timeout: 3000,\n    headers: {\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    },\n\n});\n\naxios.interceptors.response.use(response => \n    {\n        return response;\n    }, error => {\n        const originalRequest = error.config;\n        if (error !== undefined && error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\n            const refresh_token = localStorage.getItem('refresh_token');\n            const access_token = localStorage.getItem('access_token');\n            return axiosInstance\n                .post('/api/token/refresh/', { refresh: refresh_token, access_token: access_token })\n                .then(response => {\n                    localStorage.setItem('access_token', response.data.access);\n                    axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    originalRequest.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    return axiosInstance(originalRequest);\n                })\n                .catch(err => {\n                    authCheckState()\n                });\n        }\n        \n        return Promise.reject(error);\n    }, () => {\n        authCheckState()\n    }\n    \n);\n\n\nexport default axiosInstance\n","export const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"","\nimport axios from 'axios'\nimport rg4js from 'raygun4js';\nimport axiosInstance from '../axiosApi'\nimport * as actionTypes from './ActionTypes'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, refresh_token = null) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        access_token: token,\n        refresh_token: refresh_token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user')\n    localStorage.removeItem('access_token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('refresh_token')\n    localStorage.removeItem('token')\n    authCheckState()\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const authLogin = (username, password, setErrorState = null, justSignedUp = false, history = null) => {\n    rg4js('setUser', {\n        identifier: `${username}`,\n        isAnonymous: false,\n    })\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(\"/api/token/\", {\n            username: username,\n            password: password\n        }).then(response => {\n            axiosInstance.defaults.headers['Authorization'] = `Bearer ${response.data.access}`;\n            const token = response.data.access;\n            const refresh_token = response.data.refresh;\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n            \n            dispatch(authSuccess(token, refresh_token));\n            if (justSignedUp) {\n                const navBar = document.getElementsByClassName(\"nav-bar\")[0]\n                navBar.style.display = \"none\"\n                history.push(\"/signup-user-details/\")\n            } else {       \n                history.push(\"/all-jobs/\")\n            }\n        }).catch(err => {\n            if (setErrorState !== null){\n                setErrorState(\"Failed to log in. Try again or sign up.\")\n            }\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const authSignUp = (data, setErrorMessage, justSignedUp, history) => {\n    logout()\n    const username = data.username\n    const password1 = data.password\n    const password2 = data.confirm_password\n    const email = data.email\n    return dispatch => {\n        dispatch(authStart());\n        \n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n        }\n        axios.post(\"/rest-auth/registration/\", {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2,\n        }).then(response => {\n            dispatch(authLogin(username, password1, setErrorMessage, justSignedUp, history))\n            // const token = response.data.token;\n            // // const expirationDate = new Date(new Date().getTime() + 5000 * 1000);\n            // const accessToken = response.data.token;\n            // const refreshToken = response.data.refresh;\n            // localStorage.setItem('access_token', accessToken);\n            // // localStorage.setItem('refresh_token', refreshToken);\n        }).catch(err => {\n            setErrorMessage(\"Either the password was too common (i.e password123), the Username taken, or the Email was. Please try again.\")\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('access_token')\n        const refresh_token = localStorage.getItem('refresh_token')\n        if (token === undefined) {\n            dispatch(logout())\n        } \n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}","\n\n\n\nconst NonTechnicalCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Non Tech Cover Letter</h1>\n                    {/* <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3> */}\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            <div>\n\n                                {user.email ? <p className=\"com\">{user.email}</p> \n                                :\n                                null}\n                                {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a></p> \n                                :\n                                null}\n                                {user.github ? <p><a href={user.github}>{user.github}</a></p> \n                                :\n                                null}\n                                {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a></p> \n                                :\n                                null}\n                            </div>\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter }:</p> \n                                :\n                                <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                Thank you for the opportunity to apply for the {` ${job.position_title} `} \n                                role at your company{job.company ? ` - ${ job.company }` : null}.\n                                After reviewing your job description, it's clear that you're looking\n                                for a candidate that is familiar with\n                                the responsibilities associated with the  \n                                {job.position_title ? ` ${job.position_title} ` : \" \" }\n                                role and can perform them confidently. Given these requirements,\n                                I am confident that I can do the job adeptly and fulfill the above\n                                expectations successfully.\n                            </p>\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <br/>\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title } ` : \" \" }\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email } to arrange a convenient time to chat.\n                            </p>\n                            <br/>\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely, \n                                <br/>\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                :\n                                `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n    \n            </div>\n        )\n    }\n}\n\nexport default NonTechnicalCoverLetter","const StandardCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Standard Letter</h1>\n                    {/* <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3> */}\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            {user.email ? <p className=\"com\">{user.email}</p>\n                                :\n                                null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a></p>\n                                :\n                                null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a></p>\n                                :\n                                null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a></p>\n                                :\n                                null}\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter}:</p>\n                                    :\n                                    <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                As advertised on the {job.job_posting_website ? ` ${job.job_posting_website } ` : ` ${ job.company } ` } website, your need for a\n                                {` ${job.position_title} ` } is an excellent match to my background \n                                and career goals. With my strong education and experience, I am \n                                confident I can make an immediate contribution given the opportunity.\n                            </p>\n                            {job.pre_bullet_point_paragraph_one ? <p>{job.pre_bullet_point_paragraph_one}</p> : null}\n                            {job.pre_bullet_point_paragraph_two ? <p>{job.pre_bullet_point_paragraph_two}</p> : null}\n                            {job.top_skills ? <p>Highlights of my qualifications most relevant to your needs include:</p> : null }\n                            {job.top_skills ? <p> * {job.top_skills}</p> : null }\n                            {job.bullet_point_one ? <p> * {job.bullet_point_one }</p> : null }\n                            {job.bullet_point_two ? <p> * {job.bullet_point_two }</p> : null }\n                            {job.bullet_point_three ? <p> * {job.bullet_point_three }</p> : null }\n                            {job.bullet_point_four ? <p> * {job.bullet_point_four }</p> : null }\n                            {job.bullet_point_five ? <p> * {job.bullet_point_five }</p> : null }\n                            {job.bullet_point_six ? <p> * {job.bullet_point_six }</p> : null }\n                            {job.bullet_point_seven ? <p> * {job.bullet_point_seven }</p> : null }\n                            {job.bullet_point_eight ? <p> * {job.bullet_point_eight }</p> : null }\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <p>These proven abilities can contribute to {`${job.company} `}'s continued success. I would welcome the opportunity to discuss my background with you in detail and to learn more about your company and its goals. </p>\n                            <br />\n                            {job.post_bullet_point_paragraph_one ? <p>{job.post_bullet_point_paragraph_one}</p> : null}\n                            {job.post_bullet_point_paragraph_two ? <p>{job.post_bullet_point_paragraph_two}</p> : null}\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title} ` : null}\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email} to arrange a convenient time to chat.\n                            </p>\n                            <br />\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely,\n                                <br />\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                    :\n                                    `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default StandardCoverLetter","const TriplebyteCoverLetter = (props) => {\n    const job = props.job \n    const user = props.user\n    return (\n        <div>\n            <h1> Triplebyte Cover Letter</h1>\n            {job.position_title}\n        </div>\n    )\n}\n\nexport default TriplebyteCoverLetter","import CoverLetter from '../../components/cover_letter/templates/CoverLetter'\nimport NonTechnicalCoverLetter from '../../components/cover_letter/templates/NonTechnicalCoverLetter'\nimport StandardCoverLetter from '../../components/cover_letter/templates/StandardJobTemplate'\nimport TriplebyteCoverLetter from '../../components/cover_letter/templates/TriplebyteCoverLetter'\n\nexport const determineCoverLetter = (coverLetter, job, user) => {\n    switch (coverLetter) {\n        case \"non-technical-cover-letter\":\n            return <NonTechnicalCoverLetter job={job} user={user} />\n        // case 'cover-letter':\n        //     return <CoverLetter job={job} user={user}/>\n        case 'Triplebyte (message-version)':\n            return <TriplebyteCoverLetter job={job} user={user}/>\n        case 'Standard Job Template':\n            return <StandardCoverLetter job={job} user={user}/>\n        default:\n            return <NonTechnicalCoverLetter job={job} user={user} />;\n    }\n}","import React, { useEffect, useState, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm'\nimport { Form, Grid, Header, Segment, Select } from 'semantic-ui-react';\nimport { determineCoverLetter } from '../cover_letters/determineCoverLetterFormat';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport rg4js from 'raygun4js';\nimport { useForm } from \"react-hook-form\";\n\nconst CoverLetterView = () => {\n    const [user, setUser] = useState({})\n    const accessToken = localStorage.getItem('access_token')\n    const userId = accessToken !== null ? jwtDecode(accessToken).user_id : null\n    \n    const [formVariables, setFormVariables] = useState({\n        job_template_choices: \"non-technical-cover-letter\",\n        recruiter: '',\n        position_title: '',\n        job_stage: 'Initial',\n        company: '',\n        job_posting_website: '',\n        top_skills: '',\n        city: '',\n        link: '',\n        description: '',\n        pre_bullet_point_paragraph_one: '',\n        pre_bullet_point_paragraph_two: '',\n        top_skills: '',\n        bullet_point_one: '',\n        bullet_point_two: '',\n        bullet_point_three: '',\n        bullet_point_four: '',\n        bullet_point_five: '',\n        bullet_point_six: '',\n        bullet_point_seven: '',\n        bullet_point_eight: '',\n        post_bullet_point_paragraph_one: '',\n        post_bullet_point_paragraph_two: '',\n        belongs_to_user: userId,\n    })\n\n    const props = useSelector(state => (\n        {\n            ...state, \n            isAuthenticated: state.token !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n\n    useEffect(() => {\n        props.loading = true\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        if (userId) {\n            axios.get(`/api/users/${userId}/`)\n                .then(resp => {\n                    setUser(resp.data)\n                    rg4js('setUser', {\n                        identifier: `${resp.data.username}`,\n                        isAnonymous: false,\n                        email: `${resp.data.email}`,\n                        firstName: `${resp.data.first_name}`,\n                        fullName: `${resp.data.first_name} ${resp.data.last_name}`\n                    })\n                    props.loading = false\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n    }, [])\n\n    return (\n        <Segment placeholder padded=\"very\">\n            <Grid columns={2} stackable>\n                <Grid.Row>\n                    <Grid.Column verticalAlign=\"left\">\n                        <Segment inverted >\n                            <JobForm job={formVariables} setFormVariables={setFormVariables} user={user}/>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column>\n                        {determineCoverLetter(\n                                    formVariables.job_template_choices,\n                                    formVariables,\n                                    user)}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n    )\n}\n\nexport default CoverLetterView\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport { useHistory } from 'react-router-dom';\n\nimport Jobs from '../../components/jobInfo/AllJobs'\nimport Pagination from '../../components/pagination/Pagination'\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm';\nimport * as actions from '../../store/actions/Auth'\nimport {\n    Container,\n    Header,\n    Segment,\n} from 'semantic-ui-react'\nimport { useSelector } from 'react-redux';\nimport CoverLetterView from '../forms/CoverLetterView';\n\n\nconst JobList = () => {\n    let history = useHistory()\n\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const [jobProps, setJobProps] = useState([])\n    const [allJobs, setAllJobs] = useState([])\n    const [next, setNext] = useState([])\n    const [onPrevious, setOnPrevious] = useState([])\n    const [loaded, setLoaded] = useState({isLoaded: false})\n    const [pageIndex, setPageIndex] = useState(1)\n    const [count, setCount] = useState(0)\n    const props = useSelector(state => (\n        {\n            ...state,\n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n\n    useEffect(() => {\n\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(\"/api/jobs/\")\n        .then( res => {\n            setAllJobs(res.data.results)\n            return res\n        })\n        .then(response => {\n            setAllJobs(response.data.results)\n            setJobProps(response.data)\n            setNext(response.data.next)\n            setCount(response.data.count)\n            setOnPrevious(response.data.previous)\n        })\n        .then(() => {\n            setLoaded({isLoaded: true})\n        })\n        .catch(err => {\n            actions.authCheckState()\n        })\n    }, [])\n    if (loaded.isLoaded && !props.loading) {\n        if (allJobs.length) {\n            return (\n                <Container>\n                    <Segment>\n                        <Header\n                            as='h1'\n                            content='All Jobs'\n                            // inverted\n                            style={{\n                                fontSize: '2em',\n                                // fontWeight: 'normal',\n                                // marginBottom: 0,\n                                // marginTop: '.5em',\n                            }}\n                        />\n                        <Segment style={{fontSize: '2em'}}>\n                            <Jobs jobs={allJobs} jobProps={jobProps} />\n                        </Segment>\n                        <Segment style={{ fontSize: '1em' }}>\n                            <Pagination\n                                pageIndex={pageIndex}\n                                total={count}\n                                perPage={20}\n                                onNext={next}\n                                onPrevious={onPrevious}\n                                setAllJobs={setAllJobs}\n                                setNext={setNext}\n                                setOnPrevious={setOnPrevious}\n                                setPageIndex={setPageIndex}\n                            />\n                        </Segment>\n                    </Segment>\n                </Container>\n            )\n        } else {\n            return (\n                <Container>\n                    <Segment>\n                        <Header\n                            as=\"h1\"\n                            content=\"You haven't applied to any jobs yet!\"\n                        />\n                    </Segment>\n                    <CoverLetterView/>\n                </Container>\n            )\n        }\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobList","export const formattedJobData = {\n    'id': 'Id',\n    'form_creation_date': 'Creation Date',\n    'template_choices': 'Template Choice',\n    'job_stage': 'Job Stage',\n    'choice_of_user': 'Choice of User',\n    'job_posting_website': 'Hosting Job Website',\n    'position_title': 'Position Title',\n    'company': 'Company',\n    'city': 'City',\n    'link': 'Job Link',\n    'recruiter': 'Recruiter',\n    'description': 'Description',\n    'pre_bullet_point_paragraph_one': 'Pre Paragraph One',\n    'pre_bullet_point_paragraph_two': 'Pre Paragraph Two',\n    'top_skills': 'Top Skills',\n    'bullet_point_one': 'Bullet Point One',\n    'bullet_point_two': 'Bullet Point Two',\n    'bullet_point_three': 'Bullet Point Three',\n    'bullet_point_four': 'Bullet Point Four',\n    'bullet_point_five': 'Bullet Point Five',\n    'bullet_point_six': 'Bullet Point Six',\n    'bullet_point_seven': 'Bullet Point Seven',\n    'bullet_point_eight': 'Bullet Point Eight',\n    'post_bullet_point_paragraph_one': 'Post Paragraph One',\n    'post_bullet_point_paragraph_two': 'Post Paragraph Two',\n    'modified_date': 'Modified Date',\n    'created_date': 'Created Date',\n    'belongs_to_user': 'Belongs To User ID',\n}\n\nexport const formattedUserData = {\n    \"first_name\": \"First Name\",\n    \"middle_name\":\"Middle Name\",\n    \"last_name\":\"Last Name\",\n    \"preferred_name\":\"Preferred Name\",\n    \"phone_number\":\"Phone Number Name\",\n    \"linkedin\":\"Linkedin\",\n    \"github\":\"Github\",\n    \"portfolio_website\":\"Portfolio Website\",\n    \"street_address\":\"Stree Address\",\n    \"city_address\":\"City Address\",\n    \"state_address\":\"State Address\",\n    \"zip_code\":\"Zip Code\",\n\n}","import React from \"react\";\nimport {formattedJobData} from \"./formattedData\";\nimport {Link} from 'react-router-dom'\nimport {\n    Header, Container, Segment, \n} from 'semantic-ui-react'\n\nimport axios from 'axios'\nimport { confirmAlert, alert } from 'react-confirm-alert'; \nimport { useForm } from \"react-hook-form\";\n\n\nconst Jobs = props => {\n    const accessToken = props.accessToken\n    const history = props.history\n    const jobDetail = props.jobDetail\n    const paramsJobId = jobDetail.id\n    const jobDetailKeys = Object.keys(jobDetail)\n    const { handleSubmit } = useForm()\n    const onSubmit = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: `Are you sure you want to delete ${jobDetail.position_title} at ${jobDetail.company}?`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`/api/jobs/${paramsJobId}/`, { ...paramsJobId })\n                            .then(() => history.push('/all-jobs'))\n                            .catch(error => console.log(error))\n                    }\n                },\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n    return (\n        <Container className=\"job-detail\">\n            <Segment>\n\n                <Header\n                    as='h1'\n                    // inverted\n                    content='Job Detail'\n                    // inverted\n                    style={{\n                        fontSize: '2em',\n                        // fontWeight: 'normal',\n                        // marginBottom: 0,\n                        // marginTop: '.5em',\n                    }}\n                    textAlign=\"center\"\n                />\n            </Segment>\n            <Segment>\n                {jobDetailKeys.map(key => (\n                    <div className=\"job-detail-container\" key={`${key} - container`}>\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p key={`${key}`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p className=\"job-info-data\" key={`key value - ${key}`} key={`${key} - ${key}`}>{jobDetail[key]}</p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p key={`${key} + 1`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p><Link to={jobDetail[key]} className=\"job-info-data\" key={`key value - ${key} + 1`} key={`${key} - ${key}`}>{jobDetail[key]}</Link></p> : null }\n                    </div>\n               ))}\n            </Segment>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"delete-button\">\n                <button className=\"btn-warning\" type=\"submit\">Delete</button>\n            </form>\n        </Container>\n    );\n};\n\n\nexport default Jobs;\n\n\n\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport { useForm } from 'react-hook-form'\nimport { determineCoverLetter } from './determineCoverLetterFormat'\nimport { Link } from 'react-router-dom'\nimport { Container, Popup, Segment, SegmentGroup } from 'semantic-ui-react'\n\n\n\nconst CoverLetterChoiceContainer = ({job, userId}) => {\n    const accessToken = localStorage.getItem(\"access_token\")\n    const [user, setUser] = useState({})\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [currentCoverLetterChoice, setCurrentCoverLetterChoice] = useState(job.template_choices)\n    const { register, handleSubmit } = useForm({\n        defaultValues: {\n            template_choice: job.template_choices,\n        }\n    })\n\n    const template_choices = {\n        'non-technical-cover-letter': 'Non-technical Cover Letter',\n        'Standard Job Template': 'Standard Job Template',\n        'Triplebyte (message-version)': 'Triplebyte (message-version)',\n        // 'cover-letter': 'Cover Letter',\n        // 'cover-letter-4': 'Template 4',\n        // 'cover-letter-5': 'Template 5',\n    }\n\n    const onSubmit = (data) => {\n        setCurrentCoverLetterChoice(data['template_choice'])\n    }\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(res => {\n                setUser(res.data)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(err => {\n                setLoaded({ isLoaded: false })\n            })\n    }, [])\n\n    if (loaded.isLoaded) {\n        return (\n        <div className=\"cover-letter-display-container\">\n            <Container>\n                <SegmentGroup inverted>\n                        <Segment>\n                            <Link to=\"/job/form\">Create another cover letter?</Link>\n                        </Segment>\n                        <Segment>\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <label>\n                                    <p>Template Choices: </p>\n                                    <select name=\"template_choice\" ref={register} className=\"list-form-field-with-margin\">\n                                        {Object.keys(template_choices).map((key, idx) => (\n                                            <option value={key} key={idx} name={template_choices[key]}> {template_choices[key]} </option>\n                                            ))}\n                                    </select>\n                                </label>\n                                <Popup\n                                    content=\"This will temporarily change the cover letter.\"\n                                    offset={[120,-10]}\n                                    trigger={\n                                    <input className=\"cover-letter-display-button\" type=\"submit\" value=\"Change Cover Letter\" />\n                                    }\n                                />\n                            </form>\n                            <div>\n                                {determineCoverLetter(currentCoverLetterChoice, job, user)}\n                            </div>\n                        </Segment>\n                </SegmentGroup>\n            </Container>\n        </div>\n    \n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CoverLetterChoiceContainer","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Form, Grid, Header, Input, Label, List, Popup, Segment, Select } from \"semantic-ui-react\";\n\n\nexport const UpdateJobForm = (props) => {\n\n    const job = props.job\n    const [updatedJob, updateJob] = useState(job)\n    const { register, handleSubmit } = useForm({\n        reValidateMode: 'onChange'\n    })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const handleChange = (e, { name, value }) => {\n        updateJob(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n\n    const onSubmit = () => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.put(`/api/jobs/${job.id}/`, updatedJob)\n            .then(() => window.location.reload())\n            .catch(errors => console.log(errors))\n    };\n\n    const job_template_choicess = [\n        { key: 'non-technical-cover-letter', value: 'non-technical-cover-letter', text: 'Non-technical Cover Letter' },\n        { key: 'Triplebyte (message-version)', value: 'Triplebyte (message-version)', text: 'Triplebyte (message-version)' },\n        { key: 'Standard Job Template', value: 'Standard Job Template', text: 'Standard Job Template' },\n        // 'cover-letter-4': 'Template 4',\n        // 'cover-letter-5': 'Template 5',\n    ]\n\n    const job_stages = [\n        { key: 'Initial', value: 'Initial', text: 'Initial' },\n        { key: 'Accepted', value: 'Accepted', text: 'Accepted' },\n        { key: 'Rejected', value: 'Rejected', text: 'Rejected' },\n        { key: 'No Response', value: 'No Response', text: 'No Response' },\n\n    ]\n\n    return (\n        <Container>\n            <Segment inverted vertical>\n                <List divided selection>\n                <Form onSubmit={handleSubmit(onSubmit)} >\n                    <Header\n                        as='h3'\n                        content='Update Cover Letter'\n                        inverted\n                        style={{\n                            fontSize: '4em',\n                            fontWeight: 'normal',\n                        }}\n                        textAlign=\"center\"\n                    />\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Template Choice</Label>\n                        <Form.Select\n                            fluid\n                            requiwhite\n                            // defaultValue={job.template_choices}\n                            defaultValue={job.template_choices}\n                            options={job_template_choicess}\n                            name=\"job_template_choices\"\n                            onChange={handleChange}\n                        />\n                    </List.Item>\n                    <br/>\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Job Stage</Label>\n                        <Form.Select\n                            defaultValue={job.job_stage}\n                            options={job_stages}\n                            name=\"job_stage\"\n                            onChange={handleChange}\n                        />\n                    </List.Item>\n                    <br />\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Position Title</Label>\n                        <Form.Input\n                            type=\"text\"\n                            defaultValue={job.position_title}\n                            name=\"position_title\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </List.Item>\n                    <br />\n                    <List.Item>\n                            <Label color=\"red\" horizontal>Job Stage</Label>\n                        <Form.Input\n                            type=\"text\"\n                            defaultValue={job.company}\n                            name=\"company\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </List.Item>\n                    <br />\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Recruiter's Name</Label>\n                        <Form.Input\n                            placeholder=\"Recruiter's Name\"\n                            defaultValue={job.recruiter ? job.recruiter : \"\"}\n                            name=\"recruiter\"\n                            onChange={handleChange}\n                        />\n                    </List.Item><br />\n                        <List.Item>\n                            <Label color=\"red\" horizontal>Job Posting Website</Label>\n                            <Form.Input\n                                type=\"text\"\n                                defaultValue={job.job_posting_website}\n                                name=\"link\"\n                                onChange={handleChange}\n                                required\n                            />\n                        </List.Item><br />\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Url for Job Post</Label>\n                        <Form.Input\n                            type=\"url\"\n                            defaultValue={job.link}\n                            name=\"link\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </List.Item><br />\n                    \n                    <List.Item>\n                            <Label color=\"red\" horizontal>Description of Job Post</Label>\n                        <Form.TextArea\n                            type=\"text\"\n                            placeholder=\"Description of Job Post\"\n                            defaultValue={job.description ? job.description : \"\"}\n                            name=\"description\"\n                            onChange={handleChange}\n                        />\n                    </List.Item>\n                    <Grid verticalAlign=\"middle\">\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>First Custom Paragraph</Label>\n                                        <Popup\n                                            content=\"This field fulfills the pre-bullet-point paragraph.\"\n                                            trigger={\n                                                <Form.TextArea\n                                                    placeholder='Unique Paragraph One'\n                                                    defaultValue={job.pre_bullet_point_paragraph_one ? job.pre_bullet_point_paragraph_one : ``}\n                                                    name=\"pre_bullet_point_paragraph_one\"\n                                                    onChange={handleChange} />\n                                            } />\n                                    </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>Second Custom Paragraph</Label>\n                                    <Popup\n                                        content=\"This field fulfills the SECOND pre-bullet-point paragraph.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder=\"Unique Paragraph Two\"\n                                                defaultValue={job.pre_bullet_point_paragraph_two ? job.pre_bullet_point_paragraph_two : ``}\n                                                name=\"pre_bullet_point_paragraph_two\"\n                                                onChange={handleChange} />\n                                        } />\n                                    </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Top Skills</Label>\n                                        <Popup\n                                        content=\"Fill in the YOUR skills that match the JOBS description.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder=\"Top skills related to job\"\n                                                defaultValue={job.top_skills ? job.top_skills : ``}\n                                                name=\"top_skills\"\n                                                onChange={handleChange}\n                                            />\n                                        } />\n                                    </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Second Bullet Point</Label>\n                                    <Form.TextArea\n                                        placeholder=\"Second Bullet Point \"\n                                        defaultValue={job.bullet_point_one ? job.bullet_point_one : ``}\n                                        name=\"bullet_point_one\"\n                                        onChange={handleChange} />\n                                </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Third Bullet Point</Label>\n                                    <Form.TextArea\n                                        placeholder=\"Third Bullet Point \"\n                                        defaultValue={job.bullet_point_two ? job.bullet_point_two : ``}\n                                        name=\"bullet_point_two\"\n                                        onChange={handleChange} />\n                                </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>Fourth Bullet Point</Label>\n                                        <Form.TextArea\n                                            placeholder=\"Fourth Bullet Point\"\n                                            defaultValue={job.bullet_point_three ? job.bullet_point_three : ``}\n                                            name=\"bullet_point_three\"\n                                            onChange={handleChange} />\n                                    </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>Fifth Bullet Point</Label>\n                                        <Form.TextArea\n                                            placeholder=\"Fifth Bullet Point\"\n                                            defaultValue={job.bullet_point_five ? job.bullet_point_five : ``}\n                                            name=\"bullet_point_five\"\n                                            onChange={handleChange} />\n                                    </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>Sixth Bullet Point</Label>\n                                        <Form.TextArea\n                                            placeholder=\"Sixth Bullet Point\"\n                                            defaultValue={job.bullet_point_six ? job.bullet_point_six : ``}\n                                            name=\"bullet_point_six\"\n                                            onChange={handleChange} />\n                                    </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Seventh Bullet Point</Label>\n                                    <Form.TextArea\n                                        placeholder=\"Seventh Bullet Point\"\n                                        defaultValue={job.bullet_point_seven ? job.bullet_point_seven : ``}\n                                        name=\"bullet_point_seven\"\n                                        onChange={handleChange} />\n                                </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Eigth Bullet Point</Label>\n                                    <Form.TextArea\n                                        placeholder=\"Eigth Bullet Point\"\n                                        defaultValue={job.bullet_point_eight ? job.bullet_point_eight : ``}\n                                        name=\"bullet_point_eight\"\n                                        onChange={handleChange} />\n                                </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                    <br/>\n                    <Form.Button primary content=\"Update Cover Letter\" />\n                </Form>\n                </List>\n            </Segment>\n        </Container>\n    )\n}\n\n","import React, { useState, useEffect } from 'react'\nimport JobDetail from '../../components/jobInfo/JobDetail'\nimport axios from 'axios'\n\nimport { useHistory, useParams } from 'react-router'\n\nimport { alert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport CoverLetterChoiceContainer from '../cover_letters/CoverLetterDisplayContainer'\nimport { UpdateJobForm } from '../../components/cover_letter/UpdateCoverLetter'\nimport { Button, Container, Segment, SegmentGroup } from 'semantic-ui-react'\n\n\n\nconst JobDetailView = () => {\n    const [job, setJob] = useState([])\n    const [userId, setUserId] = useState([])\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const paramsJobId = useParams().jobID\n    const history = useHistory()\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/jobs/${paramsJobId}/`)\n            .then(res => {\n                setJob(res.data)\n                setUserId(res.data.belongs_to_user)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(error => {\n                setLoaded({isLoaded: false})\n                alert(error)\n                history.push('/login')\n            })\n    }, [])\n\n    \n\n    if (loaded.isLoaded) {\n        return (\n            <Container>\n                <Segment className=\"hide-buttons\" inverted>\n                    <Button \n                        id=\"show-job-update-button\" \n                        onClick={() => reveal(\"update-job-container\",\"show-job-update-button\")}\n                        >Show Update Job Form</Button>\n                    <Button \n                        id=\"show-cover-letter-button\" \n                        onClick={() => reveal('cover-letter-container', \"show-cover-letter-button\")}\n                        >Show Cover Letter</Button>\n                    <Button \n                        id=\"hide-job-details-button\" \n                        onClick={() => reveal('job-detail', \"hide-job-details-button\")}\n                        >Hide Job Details</Button>\n                </Segment>\n                <Container className=\"job-container\">\n                    <SegmentGroup>\n\n                        <Segment className=\"job-and-cover-letter-container\" inverted>\n                            <JobDetail jobDetail={job} userId={userId} accessToken={accessToken} history={history}/>\n                        </Segment>\n                        <Segment className=\"cover-letter-container\" id=\"cover-letter-choice\" inverted>\n                            <CoverLetterChoiceContainer job={job} userId={userId} inverted/>\n                        </Segment>\n                        <Segment className=\"update-job-container\" inverted>\n                            <UpdateJobForm job={job} userId={userId} setJob={setJob} />\n                        </Segment>\n                    </SegmentGroup>\n                </Container>\n            </Container>\n\n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobDetailView\n\n\nconst reveal = (divToHide, button) => {\n    const div = document.getElementsByClassName(divToHide)[0]\n    const coverLetter = document.getElementsByClassName(\"cover-letter-container\")[0]\n    const coverLetterButton = document.getElementById(\"show-cover-letter-button\")\n    if (divToHide !== \"job-detail\") {\n        div.style.display === '' ? div.style.display = 'block' : div.style.display = ''\n        \n    } else {\n        div.style.display === 'none' ? div.style.display = 'block' : div.style.display = 'none'\n        if (coverLetter.style.display === 'none' || coverLetter.style.display === '')  {\n            coverLetter.style.display = 'block'\n            coverLetterButton.innerText = coverLetterButton.innerText.replace(\"Show\", \"Hide\")\n        } else {\n            coverLetter.style.display = ''\n        }\n    } \n\n\n    let buttonTxt = document.getElementById(button)\n    if (buttonTxt.innerText.includes(\"Hide\")) {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Hide\", \"Show\")\n        buttonTxt.style.backgroundColor = \"#e0e1e2\"\n    } else {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Show\", \"Hide\")\n        buttonTxt.style.backgroundColor = \"grey\"\n        \n    }\n}\n","// import { Form, Input, Button, Checkbox, Spin, Space, Alert } from 'antd';\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab, Divider\n} from 'semantic-ui-react'\n\nimport {Nav} from 'react-bootstrap';\nimport React, { useEffect, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as actions from '../../store/actions/Auth'\nimport { useHistory }  from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\n\n\n\nconst Login = () => {\n    const history = useHistory()\n    const [loading, setLoading] = useState(false)\n    const props = useSelector(state => (\n        { ...state, \n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const {register, handleSubmit} = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        (username, password) => dispatch(actions.authLogin(username, password, setErrorMessage, false, history))\n    )\n\n    const [errorMessage, setErrorMessage] = useState(null)\n    \n    const onFinish = (values) => {\n        setLoading(true)\n        try {\n            onAuth(values.username, values.password)\n        } catch {\n            setErrorMessage(\"Please try again or signup.\")\n        }\n        setLoading(false)\n    };\n\n    \n    return (\n        <div className=\"login-form\">\n            <Segment size=\"large\">\n                <Segment placeholder inverted style={{minWidth: \"10vh\"}}>\n                    <Grid columns={2} relaxed='very' stackable>\n                        <Grid.Column>\n                            <Form onSubmit={handleSubmit(onFinish)} loading={props.loading} error={errorMessage !== null} inverted>\n                                {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                <Form.Field required>\n                                    <label>Username</label>\n                                    <input\n                                        icon='user'\n                                        label='Username'\n                                        name={'username'}\n                                        placeholder='Username'\n                                        autoComplete=\"username\"\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Password</label>\n                                    <input\n                                        icon='lock'\n                                        label='Password'\n                                        name={'password'}\n                                        autoComplete=\"current-password\"\n                                        type='password'\n                                        ref={register()}\n                                    />\n\n                                </Form.Field>\n\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Login</Button>\n                            </Form>\n                        </Grid.Column>\n\n                        <Grid.Column verticalAlign='middle'>\n                            <Button content='Sign up' icon='signup' size='big' onClick={() => history.push(\"/signup\")}/>\n                        </Grid.Column>\n                    </Grid>\n                    <Divider vertical inverted>Or</Divider>\n                </Segment>\n            </Segment>\n        </div>\n    );\n};\n\n\nexport default Login","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport {logout} from '../../store/actions/Auth'\nimport {Grid, Container, Segment, Header, Menu} from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\nimport axiosInstance from '../../store/axiosApi'\n\nconst Shell = props => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const userId = jwtDecode(localStorage.getItem('access_token')).user_id\n    const [user, setUser] = useState({})\n    const [loaded, isLoaded] = useState(false)\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n        // axios.get(`${url}/api/users/${userId}`)\n        axios.get(`/api/users/${userId}`)\n        .then(resp => {\n            setUser(resp.data)\n            // history.push({user: resp.data})\n        })\n        .then(() => {\n            isLoaded(true)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }, [localStorage.getItem('access_token')])\n\n        return (    \n            <Segment vertical>\n                <Container>\n                    <Grid container stackable=\"true\" verticalAlign='top' divided columns={2}>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                <Header as=\"h3\" inverted>Account</Header>\n                                <Menu vertical fluid>\n                                    <Menu.Item \n                                        onClick={() => history.push(\"/user-admin/change-email/\", {user: user})} \n                                        active={history.location.pathname === \"/user-admin/change-email/\"}\n                                        name=\"change-email\">\n                                        Change Email\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/user-admin/change-password/\", { user: user })}\n                                        active={history.location.pathname === \"/user-admin/change-password/\"}\n                                        name=\"change-password\">\n                                        Change Password\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/user-admin/change-account-info/\", { user: user })}\n                                        active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                        name=\"change-account-info\">\n                                        Change Account Info\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => dispatch(logout())}\n                                        name=\"logout\">\n                                        Logout\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Column>\n                            <Grid.Column width={12}>\n                                {props.children}\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n}\n\nexport default Shell\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Button, Table\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\nimport Shell from '../../containers/Account/Shell';\n\n\n\nconst ChangeEmail = (props) => {\n    const [user, setUser] = useState(\"\")\n    const [newEmail] = useState(\"\")\n    const [confirmEmail] = useState(\"\")\n    const [error, setError] = useState({})\n    const {register, handleSubmit} = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(false)\n\n    useEffect(() => {\n        axios.get(`/api/users/${userId}/`, { userId: userId })\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n\n    const onSubmit = data => {\n        const email = data.newEmail\n        const confirmEmail = data.confirmEmail\n        if (data.newEmail !== '' || data.confirmEmail !== '') {\n            if (email === confirmEmail) {\n                if (email !== user.email) {\n                    setLoading(true)\n                    data = {email: email}\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    axios.patch(`/api/users/${user.id}/`, data)\n                    .then(resp => {\n                        setUser(resp.data)\n                    })\n                    .catch(err => {\n                        setError(err.Message)\n                    })\n                    setLoading(false)\n                } else {\n                    setError(`Your email is already ${email}`)\n                }\n            } else {\n                setError(\"Emails don't match!\")\n            }\n        } else {\n            setError(\"Fields are empty!\")\n\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Email</Table.HeaderCell>\n                            <Table.HeaderCell>New Email</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {/* <Header as=\"h2\">Change Email</Header> */}\n                        {/* <br /> */}\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Email: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <Input\n                                            // placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.email}\n                                            type=\"text\"\n                                            name={\"currentEmail\"}\n                                            ref={register({ name: \"currentEmail\" })}\n                                            disabled\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                    <Form.Field>Change Email</Form.Field>\n                                </Table.Cell>\n                                <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Email</label>\n                                    <input\n                                        placeholder=\"New Email\"\n                                        defaultValue={newEmail}\n                                        type=\"email\"\n                                        name={\"newEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Email</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Email\"\n                                        defaultValue={confirmEmail}\n                                        dependencies={[\"newEmail\"]}\n                                        type=\"email\"\n                                        name={\"confirmEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n \n\nexport default ChangeEmail","\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Icon,\n    List,\n    Menu,\n    Segment,\n    Sidebar,\n    Visibility,\n} from 'semantic-ui-react'\n\n\n/* Heads up!\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\n * components for such things.\n */\nconst HomepageHeading = ({ mobile }) => {\n    const history = useHistory()\n    return(\n        <Container text>\n            <Header\n                as='h1'\n                content='Unique Cover Letter Generator'\n                inverted\n                style={{\n                    fontSize: mobile ? '2em' : '4em',\n                    fontWeight: 'normal',\n                    marginBottom: 0,\n                    marginTop: mobile ? '1.5em' : '3em',\n                }}\n            />\n            <Header\n                as='h2'\n                content='Want to save time while applying to jobs?'\n                inverted\n                style={{\n                    fontSize: mobile ? '1.5em' : '1.7em',\n                    fontWeight: 'normal',\n                    marginTop: mobile ? '0.5em' : '1.5em',\n                }}\n            />\n            <Button primary size='huge' onClick={() => history.push('/all-jobs/')}>\n                Get Started\n                <Icon name='right arrow' />\n            </Button>\n        </Container>\n    )\n}\n\n\nHomepageHeading.propTypes = {\n    mobile: PropTypes.bool,\n}\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n    state = {}\n\n    hideFixedMenu = () => this.setState({ fixed: false })\n    showFixedMenu = () => this.setState({ fixed: true })\n\n    render() {\n        const { children } = this.props\n        const { fixed } = this.state\n\n        return (\n            <Container>\n                <Visibility\n                    once={false}\n                    onBottomPassed={this.showFixedMenu}\n                    onBottomPassedReverse={this.hideFixedMenu}\n                >\n                    <Segment\n                        inverted\n                        textAlign='center'\n                        style={{ minHeight: 700, padding: '1em 0em' }}\n                        vertical\n                    >\n                        <HomepageHeading />\n                    </Segment>\n                </Visibility>\n\n                {children}\n            </Container>\n        )\n    }\n}\n\nDesktopContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n    state = {}\n\n    handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n    handleToggle = () => this.setState({ sidebarOpened: true })\n\n    render() {\n        const { children } = this.props\n        const { sidebarOpened } = this.state\n\n        return (\n            <Container as={Sidebar.Pushable} at='mobile'>\n                <Sidebar.Pushable>\n                    <Sidebar\n                        as={Menu}\n                        animation='overlay'\n                        inverted\n                        onHide={this.handleSidebarHide}\n                        vertical\n                        visible={sidebarOpened}\n                    >\n                        <Menu.Item as='a' active>\n                            Home\n                        </Menu.Item>\n                        <Menu.Item as='a'>Work</Menu.Item>\n                        <Menu.Item as='a'>Company</Menu.Item>\n                        <Menu.Item as='a'>Careers</Menu.Item>\n                        <Menu.Item as='a'>Log in</Menu.Item>\n                        <Menu.Item as='a'>Sign Up</Menu.Item>\n                    </Sidebar>\n\n                    <Sidebar.Pusher dimmed={sidebarOpened}>\n                        <Segment\n                            inverted\n                            textAlign='center'\n                            style={{ minHeight: 350, padding: '1em 0em' }}\n                            vertical\n                        >\n                            <Container>\n                                <Menu inverted pointing secondary size='large'>\n                                    <Menu.Item onClick={this.handleToggle}>\n                                        <Icon name='sidebar' />\n                                    </Menu.Item>\n                                    <Menu.Item position='right'>\n                                        <Button as='a' inverted>\n                                            Log in\n                                        </Button>\n                                        <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                                            Sign Up\n                                        </Button>\n                                    </Menu.Item>\n                                </Menu>\n                            </Container>\n                            <HomepageHeading mobile />\n                        </Segment>\n\n                        {children}\n                    </Sidebar.Pusher>\n                </Sidebar.Pushable>\n            </Container>\n        )\n    }\n}\n\nMobileContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst ResponsiveContainer = ({ children }) => (\n    /* Heads up!\n     * For large applications it may not be best option to put all page into these containers at\n     * they will be rendered twice for SSR.\n     */\n        <DesktopContainer>{children}</DesktopContainer>\n)\n\nResponsiveContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst Homepage = () => (\n    <ResponsiveContainer>\n        <Segment style={{ padding: '8em 0em' }} vertical inverted>\n            <Grid container stackable=\"true\" verticalAlign='middle'>\n                <Grid.Row>\n                    <Grid.Column width={8}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            We Help Companies and Companions\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            We can give your company superpowers to do things that they never thought possible.\n                            Let us delight your customers and empower your needs... through pure data analytics.\n                        </p>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            We Make Bananas That Can Dance\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            Yes that's right, you thought it was the stuff of dreams, but even bananas can be\n                            bioengineered.\n                        </p>\n                    </Grid.Column>\n                    <Grid.Column floated='right' width={6}>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column textAlign='center'>\n                        <Button size='huge'>Check Them Out</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n\n        <Segment style={{ padding: '0em' }} vertical inverted>\n            <Grid celled='internally' columns='equal' stackable>\n                <Grid.Row textAlign='center'>\n                    <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            \"What a Company\"\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n                    </Grid.Column>\n                    <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            \"I shouldn't have gone with their competitor.\"\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            <b>Nan</b> Chief Fun Officer Acme Toys\n                        </p>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n\n        <Segment style={{ padding: '8em 0em' }} vertical inverted>\n            <Container text>\n                <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                    Breaking The Grid, Grabs Your Attention\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Instead of focusing on content creation and hard work, we have learned how to master the\n                    art of doing nothing by providing massive amounts of whitespace and generic content that\n                    can seem massive, monolithic and worth your attention.\n                </p>\n                <Button as='a' size='large'>\n                    Read More\n                </Button>\n\n                <Divider\n                    as='h4'\n                    className='header'\n                    horizontal\n                    style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n                >\n                    <a href='#'>Case Studies</a>\n                </Divider>\n\n                <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                    Did We Tell You About Our Bananas?\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\n                    it's really true. It took years of gene splicing and combinatory DNA research, but our\n                    bananas can really dance.\n                </p>\n                <Button as='a' size='large'>\n                    I'm Still Quite Interested\n                </Button>\n            </Container>\n        </Segment>\n\n    </ResponsiveContainer>\n)\n\nexport default Homepage","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport { logout } from '../../store/actions/Auth'\nimport { Grid, Container, Segment, Header, Menu } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\n\n\nconst AccountDashboard = () => {\n    const [user, setUser] = useState({})\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(true)\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n  \n    if (loaded) {\n        return (\n            <div class=\"outer-semantic\">\n                <Segment placeholder className=\"outer-semantic\">\n                    <Container text textAlign=\"center\">\n                        <Grid container divided textAlign=\"center\" >\n                            {/* <Grid.Row> */}\n                                {/* <Grid.Column width={8}> */}\n                                <Container content>\n                                    <Header as=\"h3\">Account</Header>\n                                    <Menu vertical fluid>\n                                        <Menu.Item\n                                            onClick={() => history.push(\"/user-admin/change-email/\", { user: user, previousLocation: \"/admin/change-email/\"})}\n                                            active={history.location.pathname === \"/user-admin/change-email/\"}\n                                            name=\"change-email\">\n                                            Change Email\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/user-admin/change-password/\", { user: user, previousLocation: \"/admin/change-password/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-password/\"}\n                                            name=\"change-password\">\n                                            Change Password\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/user-admin/change-account-info/\", { user: user, previousLocation: \"/admin/change-info/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                            name=\"change-account-info\">\n                                            Change Account Info\n                                        </Menu.Item>\n                                        { user.is_superuser ? <Menu.Item onClick={() => history.push(\"/admin/\")}\n                                            active={history.location.pathname === \"/admin/\"}\n                                            name=\"change-account-info\">\n                                            Admin\n                                        </Menu.Item> : null}\n                                        <Menu.Item onClick={() => dispatch(logout())}\n                                            name=\"logout\">\n                                            Logout\n                                        </Menu.Item>\n                                    </Menu>\n                                </Container>\n                                {/* </Grid.Column> */}\n                            {/* </Grid.Row> */}\n                        </Grid>\n                    </Container>\n                </Segment>\n            </div>\n        )\n    } else {\n        return(\n            <Segment vertical>\n                <Container>\n                    <Grid container stackable=\"true\" verticalAlign='top' divided columns={2}>\n                        <Grid.Column width={4}>\n                            Loading\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n    }\n}\n\nexport default AccountDashboard","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\n\nimport axios from 'axios'\n\nimport jwtDecode from 'jwt-decode';\nimport Shell from '../../containers/Account/Shell';\n\n\n\n\nconst ChangePassword = (props) => {\n    const [newPassword, setNewPassword] = useState(\"\")\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [error, setError] = useState({})\n    const [successMessage, setSuccessMessage] = useState(null)\n    const { register, handleSubmit } = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n\n\n\n    const onSubmit = data => {\n        const oldPassword = data.oldPassword\n        const new_password = data.new_password1\n        const newPassword2 = data.new_password2\n        if (new_password !== '' || newPassword2 !== '' || oldPassword) {\n            if (new_password === newPassword2) {\n                    setLoading(true)\n                    const backendData = { old_password: oldPassword, new_password: new_password }\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    // axios.patch(`${url}/api/change-password/`, backendData)\n                    axios.patch(`/api/change-password/`, backendData)\n                        .then(resp => {\n                            setSuccessMessage(\"You have successfully changed the password!\")\n                            setError({})\n                        })\n                        .catch(err => {\n                            setError(\"Woops seems like something went wrong. Did you enter the correct current password?\")\n                            setSuccessMessage(null)\n                        })\n                    setLoading(false)\n            } else {\n                setError(\"Passwords don't match!\")\n                setSuccessMessage(null)\n            }\n        } else {\n            setError(\"Fields are empty!\")\n            setSuccessMessage(null)\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null} success={successMessage !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Password</Table.HeaderCell>\n                            <Table.HeaderCell>New Password</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Password: </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field>\n                                    <label>Current Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Current Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"oldPassword\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                <Form.Field>New Password</Form.Field>\n                            </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"New Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"new_password1\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Password\"\n                                        defaultValue={confirmPassword}\n                                        dependencies={[\"newPassword\"]}\n                                        type=\"password\"\n                                        name={\"new_password2\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                {successMessage && (<Message success heading=\"Success\" content={successMessage} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n\n\nexport default ChangePassword","import React, { useEffect, useState } from 'react'\nimport { Form, Message, \n        Button,Table, \n    } from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\nimport { confirmAlert, alert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport Shell from '../../containers/Account/Shell';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../../store/actions/Auth'\n\n\nconst ChangeAccountInfo = (props) => {\n    const [user, setUser] = useState({})\n    const history = useHistory()\n    const [error, setError] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n\n    const onSubmit = data => {\n        setLoading(true)\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`/api/users/${user.id}/`, data)\n            .then(resp => {\n                setUser(resp.data)\n                // history.go()\n            })\n            .catch(err => {\n                setError(err.Message)\n            })\n        setLoading(false)\n    }\n\n    const onDelete = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: `Are you sure you want to delete your account ${user.first_name} ${user.last_name}? This is permenant and there is no coming back.`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`/api/users/${user.id}/`)\n                            // .then(resp => console.log(resp))\n                            .then(() => actions.logout())\n                            .then(() => history.push('/login/'))\n                            .then( () => history.go(0))\n                            .catch(error => console.log(error))\n                    }\n                }\n                ,\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n    if (user) {\n        return (\n            <Shell>\n                <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                    <Table striped inverted textAlign=\"center\">\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n    \n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">First Name: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.first_name}\n                                            type=\"text\"\n                                            name={\"first_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                \n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Middle Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"middle_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update middle Name: ${user.middle_name}`}\n                                            defaultValue={user.middle_name}\n                                            type=\"text\"\n                                            name={\"middle_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Last Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"last_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Last Name: ${user.last_name}`}\n                                            defaultValue={user.last_name}\n                                            type=\"text\"\n                                            name={\"last_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"preferred_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Preferred Name: ${user.preferred_name}`}\n                                            defaultValue={user.preferred_name}\n                                            type=\"text\"\n                                            name={\"preferred_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Phone Number: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"phone_number\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Phone Number: ${user.phone_number}`}\n                                            defaultValue={user.phone_number}\n                                            type=\"text\"\n                                            name={\"phone_number\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">LinkedIn: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field name=\"LinkedIn\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update LinkedIn: ${user.linkedin}`}\n                                            defaultValue={user.linkedin}\n                                            type=\"text\"\n                                            name={\"linkedin\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Github: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"github\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Github: ${user.github}`}\n                                            defaultValue={user.github}\n                                            type=\"text\"\n                                            name={\"github\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Portfolio Website: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"portfolioWebsite\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Portfolio Website: ${user.portfolio_website}`}\n                                            defaultValue={user.portfolio_website}\n                                            type=\"text\"\n                                            name={\"portfolio_website\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Street Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Street Address: ${user.street_address}`}\n                                            defaultValue={user.street_address}\n                                            type=\"text\"\n                                            name={\"street_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">City Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update City Address: ${user.city_address}`}\n                                            defaultValue={user.city_address}\n                                            type=\"text\"\n                                            name={\"city_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">State Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update State Address: ${user.state_address}`}\n                                            defaultValue={user.state_address}\n                                            type=\"text\"\n                                            name={\"state_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Zip Code: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Zip Code: ${user.zip_code}`}\n                                            defaultValue={user.zip_code}\n                                            type=\"text\"\n                                            name={\"zip_code\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n    \n                        <Table.Footer>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan='2'textAlign=\"center\">\n                                    {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                    <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                </Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Form>\n                <br></br>\n                <Form onSubmit={handleSubmit(onDelete)} error={error !== null}>\n                    <Button type=\"submit\" negative>Delete Account</Button>\n                    {error.length && (<Message error heading=\"There was an error deleting your account. Please try again later.\" content={error} />)}\n                </Form>\n            </Shell>\n        )\n    } else {\n        history.push('/user-admin/')\n    }\n\n}\n\n\nexport default ChangeAccountInfo","import React, { useState } from 'react'\nimport {\n    Form, Message,\n    Button, Grid,\n    Segment, Table, \n} from 'semantic-ui-react'\nimport { Prompt, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios'\n\nimport jwtDecode from 'jwt-decode';\n\nconst AccountDetailsForm = () => {\n    const history = useHistory()\n    const [requiredFields, setRequiredFields] = useState({})\n    const [errorMessage, setErrorMessage] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    \n    \n    // const dispatch = useDispatch()\n    // window.onbeforeunload = handleChangePages()\n    \n    // const handleChangePages = (e) => {\n    //     if (requiredFields) {\n    //         return null\n    //     } else {\n    //         const message = 'You need to fill in First and Last Name at the minimum.';\n    //         e.returnValue = message;\n    //         return message;\n    //     }\n    // }\n\n    const onSubmit = data => {\n        const navBar = document.getElementsByClassName(\"nav-bar\")[0]\n        navBar.style.display = null\n        setLoading(true)\n        const accessToken = localStorage.getItem('access_token')\n        const userId = jwtDecode(accessToken).user_id\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`/api/users/${userId}/`, data)\n            .then(() => {\n                history.push(\"/all-jobs/\")\n                setRequiredFields(data)\n            })\n            .catch(err => {\n                setErrorMessage(err.Message)\n            })\n        \n        setLoading(false)\n\n    }\n\n    return (\n        <div className=\"login-form\">\n            <Segment placeholder>\n                <Grid stackable=\"true\" >\n                    <Grid.Column stackable={true}>\n                        <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                            <Table striped inverted textAlign=\"center\">\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>Account Info</Table.HeaderCell>\n                                        <Table.HeaderCell> </Table.HeaderCell>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`**First Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"first_name\"}\n                                                        ref={register()}\n                                                        style={{ fontWeight: \"bolder\" }}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Middle Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"middle_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`**Last Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"last_name\"}\n                                                        ref={register()}\n                                                        style={{fontWeight: \"bolder\"}}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Preferred Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"preferred_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Cover Letter Information </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field name=\"phone_number\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Phone Number:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"phone_number\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"LinkedIn\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`LinkedIn:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"linkedin\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"github\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Github:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"github\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"portfolioWebsite\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Portfolio Website:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"portfolio_website\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Address: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Street Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"street_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`City Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"city_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`State Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"state_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Zip Code:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"zip_code\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Footer>\n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                            {errorMessage.length && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                            <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Footer>\n                            </Table>\n                        </Form>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </div>\n\n    );\n};\n\nexport default AccountDetailsForm","import React, {useCallback, useState } from 'react'\nimport * as actions from '../../../store/actions/Auth'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    Form, Message,Button, \n    Grid, Segment, Table,  Divider\n} from 'semantic-ui-react'\n\n// import {\n//     Form,\n//     Input,\n//     Select,\n//     Button,\n// } from 'antd';\nimport { Nav } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\n\nconst RegistrationForm = () => {\n    const history = useHistory()\n    const [loading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const props = useSelector(state => (\n        {\n            ...state,\n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const { register, handleSubmit } = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        ({ ...values }) => dispatch(actions.authSignUp(values, setErrorMessage, true, history))\n    )\n    const onSubmit = (values) => {\n        const data = {...values}\n        const passwordCheck = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n       if (data.password === data.confirm_password) {\n            if (data.password.length > 5) {\n                if (data.password.match(passwordCheck)){\n                    onAuth(data)\n                } else {\n                    setErrorMessage(\"Password needs to contain at least one numeric digit, one uppercase and one lowercase letter\")\n                }\n            } else {\n                setErrorMessage(\"Password needs to be greater than 5 characters\")\n            }\n       } else {\n           setErrorMessage(\"Passwords don't match!\")\n       }\n        // history.push('/')\n    };\n\n\n    return (\n        <div className=\"login-form\">\n            <Segment size=\"large\">\n                <Segment placeholder inverted>\n                    <Grid stackable=\"true\" >\n                        <Grid.Column stackable>\n                            <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                                <Table striped inverted textAlign=\"center\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Username: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Username:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"username\"}\n                                                        ref={register()}\n                                                        minLength={4}\n                                                        maxLength={20}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Email: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Email:`}\n                                                        defaultValue={\"\"}\n                                                        autoComplete=\"new-email\"\n                                                        type=\"email\"\n                                                        name={\"email\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Password: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`Password:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"password\"\n                                                        autoComplete=\"new-password\"\n                                                        name={\"password\"}\n                                                        minLength={6}\n                                                        maxLength={20}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Confirm Password: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`Confirm Password:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"password\"\n                                                        autoComplete=\"new-password\"\n                                                        minLength={6}\n                                                        maxLength={20}\n                                                        name={\"confirm_password\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                    <Table.Footer>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                                {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                            </Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Footer>\n                                </Table>\n                            </Form>\n                        </Grid.Column>\n                    </Grid>\n                    <Divider horizontal inverted>Or</Divider>\n                    <Grid.Column verticalAlign='middle'>\n                        <Button content='Login' icon='signup' size='medium' onClick={() => history.push(\"/login\")}/>\n                    </Grid.Column>\n                </Segment>\n            </Segment>\n        </div>\n    );\n};\n\nexport default RegistrationForm","import React from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\nimport JobListView from './containers/job_container/JobListView'\nimport JobDetailView from './containers/job_container/JobDetailView'\nimport CoverLetterView from './containers/forms/CoverLetterView'\nimport Login from './containers/forms/Login'\nimport ChangeEmail from './components/Account/ChangeEmail'\nimport HomePage from './components/homepage/homepage'\nimport AccountDashboard from './containers/Account/accountDashboard'\nimport ChangePassword from './components/Account/ChangePassword'\nimport ChangeAccountInfo from './components/Account/ChangeAccountInfo'\nimport AccountDetailsForm from './containers/forms/signUpForms/SignUpDetails'\nimport RegistrationForm from './containers/forms/signUpForms/SignupInitial'\nimport { UpdateJobForm } from './components/cover_letter/UpdateCoverLetter'\n\n\nconst PrivateRoute = ({components: Component, ...rest}) => {\n    const authenticated = localStorage.getItem(\"access_token\") !== null\n    return (\n        authenticated === true ? \n        <Route {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/login\"/>\n    )\n    \n}\nconst NeedUserCredentials = ({components: Component, ...rest}) => {\n    const state = useHistory().location.state\n    return (\n        state !== undefined ? \n        <PrivateRoute {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/user-admin/\"/>\n    )\n}\n\n\n\nconst BaseRouter = (props) => (\n    <div>\n        <Switch>\n            <PrivateRoute exact path='/job/form/' component={CoverLetterView}/>\n            <PrivateRoute exact path='/job/form/update/' component={UpdateJobForm} {...props}/>\n            <PrivateRoute exact path='/job/:jobID/' component={JobDetailView}/>\n            <PrivateRoute exact path='/all-jobs/' component={JobListView}/>\n            <PrivateRoute exact path='/signup-user-details/' component={AccountDetailsForm}/>\n            <NeedUserCredentials exact path='/user-admin/change-email/' component={ChangeEmail} {...props}/>\n            <NeedUserCredentials exact path='/user-admin/change-password/' component={ChangePassword} {...props}/>\n            <NeedUserCredentials exact path='/user-admin/change-account-info/' component={ChangeAccountInfo} {...props}/> */}\n            <PrivateRoute exact path='/user-admin/' component={AccountDashboard} />\n            <Route exact path='/signup/' component={RegistrationForm}/>\n            <Route exact path='/login/' component={Login}/>\n            <Route exact path='' component={HomePage}/>\n            <Route path='/' component={HomePage}/>\n        </Switch>\n    </div>\n)\n\n\n\nexport default BaseRouter","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    // componentDidCatch(error, errorInfo) {\n    //     // You can also log the error to an error reporting service\n    //     logErrorToMyService(error, errorInfo);\n    // }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","import { \n  Navbar, \n  Nav, \n  NavDropdown, \n} from 'react-bootstrap';\nimport React, { useCallback, useEffect, useState, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../../../store/actions/Auth'\nimport ErrorBoundary from '../../../store/ErrorBoundary';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport rg4js from 'raygun4js';\n\n\n\nconst Header = () => {\n  let history = useHistory()\n  const [user, setUser] = useState({})\n  const props = useSelector(state => (\n    {\n      ...state,\n      isAuthenticated: localStorage.getItem('access_token') !== null,\n      loading: state.loading,\n      error: state.error\n    }))\n  \n  const dispatch = useDispatch()\n\n  const logout = () => {\n    try {\n      history.push('/login/')\n      dispatch(actions.logout())\n    } catch (e) {\n      alert('unable to logout')\n    }\n  }\n\n  const accessToken = localStorage.getItem('access_token')\n  const userId = accessToken !== null ? jwtDecode(accessToken).user_id : null\n\n  useEffect(() => {\n    props.loading = true\n    axios.defaults.headers = {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    }\n    if (userId) {\n      axios.get(`/api/users/${userId}/`)\n        .then(resp => {\n          setUser(resp.data)\n          rg4js('setUser', {\n            identifier: `${resp.data.username}`,\n            isAnonymous: false,\n            email: `${resp.data.email}`,\n            firstName: `${resp.data.first_name}`,\n            fullName: `${resp.data.first_name} ${resp.data.last_name}`\n          })\n          props.loading = false\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }, [props.isAuthenticated])\n\n  return  (\n    <div>\n      {props.isAuthenticated ? LoggedInNav(props, logout, user) : loggedOutNav(props, logout)}\n    </div>\n  )\n}\n\n\n\nexport default Header\n\nconst LoggedInNav = (props, logout, user) => {\n  if (!props.loading) {\n    return(\n      <Navbar bg=\"light\" expand=\"lg\" className=\"nav-bar\" sticky={true}>\n        <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\n            <Nav.Link href=\"/all-jobs/\">All Jobs</Nav.Link>\n            <Nav.Link href=\"/job/form/\">Cover Letter Form</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Header>Welcome {user.preferred_name ? user.preferred_name : user.first_name}</NavDropdown.Header>\n              <NavDropdown.Item href=\"/user-admin/\">Account</NavDropdown.Item>\n              {\n                user.is_superuser ? \n                <NavDropdown.Item href=\"/admin/\">Admin</NavDropdown.Item> :\n                null\n              }\n              <NavDropdown.Divider />\n              <ErrorBoundary>\n                <NavDropdown.Item onClick={() => logout()}>Logout</NavDropdown.Item>\n              </ErrorBoundary>\n            </NavDropdown>\n          </Nav>\n          {/* <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"outline-success\">Search</Button>\n            </Form> */}\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  } else {\n    return (\n      <Header>Loading</Header>\n    )\n  }\n}\n\n\nconst loggedOutNav = () => (\n  < Navbar bg=\"light\" expand=\"lg\" className=\"text-center\" >\n    <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/login/\">Login</Nav.Link>\n        <Nav.Link href=\"/signup/\">Sign Up</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar >\n)\n\n\n  ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Container,\n    Grid,\n    Header,\n    List,\n    Segment,\n} from 'semantic-ui-react'\n\n\nconst FooterPage = () => {\n    return (\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n            <Container>\n                <Grid divided inverted stackable>\n                    <Grid.Row>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='Creator' />\n                            <List link inverted>\n                                <List.Item href='http://macallan.space/' target=\"_blank\">Personal Portfolio</List.Item>\n                                <List.Item href='https://github.com/Micjoey' target=\"_blank\">Github</List.Item>\n                                <List.Item href='https://www.linkedin.com/in/macallan-savett/' target=\"_blank\">LinkedIn</List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='About' />\n                            <List link inverted>\n                                <List.Item as='a'>About</List.Item>\n                                <List.Item as='a'>FAQ</List.Item>\n                                <List.Item as='a'>How To Access</List.Item>\n                                {/* <List.Item as='a'>Favorite X-Men</List.Item> */}\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={7}>\n                            <Header as='h4' inverted>\n                                Footer Header\n                            </Header>\n                            <p>\n                                Any suggestions or comments please send to\n                            </p>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Segment>\n    );\n}\n\nexport default FooterPage;","import BaseRouter from './routes'\nimport { BrowserRouter as Router}  from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport './css/App.css';\nimport Header from './containers/Banners/Header/NavBar';\nimport FooterPage from './containers/Banners/Footer/FooterBar';\nimport {\n  Container, Segment,\n} from 'semantic-ui-react'\nimport { createBrowserHistory } from 'history';\nimport rg4js from 'raygun4js';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  const props = useSelector(state => ({ ...state, isAuthenticated: localStorage.getItem('access_token') !== null}))\n  history.listen((location, action) => {\n    rg4js('trackEvent', { type: 'pageView', path: location.pathname });\n  });\n  return (\n    <Segment inverted>\n      {/* <Container> */}\n        <div className=\"App\">\n          <header className=\"App-header\">\n              <Router>\n                <Header {...props}/>\n                <BaseRouter/> \n                <FooterPage/>\n              </Router>\n          </header>\n        </div>\n      {/* </Container> */}\n    </Segment>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/ActionTypes'\nimport { updateObject } from '../utility'\n\nconst initialState = {\n    token: null,\n    access_token: null,\n    refresh_token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        access_token: action.access_token,\n        refresh_token: action.refresh_token,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        access_token: null,\n        refresh_token: null,\n        token: null,\n    })\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: \n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: \n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: \n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: \n            return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducers/auth'\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux'\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}