{"version":3,"sources":["components/jobInfo/AllJobs.js","components/pagination/Pagination.js","components/cover_letter/CoverLetterForm.js","containers/job_container/JobListView.js","components/jobInfo/formattedData.js","components/jobInfo/JobDetail.js","components/cover_letter/templates/CoverLetter.js","components/cover_letter/templates/NonTechnicalCoverLetter.js","components/cover_letter/templates/StandardJobTemplate.js","components/cover_letter/templates/TriplebyteCoverLetter.js","containers/cover_letters/determineCoverLetterFormat.js","containers/cover_letters/CoverLetterDisplayContainer.js","containers/job_container/JobDetailView.js","store/axiosApi.js","store/actions/ActionTypes.js","store/actions/Auth.js","containers/forms/CoverLetterView.js","containers/forms/Login.js","containers/forms/signUpForms.js/SignupInitial.js","containers/Account/Shell.js","components/Account/ChangeEmail.js","components/homepage/homepage.js","containers/Account/accountDashboard.js","components/Account/ChangePassword.js","components/Account/ChangeAccountInfo.js","containers/forms/signUpForms.js/SignUpDetails.js","routes.js","store/ErrorBoundary.js","containers/Banners/Header/NavBar.js","containers/Banners/Footer/FooterBar.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Jobs","props","allJobs","Object","values","jobs","ListGroup","map","job","href","id","Item","position_title","company","Pagination","pageIndex","total","perPage","onNext","onPrevious","setAllJobs","setNext","setOnPrevious","setPageIndex","lastPage","Math","ceil","previous","onClick","previousPage","next","nextPage","home","goHome","axios","get","then","res","data","results","className","JobForm","history","useHistory","useState","localStorage","getItem","accessToken","requestType","userId","jwt_decode","user_id","jobID","jobStage","templateChoices","job_stage","template_choices","buttonTxt","useForm","defaultValues","job_posting_website","top_skills","bullet_point_one","bullet_point_two","bullet_point_three","bullet_point_four","bullet_point_five","register","errors","handleSubmit","onSubmit","defaults","headers","Authorization","post","window","location","catch","console","log","put","reload","push","job_stages","style","display","color","name","ref","margin","keys","key","idx","value","defaultValue","width","placeholder","required","city","link","recruiter","description","pre_bullet_point_paragraph_one","pre_bullet_point_paragraph_two","bullet_point_six","bullet_point_seven","bullet_point_eight","post_bullet_point_paragraph_one","post_bullet_point_paragraph_two","type","JobList","jobProps","setJobProps","isLoaded","loaded","setLoaded","count","setCount","useEffect","response","err","alert","length","formattedJobData","jobDetail","jobDetailKeys","to","CoverLetter","NonTechnicalCoverLetter","user","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","email","linkedin","github","portfolio_website","phone_number","preferred_name","last_name","first_name","StandardCoverLetter","TriplebyteCoverLetter","determineCoverLetter","coverLetter","CoverLetterChoiceContainer","setUser","currentCoverLetterChoice","setCurrentCoverLetterChoice","template_choice","JobDetailView","setjob","setUserId","paramsJobId","useParams","belongs_to_user","error","reveal","JobDetail","confirmAlert","title","message","buttons","label","delete","divToHide","button","div","document","getElementsByClassName","getElementById","innerText","includes","replace","axiosInstance","create","baseURL","timeout","interceptors","use","originalRequest","config","status","statusText","refresh_token","access_token","refresh","setItem","access","authCheckState","Promise","reject","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","authStart","actionTypes","authSuccess","token","authFail","logout","removeItem","authLogin","username","password","setErrorState","justSignedUp","dispatch","expirationTime","undefined","expirationDate","getTime","setTimeout","CoverLetterView","useSelector","state","isAuthenticated","loading","Login","setLoading","useDispatch","onAuth","useCallback","actions","setErrorMessage","errorMessage","Segment","inverted","Grid","columns","relaxed","stackable","Column","Form","Message","heading","content","Field","icon","autoComplete","Button","primary","disabled","verticalAlign","size","Divider","vertical","RegistrationForm","password1","password2","confirm_password","refreshToken","match","Table","striped","textAlign","Header","Row","HeaderCell","colSpan","Body","Cell","minLength","maxLength","Footer","horizontal","Shell","jwtDecode","resp","Container","container","divided","as","Menu","fluid","active","pathname","children","ChangeEmail","newEmail","confirmEmail","setError","patch","Input","dependencies","require","HomePage","AccountDashboard","class","text","previousLocation","ChangePassword","newPassword","confirmPassword","successMessage","setSuccessMessage","oldPassword","new_password","new_password1","newPassword2","new_password2","backendData","old_password","success","ChangeAccountInfo","go","middle_name","street_address","city_address","state_address","zip_code","AccountDetailsForm","PrivateRoute","Component","components","rest","render","NeedUserCredentials","BaseRouter","exact","path","component","JobListView","Signup","ErrorBoundary","hasError","this","React","e","loggedInNav","loggedOutNav","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","FooterPage","backgroundColor","md","lg","xl","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM"],"mappings":"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","file":"static/js/main.f0f29547.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { ListGroup } from 'react-bootstrap'\n\n\nconst Jobs = props => {\n    const allJobs = Object.values(props.jobs)\n    \n    return (\n        <ListGroup>\n           {allJobs.map(job => (\n               <a href={`/job/${job.id}`} key={job.id}>\n                   <ListGroup.Item>\n                       {job.position_title} - {job.company}\n                   </ListGroup.Item>\n               </a>  \n           ))}\n        </ListGroup>\n    );\n};\n\n\nexport default Jobs;","import axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/";\nimport React, { useEffect } from 'react';\n\n\nexport default function Pagination(props) {\n    const { pageIndex, total, perPage, onNext, onPrevious, setAllJobs, setNext, setOnPrevious, setPageIndex } = props;\n    const lastPage = Math.ceil(total / perPage);\n    const previous = pageIndex > 1 ? (<button onClick={() => previousPage()}>Previous</button>) : null;\n    const next = pageIndex < lastPage ? (<button onClick={() => nextPage()}>Next</button>) : null;\n    const home = pageIndex > 1 ? (<button onClick={() => goHome()}>Home</button>) : null;\n\n    const nextPage = () => {\n        axios.get(onNext)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex+1)\n            })\n    }\n\n    const previousPage = () => {\n        axios.get(onPrevious)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex - 1)\n            })\n    }\n\n    const goHome = () => {\n        axios.get(`http://127.0.0.1:3000/api/jobs/`)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(1)\n            })\n    }\n\n    return (\n        <div className=\"Pagination\">\n            <div className=\"Pagination-actions\">\n                {previous}\n                {home}\n                {next}\n            </div>\n            <div className=\"Pagination-stats\">\n                Page {pageIndex} of {lastPage}\n                &nbsp;(displaying {perPage} items per page)\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport const JobForm = (props) => {\n    const history = useHistory()\n    const [accessToken, setAccessToken] = useState(localStorage.getItem('access_token'))\n    let job = null\n    const requestType = props.requestType\n    const userId = jwt_decode(accessToken).user_id\n    let jobID = null\n    let jobStage = \"Initial\"\n    let templateChoices = \"non-technical-cover-letter\"\n    if (props.job) {\n        job = props.job\n        jobID = job.id\n        jobStage = job.job_stage\n        templateChoices = job.template_choices\n    }\n    const buttonTxt = props.buttonTxt\n    const { register, errors, handleSubmit} = useForm({\n        defaultValues: {\n            job_posting_website: \"LinkedIn\",\n            top_skills: \"Dynamic and accomplished Software Engineer with experience and expertise in \",\n            bullet_point_one: \"Over the last five years, I have worked in multiple team-based, customer-oriented, professional roles.\",\n            bullet_point_two: \"For sixteen years on competitive soccer teams, I practiced the art of communicating in a fast moving environment, including four years of college D3 soccer. \",\n            bullet_point_three: \"My passion for competitive soccer has taught me to learn from my mistakes using constructive feedback to improve future action.\",\n            bullet_point_four: \"I continually strive for opportunities to improve my skills and have the opportunity to problem-solve.\",\n            bullet_point_five: \"A passion for reading books on communication, relationship building, and leadership allow me to learn continually.\",\n            job_stage: jobStage,\n            template_choices: templateChoices,\n\n        }\n    })\n\n    const onSubmit = (data) => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        switch (requestType) {\n            case 'post':\n                axios.post('http://127.0.0.1:3000/api/jobs/', data)\n                    .then(res => window.location.href = `http://127.0.0.1:3001/job/${res.data.id}`)\n                    .catch(errors => console.log(errors))\n                break\n            case 'put':\n                axios.put(`http://127.0.0.1:3000/api/jobs/${jobID}/`, data)\n                    .then(() => window.location.reload())\n                    .catch(errors => console.log(errors))\n                break\n            default:\n                history.push('http://127.0.0.1:3000/api/jobs')\n                window.location.href = \"/login\"\n                break\n        }\n\n    };\n\n    const template_choices = {\n        'non-technical-cover-letter': 'Non-technical Cover Letter',\n        'Standard Job Template': 'Standard Job Template',\n        'Triplebyte (message-version)': 'Triplebyte (message-version)',\n        'cover-letter-4': 'Template 4',\n        'cover-letter-5': 'Template 5',\n    }\n        \n    const job_stages = {\n        'Initial': 'Initial',\n        'Active': 'Active',\n        'Accepted': 'Accepted',\n        'Rejected': 'Rejected',\n        'No Response': 'No Response',\n    }\n\n    if (job) {\n        return (\n            <div className=\"update-job-form\">\n                <h1 className=\"form-title\">Update Job Info</h1>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <label style={{ display: 'flex' }}>\n                        <p>Template Choices: </p>\n                        <select style={{ color: 'Red' }} name=\"template_choices\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                            {Object.keys(template_choices).map((key, idx)=> (\n                                <option value={key} key={idx } name={template_choices[key]}> {template_choices[key]} </option>\n                            ))}\n                        </select>\n                    </label>\n                    <label style={{ display: 'flex' }}>\n                        <p>Job Stage: </p>\n                        <select style={{ color: 'black' }} name=\"job_stage\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                            {Object.keys(job_stages).map((key, idx)=> (\n                                <option \n                                    defaultValue={job_stages[key]} \n                                    key={idx} \n                                    name={job_stages[key]}\n                                > {job_stages[key]} </option>\n                            ))}\n                        </select>\n                    </label>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Job Posting Website: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Job Posting Website\"}\n                            defaultValue={job.job_posting_website}\n                            name={\"job_posting_website\"}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.job_posting_website && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Position Title: </p>\n                        <input\n                            style={{ color: 'black' }}\n                            placeholder={\"Position Title\"}\n                            defaultValue={job.position_title}\n                            name={\"position_title\"}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.position_title && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Company: </p>\n                        <input\n                            style={{ color: 'black' }}\n                            placeholder={\"Company\"}\n                            defaultValue={job.company}\n                            name={\"company\"}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.company && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>City: </p>\n                        <input\n                            style={{ color: 'black' }}\n                            placeholder={\"City\"}\n                            defaultValue={job.city}\n                            name={\"city\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.city && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Link: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Link\"}\n                            defaultValue={job.link}\n                            name={\"link\"}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em'}}\n                        />\n                        {errors.link && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Recruiter: </p>\n                        <input\n                            style={{ color: 'black' }}\n                            placeholder={\"Recruiter\"}\n                            defaultValue={job.recruiter}\n                            name={\"recruiter\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.recruiter && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Description: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Description\"}\n                            defaultValue={job.description}\n                            name={\"description\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.description && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Pre Bullet Point - Paragraph one: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Pre Bullet Point - Paragraph one\"}\n                            defaultValue={job.pre_bullet_point_paragraph_one}\n                            name={\"pre_bullet_point_paragraph_one\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.pre_bullet_point_paragraph_one && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Pre Bullet Point - Paragraph two: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Pre Bullet Point - Paragraph two\"}\n                            name={\"pre_bullet_point_paragraph_two\"}\n                            defaultValue={job.pre_bullet_point_paragraph_two}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.pre_bullet_point_paragraph_two && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Top Skill: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Top Skill\"}\n                            defaultValue={job.top_skills}\n                            name={\"top_skills\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.top_skills && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Bullet Point One: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point One\"}\n                            defaultValue={job.bullet_point_one}\n                            name={\"bullet_point_one\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_one && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Bullet Point Two: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Two\"}\n                            defaultValue={job.bullet_point_two}\n                            name={\"bullet_point_two\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_two && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Bullet Point Three: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Three\"}\n                            defaultValue={job.bullet_point_three}\n                            name={\"bullet_point_three\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_three && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Bullet Point Four: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Four\"}\n                            defaultValue={job.bullet_point_four}\n                            name={\"bullet_point_four\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_four && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Bullet Point Five: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Five\"}\n                            defaultValue={job.bullet_point_five}\n                            name={\"bullet_point_five\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_five && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Bullet Point Six: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Six\"}\n                            defaultValue={job.bullet_point_six}\n                            name={\"bullet_point_six\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_six && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Bullet Point Seven: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Seven\"}\n                            defaultValue={job.bullet_point_seven}\n                            name={\"bullet_point_seven\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_seven && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Bullet Point Eight: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Eight\"}\n                            defaultValue={job.bullet_point_eight}\n                            name={\"bullet_point_eight\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_eight && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Post Bullet Point - Paragraph one: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Post Bullet Point - Paragraph one\"}\n                            defaultValue={job.post_bullet_point_paragraph_one}\n                            name={\"post_bullet_point_paragraph_one\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.post_bullet_point_paragraph_one && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{ width: '12em' }}>Post Bullet Point - Paragraph two: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Post Bullet Point - Paragraph two\"}\n                            defaultValue={job.post_bullet_point_paragraph_two}\n                            name={\"post_bullet_point_paragraph_two\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.post_bullet_point_paragraph_two && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        {/* <p style={{width: '12em'}}>Choice of User: </p> */}\n                        <input\n                            type=\"hidden\"\n                            style={{ color: 'black' }}\n                            placeholder={userId}\n                            name={\"belongs_to_user\"}\n                            defaultValue={userId}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {/* {errors.choice_of_user && \"Your input is required\"} */}\n                    </div>\n                     <input style={{ color: 'Black' }} type=\"submit\" value={buttonTxt} className=\"form-button\"/>\n                </form>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"create-job-form\">\n                <h1 className=\"form-title\">Create Cover Letter</h1>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <label style={{ display: 'flex' }}>\n                        <p style={{width: '12em'}}>Template Choices: </p>\n                        <select style={{ color: 'Red' }} name=\"template_choices\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                            {Object.keys(template_choices).map((key, idx) => (\n                                <option value={key} key={idx} name={template_choices[key]}> {template_choices[key]} </option>\n                            ))}\n                        </select>\n                    </label>\n                    <label style={{ display: 'flex' }}>\n                        <p style={{width: '12em'}}>Job Stage: </p>\n                        <select style={{ color: 'black' }} name=\"job_stage\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                            {Object.keys(job_stages).map((key, idx) => (\n                                <option key={idx} name={job_stages[key]}> {job_stages[key]} </option>\n                            ))}\n                        </select>\n                    </label>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Job Posting Website: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Job Posting Website\"}\n                            name={\"job_posting_website\"}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.job_posting_website && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Position Title: </p>\n                        <input\n                            style={{ color: 'black' }}\n                            placeholder={\"Position Title\"}\n                            name={\"position_title\"}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.position_title && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        {/* <p style={{width: '12em'}}>Choice of User: </p> */}\n                        <input\n                            type=\"hidden\"\n                            style={{ color: 'black' }}\n                            placeholder={userId}\n                            name={\"belongs_to_user\"}\n                            defaultValue={userId}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {/* {errors.choice_of_user && \"Your input is required\"} */}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Company: </p>\n                        <input\n                            style={{ color: 'black' }}\n                            placeholder={\"Company\"}\n                            name={\"company\"}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.company && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>City: </p>\n                        <input\n                            style={{ color: 'black' }}\n                            placeholder={\"City\"}\n                            name={\"city\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.city && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Link: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Link\"}\n                            name={\"link\"}\n                            ref={register({ required: true })}\n                            style={{ display: 'flex', margin: '0em 1em'}}\n                        />\n                        {errors.link && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Recruiter: </p>\n                        <input\n                            style={{ color: 'black' }}\n                            placeholder={\"Recruiter\"}\n                            name={\"recruiter\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.recruiter && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Description: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Description\"}\n                            name={\"description\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.description && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Pre Bullet Point - Paragraph one: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Pre Bullet Point - Paragraph one\"}\n                            name={\"pre_bullet_point_paragraph_one\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.pre_bullet_point_paragraph_one && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Pre Bullet Point - Paragraph two: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Pre Bullet Point - Paragraph two\"}\n                            name={\"pre_bullet_point_paragraph_two\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.pre_bullet_point_paragraph_two && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Top Skill: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Top Skill\"}\n                            name={\"top_skills\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.top_skills && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Bullet Point One: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point One\"}\n                            name={\"bullet_point_one\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_one && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Bullet Point Two: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Two\"}\n                            name={\"bullet_point_two\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_two && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Bullet Point Three: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Three\"}\n                            name={\"bullet_point_three\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_three && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Bullet Point Four: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Four\"}\n                            name={\"bullet_point_four\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_four && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Bullet Point Five: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Five\"}\n                            name={\"bullet_point_five\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_five && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Bullet Point Six: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Six\"}\n                            name={\"bullet_point_six\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_six && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Bullet Point Seven: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Seven\"}\n                            name={\"bullet_point_seven\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_seven && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Bullet Point Eight: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Bullet Point Eight\"}\n                            name={\"bullet_point_eight\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.bullet_point_eight && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Post Bullet Point - Paragraph one: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Post Bullet Point - Paragraph one\"}\n                            name={\"post_bullet_point_paragraph_one\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.post_bullet_point_paragraph_one && \"Your input is required\"}\n                    </div>\n                    <div style={{ display: 'flex', margin: '1em 0' }}>\n                        <p style={{width: '12em'}}>Post Bullet Point - Paragraph two: </p>\n                        <textarea\n                            style={{ color: 'black' }}\n                            placeholder={\"Post Bullet Point - Paragraph two\"}\n                            name={\"post_bullet_point_paragraph_two\"}\n                            ref={register({ required: false })}\n                            style={{ display: 'flex', margin: '0em 1em' }}\n                        />\n                        {errors.post_bullet_point_paragraph_two && \"Your input is required\"}\n                    </div>\n                    <input style={{ color: 'Black' }} type=\"submit\" value={buttonTxt} className=\"form-button\" />\n                </form>\n\n            </div>\n        )\n    }\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport { useHistory } from 'react-router-dom';\n\nimport Jobs from '../../components/jobInfo/AllJobs'\nimport Pagination from '../../components/pagination/Pagination'\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm';\n\n\n\nconst JobList = () => {\n    let history = useHistory()\n\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const [jobProps, setJobProps] = useState([])\n    const [allJobs, setAllJobs] = useState([])\n    const [next, setNext] = useState([])\n    const [onPrevious, setOnPrevious] = useState([])\n    const [loaded, setLoaded] = useState({isLoaded: false})\n    const [pageIndex, setPageIndex] = useState(1)\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`http://127.0.0.1:3000/api/jobs/`, )\n        .then( res => {\n            setAllJobs(res.data.results)\n            return res\n        })\n        .then(response => {\n            setAllJobs(response.data.results)\n            setJobProps(response.data)\n            setNext(response.data.next)\n            setCount(response.data.count)\n            setOnPrevious(response.data.previous)\n        })\n        .then(() => {\n            setLoaded({isLoaded: true})\n        })\n        .catch(err => {\n            history.push('/login')\n            alert(err)\n        })\n    }, [])\n    \n    if (loaded.isLoaded) {\n        if (allJobs.length) {\n            return (\n                <div>\n                    <h1>All Jobs:</h1>\n                    <div className=\"Jobs-container\">\n                        <Jobs jobs={allJobs} jobProps={jobProps}/>\n                    </div>\n                    <footer>\n                        <Pagination \n                            pageIndex={pageIndex} \n                            total={count} \n                            perPage={20} \n                            onNext={next}\n                            onPrevious={onPrevious}\n                            setAllJobs={setAllJobs}\n                            setNext = {setNext}\n                            setOnPrevious={setOnPrevious}\n                            setPageIndex={setPageIndex}\n                        />\n                    </footer>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    No Jobs - Please create your first cover letter below.\n                    <JobForm requestType=\"post\" jobID={null} buttonTxt=\"Create Cover Letter\" />\n                </div>\n            )\n        }\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobList","export const formattedJobData = {\n    'id': 'Id',\n    'form_creation_date': 'Creation Date',\n    'template_choices': 'Template Choice',\n    'job_stage': 'Job Stage',\n    'choice_of_user': 'Choice of User',\n    'job_posting_website': 'Job Website',\n    'position_title': 'Position Title',\n    'company': 'Company',\n    'city': 'City',\n    'link': 'Job Link',\n    'recruiter': 'Recruiter',\n    'description': 'Description',\n    'pre_bullet_point_paragraph_one': 'Pre Paragraph One',\n    'pre_bullet_point_paragraph_two': 'Pre Paragraph Two',\n    'top_skills': 'Top Skills',\n    'bullet_point_one': 'Bullet Point One',\n    'bullet_point_two': 'Bullet Point Two',\n    'bullet_point_three': 'Bullet Point Three',\n    'bullet_point_four': 'Bullet Point Four',\n    'bullet_point_five': 'Bullet Point Five',\n    'bullet_point_six': 'Bullet Point Six',\n    'bullet_point_seven': 'Bullet Point Seven',\n    'bullet_point_eight': 'Bullet Point Eight',\n    'post_bullet_point_paragraph_one': 'Post Paragraph One',\n    'post_bullet_point_paragraph_two': 'Post Paragraph Two',\n    'modified_date': 'Modified Date',\n    'created_date': 'Created Date',\n    'belongs_to_user': 'Belongs To User ID',\n}\n\nexport const formattedUserData = {\n    \"first_name\": \"First Name\",\n    \"middle_name\":\"Middle Name\",\n    \"last_name\":\"Last Name\",\n    \"preferred_name\":\"Preferred Name\",\n    \"phone_number\":\"Phone Number Name\",\n    \"linkedin\":\"Linkedin\",\n    \"github\":\"Github\",\n    \"portfolio_website\":\"Portfolio Website\",\n    \"street_address\":\"Stree Address\",\n    \"city_address\":\"City Address\",\n    \"state_address\":\"State Address\",\n    \"zip_code\":\"Zip Code\",\n\n}","import React from \"react\";\nimport {formattedJobData} from \"./formattedData\";\nimport {Link} from 'react-router-dom'\n\nconst Jobs = props => {\n    \n    const jobDetail = props.jobDetail\n    const jobDetailKeys = Object.keys(jobDetail)\n\n    return (\n        <div className=\"job-detail\">\n            <h1>Job Detail: </h1>\n            <div>\n                {jobDetailKeys.map(key => (\n                    <div className=\"job-detail-container\" key={`${key} - container`}>\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p key={`${key}`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p className=\"job-info-data\" key={`key value - ${key}`} key={`${key} - ${key}`}>{jobDetail[key]}</p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p key={`${key} + 1`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p><Link to={jobDetail[key]} className=\"job-info-data\" key={`key value - ${key} + 1`} key={`${key} - ${key}`}>{jobDetail[key]}</Link></p> : null }\n                    </div>\n               ))}\n            </div>\n        </div>\n    );\n};\n\n\nexport default Jobs;\n\n\n\n","const CoverLetter = (props) => {\n    const job = props.job \n    // const user = props.user\n    return (\n        <div>\n            <h1>Cover Letter</h1>\n            {job.position_title}\n        </div>\n    )\n}\n\nexport default CoverLetter","\n\n\n\nconst NonTechnicalCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Non Tech Cover Letter</h1>\n                    <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3>\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            {user.email ? <p className=\"com\">{user.email}</p> \n                            :\n                            null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a> | </p> \n                            :\n                            null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a> | </p> \n                            :\n                            null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a> | </p> \n                            :\n                            null}\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter }:</p> \n                                :\n                                <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                Thank you for the opportunity to apply for the {` ${job.position_title} `} \n                                role at your company - { job.company }.\n                                After reviewing your job description, it's clear that you're looking\n                                for a candidate that is familiar with\n                                the responsibilities associated with the \n                                {job.position_title ? ` ${job.position_title} ` : null }\n                                 role and can perform them confidently. Given these requirements,\n                                I am confident that I can do the job adeptly and fulfill the above\n                                expectations successfully.\n                            </p>\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <br/>\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title } ` : null }\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email } to arrange a convenient time to chat.\n                            </p>\n                            <br/>\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely, \n                                <br/>\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                :\n                                `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n    \n            </div>\n        )\n    }\n}\n\nexport default NonTechnicalCoverLetter","const StandardCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Standard Letter</h1>\n                    <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3>\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            {user.email ? <p className=\"com\">{user.email}</p>\n                                :\n                                null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a> | </p>\n                                :\n                                null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a> | </p>\n                                :\n                                null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a> | </p>\n                                :\n                                null}\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter}:</p>\n                                    :\n                                    <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                As advertised on the {job.job_posting_website ? ` ${job.job_posting_website } ` : ` ${ job.company } ` } website, your need for a\n                                {` ${job.position_title} ` } is an excellent match to my background \n                                and career goals. With my strong education and experience, I am \n                                confident I can make an immediate contribution given the opportunity.\n                            </p>\n                            {job.pre_bullet_point_paragraph_one ? <p>{job.pre_bullet_point_paragraph_one}</p> : null}\n                            {job.pre_bullet_point_paragraph_two ? <p>{job.pre_bullet_point_paragraph_two}</p> : null}\n                            <p>Highlights of my qualifications most relevant to your needs include:</p>\n                            <p> * {job.top_skills}</p>\n                            {job.bullet_point_one ? <p> * {job.bullet_point_one }</p> : null }\n                            {job.bullet_point_two ? <p> * {job.bullet_point_two }</p> : null }\n                            {job.bullet_point_three ? <p> * {job.bullet_point_three }</p> : null }\n                            {job.bullet_point_four ? <p> * {job.bullet_point_four }</p> : null }\n                            {job.bullet_point_five ? <p> * {job.bullet_point_five }</p> : null }\n                            {job.bullet_point_six ? <p> * {job.bullet_point_six }</p> : null }\n                            {job.bullet_point_seven ? <p> * {job.bullet_point_seven }</p> : null }\n                            {job.bullet_point_eight ? <p> * {job.bullet_point_eight }</p> : null }\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <p>These proven abilities can contribute to {`${job.company} `}'s continued success. I would welcome the opportunity to discuss my background with you in detail and to learn more about your company and its goals. </p>\n                            <br />\n                            {job.post_bullet_point_paragraph_one ? <p>{job.post_bullet_point_paragraph_one}</p> : null}\n                            {job.post_bullet_point_paragraph_two ? <p>{job.post_bullet_point_paragraph_two}</p> : null}\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title} ` : null}\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email} to arrange a convenient time to chat.\n                            </p>\n                            <br />\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely,\n                                <br />\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                    :\n                                    `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default StandardCoverLetter","const TriplebyteCoverLetter = (props) => {\n    const job = props.job \n    const user = props.user\n    return (\n        <div>\n            <h1> Triplebyte Cover Letter</h1>\n            {job.position_title}\n        </div>\n    )\n}\n\nexport default TriplebyteCoverLetter","import CoverLetter from '../../components/cover_letter/templates/CoverLetter'\nimport NonTechnicalCoverLetter from '../../components/cover_letter/templates/NonTechnicalCoverLetter'\nimport StandardCoverLetter from '../../components/cover_letter/templates/StandardJobTemplate'\nimport TriplebyteCoverLetter from '../../components/cover_letter/templates/TriplebyteCoverLetter'\n\nexport const determineCoverLetter = (coverLetter, job, user) => {\n    \n    switch (coverLetter) {\n        case \"non-technical-cover-letter\":\n            return <NonTechnicalCoverLetter job={job} user={user} />\n        case 'cover-letter':\n            return <CoverLetter job={job} user={user}/>\n        case 'Triplebyte (message-version)':\n            return <TriplebyteCoverLetter job={job} user={user}/>\n        case 'Standard Job Template':\n            return <StandardCoverLetter job={job} user={user}/>\n        default:\n            return <NonTechnicalCoverLetter job={job} user={user} />;\n    }\n}","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport { useForm } from 'react-hook-form'\nimport { determineCoverLetter } from './determineCoverLetterFormat'\nimport { Link } from 'react-router-dom'\n\n\n\nconst CoverLetterChoiceContainer = ({job, userId}) => {\n    const accessToken = localStorage.getItem(\"access_token\")\n    const [user, setUser] = useState({})\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [currentCoverLetterChoice, setCurrentCoverLetterChoice] = useState(job.template_choices)\n    const { register, handleSubmit } = useForm({\n        defaultValues: {\n            template_choice: job.template_choices,\n        }\n    })\n\n    const template_choices = {\n        'non-technical-cover-letter': 'Non-technical Cover Letter',\n        'Standard Job Template': 'Standard Job Template',\n        'Triplebyte (message-version)': 'Triplebyte (message-version)',\n        'cover-letter': 'Cover Letter',\n        'cover-letter-4': 'Template 4',\n        'cover-letter-5': 'Template 5',\n    }\n\n    const onSubmit = (data) => {\n        setCurrentCoverLetterChoice(data['template_choice'])\n    }\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`http://127.0.0.1:3000/api/users/${userId}`)\n            .then(res => {\n                setUser(res.data)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(err => {\n                setLoaded({ isLoaded: false })\n            })\n    }, [])\n\n    if (loaded.isLoaded) {\n        return (\n            <div className=\"cover-letter-display-container\">\n                <div>\n                    <Link to=\"/job/form\">Create another cover letter?</Link>\n                </div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <label>\n                        <p>Template Choices: </p>\n                        <select style={{ color: 'Red' }} name=\"template_choice\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                            {Object.keys(template_choices).map((key, idx) => (\n                                <option value={key} key={idx} name={template_choices[key]}> {template_choices[key]} </option>\n                                ))}\n                        </select>\n                    </label>\n                    <input className=\"cover-letter-display-button\" type=\"submit\" value=\"Change Cover Letter\" />\n                </form>\n                <div>\n                    {determineCoverLetter(currentCoverLetterChoice, job, user)}\n                </div>\n            </div>\n    \n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CoverLetterChoiceContainer","import React, { useState, useEffect } from 'react'\nimport JobDetail from '../../components/jobInfo/JobDetail'\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport { useParams } from 'react-router'\nimport { useForm } from 'react-hook-form'\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm'\nimport { confirmAlert, alert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport CoverLetterChoiceContainer from '../cover_letters/CoverLetterDisplayContainer'\n\n\nconst JobDetailView = () => {\n    const [job, setjob] = useState([])\n    const [userId, setUserId] = useState([])\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const { handleSubmit } = useForm()\n    const paramsJobId = useParams().jobID\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`http://127.0.0.1:3000/api/jobs/${paramsJobId}`)\n            .then(res => {\n                setjob(res.data)\n                setUserId(res.data.belongs_to_user)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(error => {\n                // history().push(window.location.href)\n                setLoaded({isLoaded: false})\n                alert(error)\n                window.location.href = ('/login')\n            })\n    }, [])\n\n    const onSubmit = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: 'Are you sure you want to delete ${job.position_title} at ${job.company}?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`http://127.0.0.1:3000/api/jobs/${paramsJobId}/`)\n                            .then(() => window.location.href = 'http://127.0.0.1:3001/all-jobs/')\n                            .catch(error => console.log(error))\n                    }\n                },\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n\n    if (loaded.isLoaded) {\n        return (\n            <div>\n                <div className=\"hide-buttons\">\n                    <button id=\"show-job-update-button\" onClick={() => reveal('update-job-container', 'show-job-update-button')}>Show Update Form</button>\n                    <button id=\"show-cover-letter-button\" onClick={() => reveal('cover-letter-container', \"show-cover-letter-button\")}>Show Cover Letter</button>\n                    <button id=\"hide-job-details-button\" onClick={() => reveal('job-detail', \"hide-job-details-button\")}>Hide Job Details</button>\n                </div>\n                <div className=\"job-container\">\n                    <div className=\"job-and-cover-letter-container\">\n                        <div>\n                            <JobDetail jobDetail={job} />\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"delete-button\">\n                                <button className=\"btn-warning\" type=\"submit\">Delete</button>\n                            </form>\n\n                        </div>\n                        <div className=\"update-job-container\">\n                            <JobForm requestType=\"put\" job={job} buttonTxt=\"Update\" />\n                        </div>\n                    </div>\n                    <div className=\"cover-letter-container\" id=\"cover-letter-choice\">\n                        <CoverLetterChoiceContainer job={job} userId={userId} />\n                    </div>\n                    \n                </div>\n                {/* <div className=\"job-container\">\n                    \n                </div> */}\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobDetailView\n\n\nconst reveal = (divToHide, button) => {\n    const div = document.getElementsByClassName(divToHide)[0]\n    if (divToHide !== \"job-detail\") {\n        div.style.display === '' ? div.style.display = 'block' : div.style.display = ''\n    } else {\n        div.style.display === 'none' ? div.style.display = 'block' : div.style.display = 'none'\n    } \n\n\n    let buttonTxt = document.getElementById(button)\n    if (buttonTxt.innerText.includes(\"Hide\")) {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Hide\", \"Show\")\n    } else {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Show\", \"Hide\")\n    }\n}","import axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport { authCheckState} from './actions/Auth';\n\nconst axiosInstance = axios.create({\n    baseURL: 'http://127.0.0.1:3000/api',\n    timeout: 3000,\n    headers: {\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\n        // 'Authorization': `Bearer ${localStorage.getItem('refresh_token')}`,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    },\n\n});\n\naxios.interceptors.response.use(response => \n    {\n        return response;\n    }, error => {\n        const originalRequest = error.config;\n        if (error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\n            const refresh_token = localStorage.getItem('refresh_token');\n            const access_token = localStorage.getItem('access_token');\n            return axiosInstance\n                .post('http://localhost:3000/api/token/refresh/', { refresh: refresh_token, access_token: access_token })\n                .then(response => {\n                    localStorage.setItem('access_token', response.data.access);\n                    axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    originalRequest.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    return axiosInstance(originalRequest);\n                })\n                .catch(err => {\n                    authCheckState()\n                });\n        }\n        \n        return Promise.reject(error);\n    }, () => {\n        console.log(`checked state in the axiosAPI`)\n        authCheckState()\n    }\n    \n);\n\n\nexport default axiosInstance\n","export const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"","import axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport axiosInstance from '../axiosApi'\nimport * as actionTypes from './ActionTypes'\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, refresh_token) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        access_token: token,\n        refresh_token: refresh_token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user')\n    localStorage.removeItem('access_token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('refresh_token')\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const authLogin = (username, password, setErrorState = null, justSignedUp = false) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://localhost:3000/api/token/', {\n            username: username,\n            password: password\n        }).then(response => {\n            axiosInstance.defaults.headers['Authorization'] = `Bearer ${response.data.access}`;\n            const token = response.data.access;\n            const refresh_token = response.data.refresh;\n            // const expirationDate = new Date(new Date().getTime() + 5000 * 1000);\n            // localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n            dispatch(authSuccess(token, refresh_token));\n            // dispatch(checkAuthTimeout(5000))\n            if (justSignedUp) {\n                window.location.href=\"/signup-user-details/\"\n            } else {\n                window.location.href=\"/all-jobs/\"\n            }\n\n        }).catch(err => {\n            if (setErrorState !== null){\n                setErrorState(\"Failed to log in. Try again or sign up.\")\n            }\n            dispatch(authFail(err))\n            // return err\n            // window.location.reload()\n        })\n    }\n}\n\n\nexport const authSignUp = ({...data}) => {\n    const username = data.username\n    const password1 = data.password\n    const password2 = data.confirm_password\n    const email = data.email\n    console.log({...data})\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:3000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(response => {\n            const token = response.data.key;\n            // const expirationDate = new Date(new Date().getTime() + 5000 * 1000);\n            const accessToken = response.data.access;\n            const refreshToken = response.data.refresh;\n            localStorage.setItem('access_token', accessToken);\n            localStorage.setItem('refresh_token', refreshToken);\n            localStorage.setItem('token', token);\n            dispatch(authLogin(username, password1, null, true))\n            dispatch(authSuccess(accessToken, refreshToken));\n        }).catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('access_token')\n        if (token === undefined) {\n            dispatch(logout())\n        } \n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}","import React, { useCallback, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from \"../../store/actions/Auth\"\nimport { useHistory } from 'react-router-dom';\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm'\nimport NotLoggedInPage from '../../components/NotLoggedInPage';\n\n\nconst CoverLetterView = () => {\n    const paramsJobId = null\n    let history = useHistory()\n    const props = useSelector(state => (\n        {\n            ...state, \n            isAuthenticated: state.token !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    return (\n        <div>\n            <JobForm requestType=\"post\" jobID={paramsJobId} buttonTxt=\"Create Cover Letter\"/>\n        </div>\n    )\n}\n\nexport default CoverLetterView","// import { Form, Input, Button, Checkbox, Spin, Space, Alert } from 'antd';\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab, Divider\n} from 'semantic-ui-react'\n\nimport {Nav} from 'react-bootstrap';\nimport React, { useEffect, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as actions from '../../store/actions/Auth'\nimport { useHistory }  from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\n\n\n\nconst Login = () => {\n    const history = useHistory()\n    const [loading, setLoading] = useState(false)\n    const props = useSelector(state => (\n        { ...state, \n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const {register, handleSubmit} = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        (username, password) => dispatch(actions.authLogin(username, password, setErrorMessage))\n    )\n\n    const [errorMessage, setErrorMessage] = useState(null)\n    \n    const onFinish = (values) => {\n        setLoading(true)\n        try {\n            onAuth(values.username, values.password)\n        } catch {\n            setErrorMessage(\"Please try again or signup.\")\n        }\n        setLoading(false)\n    };\n\n    \n    return (\n        <div className=\"login-form\">\n            <Segment placeholder inverted>\n                <Grid columns={2} relaxed='very' stackable>\n                    <Grid.Column>\n                        <Form onSubmit={handleSubmit(onFinish)} loading={props.loading} error={errorMessage !== null} inverted>\n                            {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                            <Form.Field required>\n                                <label>Username</label>\n                                <input\n                                    icon='user'\n                                    label='Username'\n                                    name={'username'}\n                                    placeholder='Username'\n                                    autoComplete=\"username\"\n                                    ref={register()}\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Password</label>\n                                <input\n                                    icon='lock'\n                                    label='Password'\n                                    name={'password'}\n                                    autoComplete=\"current-password\"\n                                    type='password'\n                                    ref={register()}\n                                />\n\n                            </Form.Field>\n\n                            <Button primary type=\"submit\" loading={loading} disabled={loading}>Login</Button>\n                        </Form>\n                    </Grid.Column>\n\n                    <Grid.Column verticalAlign='middle'>\n                        <Button content='Sign up' icon='signup' size='big' onClick={() => history.push(\"/signup\")} inverted/>\n                    </Grid.Column>\n                </Grid>\n                <Divider vertical inverted>Or</Divider>\n            </Segment>\n        </div>\n    );\n};\n\n\nexport default Login","import React, {useCallback, useState } from 'react'\nimport * as actions from '../../../store/actions/Auth'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    Form, Message,Button, \n    Grid, Segment, Table,  Divider\n} from 'semantic-ui-react'\n\n// import {\n//     Form,\n//     Input,\n//     Select,\n//     Button,\n// } from 'antd';\nimport { Nav } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\n\nconst RegistrationForm = () => {\n    const history = useHistory()\n    const [loading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const props = useSelector(state => (\n        {\n            ...state,\n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const { register, handleSubmit } = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        ({...values}) => dispatch(actions.authSignUp(values))\n    )\n\n    const onSubmit = (values) => {\n        const data = {...values}\n        const passwordCheck = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n       if (data.password === data.confirm_password) {\n            if (data.password.length > 5) {\n                if (data.password.match(passwordCheck)){\n                    onAuth({...values})\n                    \n                } else {\n                    setErrorMessage(\"Password needs to contain at least one numeric digit, one uppercase and one lowercase letter\")\n                }\n            } else {\n                setErrorMessage(\"Password needs to be greater than 5 characters\")\n            }\n       } else {\n           setErrorMessage(\"Passwords don't match!\")\n       }\n        // history.push('/')\n    };\n\n\n    return (\n        <div className=\"login-form\">\n\n            <Segment placeholder>\n                <Grid stackable >\n                    <Grid.Column stackable>\n                        <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                            <Table striped inverted textAlign=\"center\">\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Username: </Table.Cell>\n                                        <Table.Cell>\n                                            <Form.Field>\n                                                {/* <label>Confirm Email</label> */}\n                                                <input\n                                                    required\n                                                    placeholder={`Username:`}\n                                                    defaultValue={\"\"}\n                                                    type=\"text\"\n                                                    name={\"username\"}\n                                                    ref={register()}\n                                                    minLength={4}\n                                                    maxLength={20}\n                                                />\n                                            </Form.Field>\n                                        </Table.Cell>\n                                        <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Email: </Table.Cell>\n                                        <Table.Cell>\n                                            <Form.Field>\n                                                {/* <label>Confirm Email</label> */}\n                                                <input\n                                                    required\n                                                    placeholder={`Email:`}\n                                                    defaultValue={\"\"}\n                                                    type=\"email\"\n                                                    name={\"email\"}\n                                                    ref={register()}\n                                                />\n                                            </Form.Field>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Password: </Table.Cell>\n                                        <Table.Cell>\n                                            <Form.Field>\n                                                {/* <label>Confirm Email</label> */}\n                                                <input\n                                                    required\n                                                    placeholder={`Password:`}\n                                                    defaultValue={\"\"}\n                                                    type=\"password\"\n                                                    name={\"password\"}\n                                                    minLength={6}\n                                                    maxLength={20}\n                                                    ref={register()}\n                                                />\n                                            </Form.Field>\n                                        </Table.Cell>\n                                        <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Confirm Password: </Table.Cell>\n                                        <Table.Cell>\n                                            <Form.Field>\n                                                {/* <label>Confirm Email</label> */}\n                                                <input\n                                                    required\n                                                    placeholder={`Confirm Password:`}\n                                                    defaultValue={\"\"}\n                                                    type=\"password\"\n                                                    minLength={6}\n                                                    maxLength={20}\n                                                    name={\"confirm_password\"}\n                                                    ref={register()}\n                                                />\n                                            </Form.Field>\n                                        </Table.Cell>\n                                    </Table.Row>\n                                </Table.Body>\n                                <Table.Footer>\n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                            {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                            <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Footer>\n                            </Table>\n                        </Form>\n                    </Grid.Column>\n                </Grid>\n                <Divider horizontal>Or</Divider>\n                <Grid.Column verticalAlign='middle'>\n                    <Button content='Login' icon='signup' size='big' onClick={() => history.push(\"/login\")} />\n                </Grid.Column>\n            </Segment>\n        </div>\n    );\n};\n\nexport default RegistrationForm","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport {logout} from '../../store/actions/Auth'\nimport {Grid, Container, Segment, Header, Menu} from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport axiosInstance from '../../store/axiosApi'\n\nconst Shell = props => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const userId = jwtDecode(localStorage.getItem('access_token')).user_id\n    const [user, setUser] = useState({})\n    const [loaded, isLoaded] = useState(false)\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n        axios.get(`http://localhost:3000/api/users/${userId}`)\n        .then(resp => {\n            setUser(resp.data)\n            // history.push({user: resp.data})\n        })\n        .then(() => {\n            isLoaded(true)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }, [localStorage.getItem('access_token')])\n\n        return (    \n            <Segment vertical>\n                <Container>\n                    <Grid container stackable verticalAlign='top' divided columns={2}>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                <Header as=\"h3\">Account</Header>\n                                <Menu vertical fluid>\n                                    <Menu.Item \n                                        onClick={() => history.push(\"/admin/change-email/\", {user: user})} \n                                        active={history.location.pathname === \"/admin/change-email/\"}\n                                        name=\"change-email\">\n                                        Change Email\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/admin/change-password/\", { user: user })}\n                                        active={history.location.pathname === \"/admin/change-password/\"}\n                                        name=\"change-password\">\n                                        Change Password\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/admin/change-account-info/\", { user: user })}\n                                        active={history.location.pathname === \"/admin/change-account-info/\"}\n                                        name=\"change-account-info\">\n                                        Change Account Info\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => dispatch(logout())}\n                                        name=\"logout\">\n                                        Logout\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Column>\n                            <Grid.Column width={12}>\n                                {props.children}\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n}\n\nexport default Shell\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\n\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport Shell from '../../containers/Account/Shell';\n\n\n\nconst ChangeEmail = (props) => {\n    const [user, setUser] = useState(\"\")\n    const [newEmail] = useState(\"\")\n    const [confirmEmail] = useState(\"\")\n    const [error, setError] = useState({})\n    const {register, handleSubmit} = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    \n    useEffect(() => {\n        setUser(props.location.state.user)\n    }, [])\n\n\n    const onSubmit = data => {\n        const email = data.newEmail\n        const confirmEmail = data.confirmEmail\n        if (data.newEmail !== '' || data.confirmEmail !== '') {\n            if (email === confirmEmail) {\n                if (email !== user.email) {\n                    setLoading(true)\n                    data = {email: email}\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    axios.patch(`http://localhost:3000/api/users/${user.id}/`, data)\n                    .then(resp => {\n                        setUser(resp.data)\n                    })\n                    .catch(err => {\n                        setError(err.Message)\n                    })\n                    setLoading(false)\n                } else {\n                    setError(`Your email is already ${email}`)\n                }\n            } else {\n                setError(\"Emails don't match!\")\n            }\n        } else {\n            setError(\"Fields are empty!\")\n\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Email</Table.HeaderCell>\n                            <Table.HeaderCell>New Email</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {/* <Header as=\"h2\">Change Email</Header> */}\n                        {/* <br /> */}\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Email: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <Input\n                                            // placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.email}\n                                            type=\"text\"\n                                            name={\"currentEmail\"}\n                                            ref={register({ name: \"currentEmail\" })}\n                                            disabled\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                    <Form.Field>Change Email</Form.Field>\n                                </Table.Cell>\n                                <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Email</label>\n                                    <input\n                                        placeholder=\"New Email\"\n                                        defaultValue={newEmail}\n                                        type=\"email\"\n                                        name={\"newEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Email</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Email\"\n                                        defaultValue={confirmEmail}\n                                        dependencies={[\"newEmail\"]}\n                                        type=\"email\"\n                                        name={\"confirmEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n \n\nexport default ChangeEmail","const { Header } = require(\"semantic-ui-react\")\n\nconst HomePage = () => {\n    return (\n        <div className=\"homepage-outer-container\">\n            <Header>\n                Welcome to the homepage\n            </Header>\n            <div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport { logout } from '../../store/actions/Auth'\nimport { Grid, Container, Segment, Header, Menu } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\n\n\nconst AccountDashboard = () => {\n    const [user, setUser] = useState({})\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(false)\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`http://localhost:3000/api/users/${userId}`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    if (loaded) {\n        return (\n            <div class=\"outer-semantic\">\n                <Segment placeholder className=\"outer-semantic\">\n                    <Container text textAlign=\"center\">\n                        <Grid container divided textAlign=\"center\" >\n                            {/* <Grid.Row> */}\n                                {/* <Grid.Column width={8}> */}\n                                    <Header as=\"h3\">Account</Header>\n                                    <Menu vertical fluid>\n                                        <Menu.Item\n                                            onClick={() => history.push(\"/admin/change-email/\", { user: user, previousLocation: \"/admin/change-email/\"})}\n                                            active={history.location.pathname === \"/admin/change-email/\"}\n                                            name=\"change-email\">\n                                            Change Email\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/admin/change-password/\", { user: user })}\n                                            active={history.location.pathname === \"/admin/change-password/\"}\n                                            name=\"change-password\">\n                                            Change Password\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/admin/change-account-info/\", { user: user })}\n                                            active={history.location.pathname === \"/admin/change-account-info/\"}\n                                            name=\"change-account-info\">\n                                            Change Account Info\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => dispatch(logout())}\n                                            name=\"logout\">\n                                            Logout\n                                        </Menu.Item>\n                                    </Menu>\n                                {/* </Grid.Column> */}\n                            {/* </Grid.Row> */}\n                        </Grid>\n                    </Container>\n                </Segment>\n            </div>\n        )\n    } else {\n        return(\n            <Segment vertical>\n                <Container>\n                    <Grid container stackable verticalAlign='top' divided columns={2}>\n                        <Grid.Column width={4}>\n                            Loading\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n    }\n}\n\nexport default AccountDashboard","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\n\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport jwtDecode from 'jwt-decode';\nimport Shell from '../../containers/Account/Shell';\n\n\n\n\nconst ChangePassword = (props) => {\n    const [newPassword, setNewPassword] = useState(\"\")\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [error, setError] = useState({})\n    const [successMessage, setSuccessMessage] = useState(null)\n    const { register, handleSubmit } = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n\n    const onSubmit = data => {\n        const oldPassword = data.oldPassword\n        const new_password = data.new_password1\n        const newPassword2 = data.new_password2\n        if (new_password !== '' || newPassword2 !== '' || oldPassword) {\n            if (new_password === newPassword2) {\n                    setLoading(true)\n                    const backendData = { old_password: oldPassword, new_password: new_password }\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    axios.patch(`http://localhost:3000/api/change-password/`, backendData)\n                        .then(resp => {\n                            setSuccessMessage(\"You have successfully changed the password!\")\n                            setError({})\n                        })\n                        .catch(err => {\n                            setError(\"Woops seems like something went wrong. Did you enter the correct current password?\")\n                            setSuccessMessage(null)\n                        })\n                    setLoading(false)\n            } else {\n                setError(\"Passwords don't match!\")\n                setSuccessMessage(null)\n            }\n        } else {\n            setError(\"Fields are empty!\")\n            setSuccessMessage(null)\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null} success={successMessage !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Password</Table.HeaderCell>\n                            <Table.HeaderCell>New Password</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Password: </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field>\n                                    <label>Current Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Current Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"oldPassword\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                <Form.Field>New Password</Form.Field>\n                            </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"New Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"new_password1\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Password\"\n                                        defaultValue={confirmPassword}\n                                        dependencies={[\"newPassword\"]}\n                                        type=\"password\"\n                                        name={\"new_password2\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                {successMessage && (<Message success heading=\"Success\" content={successMessage} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n\n\nexport default ChangePassword","import React, { useEffect, useState } from 'react'\nimport { Form, Message, \n        Header, Button, Grid, \n        Container, Segment, Menu, \n        Table, Icon, Label } from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\n\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport Shell from '../../containers/Account/Shell';\nimport { useHistory } from 'react-router-dom';\n\n\n\nconst ChangeAccountInfo = (props) => {\n    const [user, setUser] = useState({})\n    const history = useHistory()\n    const [error, setError] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n\n    useEffect(() => {\n        setUser(props.location.state.user)\n    }, [])\n\n\n    const onSubmit = data => {\n        setLoading(true)\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`http://localhost:3000/api/users/${user.id}/`, data)\n            .then(resp => {\n                setUser(resp.data)\n                history.go()\n            })\n            .catch(err => {\n                setError(err.Message)\n            })\n        setLoading(false)\n    }\n    if (user) {\n        return (\n            <Shell>\n                <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                    <Table striped inverted textAlign=\"center\">\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Current Account Info</Table.HeaderCell>\n                                <Table.HeaderCell>New Info</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n    \n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">First Name: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.first_name}\n                                            type=\"text\"\n                                            name={\"first_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                \n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Middle Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"middle_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update middle Name: ${user.middle_name}`}\n                                            defaultValue={user.middle_name}\n                                            type=\"text\"\n                                            name={\"middle_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Last Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"last_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Last Name: ${user.last_name}`}\n                                            defaultValue={user.last_name}\n                                            type=\"text\"\n                                            name={\"last_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"preferred_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Preferred Name: ${user.preferred_name}`}\n                                            defaultValue={user.preferred_name}\n                                            type=\"text\"\n                                            name={\"preferred_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Phone Number: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"phone_number\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Phone Number: ${user.phone_number}`}\n                                            defaultValue={user.phone_number}\n                                            type=\"text\"\n                                            name={\"phone_number\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">LinkedIn: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field name=\"LinkedIn\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update LinkedIn: ${user.linkedin}`}\n                                            defaultValue={user.linkedin}\n                                            type=\"text\"\n                                            name={\"linkedin\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Github: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"github\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Github: ${user.github}`}\n                                            defaultValue={user.github}\n                                            type=\"text\"\n                                            name={\"github\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Portfolio Website: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"portfolioWebsite\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Portfolio Website: ${user.portfolio_website}`}\n                                            defaultValue={user.portfolio_website}\n                                            type=\"text\"\n                                            name={\"portfolio_website\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Street Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Street Address: ${user.street_address}`}\n                                            defaultValue={user.street_address}\n                                            type=\"text\"\n                                            name={\"street_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">City Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update City Address: ${user.city_address}`}\n                                            defaultValue={user.city_address}\n                                            type=\"text\"\n                                            name={\"city_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">State Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update State Address: ${user.state_address}`}\n                                            defaultValue={user.state_address}\n                                            type=\"text\"\n                                            name={\"state_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Zip Code: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Zip Code: ${user.zip_code}`}\n                                            defaultValue={user.zip_code}\n                                            type=\"text\"\n                                            name={\"zip_code\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n    \n                        <Table.Footer>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan='2'textAlign=\"center\">\n                                    {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                    <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                </Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Form>\n            </Shell>\n        )\n    } else {\n        history.push('/admin/')\n    }\n\n}\n\n\nexport default ChangeAccountInfo","import React, { useState } from 'react'\nimport {\n    Form, Message,\n    Button, Grid,\n    Segment, Table, \n} from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios'
axios.defaults.proxy.host = "http://localhost:3000/"\nimport jwtDecode from 'jwt-decode';\n\nconst AccountDetailsForm = () => {\n    const history = useHistory()\n    const [errorMessage, setErrorMessage] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    // const dispatch = useDispatch()\n\n    const onSubmit = data => {\n        setLoading(true)\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`http://localhost:3000/api/users/${userId}/`, data)\n            .then(() => {\n                history.push(\"/all-jobs/\")\n            })\n            .catch(err => {\n                setErrorMessage(err.Message)\n            })\n        setLoading(false)\n    }\n\n\n    return (\n        <div className=\"login-form\">\n            <Segment placeholder>\n                <Grid stackable >\n                    <Grid.Column stackable>\n                        <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                            <Table striped inverted textAlign=\"center\">\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>Account Info</Table.HeaderCell>\n                                        <Table.HeaderCell> </Table.HeaderCell>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`First Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"first_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Middle Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"middle_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`Last Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"last_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Preferred Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"preferred_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Cover Letter Information </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field name=\"phone_number\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Phone Number:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"phone_number\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"LinkedIn\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`LinkedIn:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"linkedin\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"github\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Github:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"github\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"portfolioWebsite\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Portfolio Website:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"portfolio_website\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Address: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Street Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"street_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`City Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"city_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`State Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"state_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Zip Code:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"zip_code\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Footer>\n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                            {errorMessage.length && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                            <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Footer>\n                            </Table>\n                        </Form>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </div>\n\n    );\n};\n\nexport default AccountDetailsForm","import React from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\n\nimport JobListView from './containers/job_container/JobListView'\nimport JobDetailView from './containers/job_container/JobDetailView'\nimport CoverLetterView from './containers/forms/CoverLetterView'\nimport Login from './containers/forms/Login'\nimport Signup from './containers/forms/signUpForms.js/SignupInitial'\nimport ChangeEmail from './components/Account/ChangeEmail'\nimport HomePage from './components/homepage/homepage'\nimport AccountDashboard from './containers/Account/accountDashboard'\nimport ChangePassword from './components/Account/ChangePassword'\nimport ChangeAccountInfo from './components/Account/ChangeAccountInfo'\nimport AccountDetailsForm from './containers/forms/signUpForms.js/SignUpDetails'\n\n\nconst PrivateRoute = ({components: Component, ...rest}) => {\n    const authenticated = localStorage.getItem(\"access_token\") !== null\n    return (\n        authenticated === true ? \n        <Route {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/login\"/>\n    )\n    \n}\nconst NeedUserCredentials = ({components: Component, ...rest}) => {\n    const state = useHistory().location.state\n    return (\n        state !== undefined ? \n        <PrivateRoute {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/admin/\"/>\n    )\n}\n\n\nconst BaseRouter = (props) => (\n    <div>\n        <Switch>\n            <PrivateRoute exact path='/job/form' component={CoverLetterView}/>\n            <PrivateRoute exact path='/job/:jobID' component={JobDetailView}/>\n            <PrivateRoute exact path='/all-jobs/' component={JobListView}/>\n            <PrivateRoute exact path='/signup-user-details/' component={AccountDetailsForm}/>\n            <NeedUserCredentials exact path='/admin/change-email/' component={ChangeEmail} {...props}/>\n            <NeedUserCredentials exact path='/admin/change-password/' component={ChangePassword} {...props}/>\n            <NeedUserCredentials exact path='/admin/change-account-info/' component={ChangeAccountInfo} {...props}/> */}\n            <PrivateRoute exact path='/admin/' component={AccountDashboard} />\n            <Route exact path='/signup' component={Signup}/>\n            <Route exact path='/login' component={Login}/>\n            <Route path='/' component={HomePage}/>\n            <Route path='' component={HomePage}/>\n        </Switch>\n    </div>\n)\n\n\n\nexport default BaseRouter","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    // componentDidCatch(error, errorInfo) {\n    //     // You can also log the error to an error reporting service\n    //     logErrorToMyService(error, errorInfo);\n    // }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","import { \n  Navbar, \n  Nav, \n  NavDropdown, \n  Form, \n  FormControl, \n  Button } from 'react-bootstrap';\nimport React, { useCallback, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../../../store/actions/Auth'\nimport ErrorBoundary from '../../../store/ErrorBoundary';\n\n\nconst Header = () => {\n  let history = useHistory()\n  const props = useSelector(state => (\n    {\n      ...state, \n      isAuthenticated: localStorage.getItem('access_token') !== null,\n      loading: state.loading,\n      error: state.error\n    }))\n  \n  const dispatch = useDispatch()\n\n  const logout = () => {\n    try {\n      dispatch(actions.logout())\n      history.push('/login')\n    } catch (e) {\n      alert('unable to logout')\n    }\n  }\n\n\n  return  (\n    <div>\n      {props.isAuthenticated ? loggedInNav(props, logout) : loggedOutNav(props, logout)}\n    </div>\n  )\n}\n\n\n\nexport default Header\n\nconst loggedInNav = (props, logout) => (\n  <Navbar bg=\"light\" expand=\"lg\" className=\"text-center\">\n    <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\n        <Nav.Link href=\"/all-jobs/\">All Jobs</Nav.Link>\n        <Nav.Link href=\"/job/form\">Cover Letter Form</Nav.Link>\n        {/* <Nav.Link onClick={() => logout()}>Logout</Nav.Link> */}\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"/admin/\">Account</NavDropdown.Item>\n          <NavDropdown.Divider />\n          <ErrorBoundary>\n            {\n              props.isAuthenticated ?\n                <NavDropdown.Item onClick={() => logout()}>Logout</NavDropdown.Item>\n                :\n                <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\n            }\n          </ErrorBoundary>\n        </NavDropdown>\n      </Nav>\n      {/* <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form> */}\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nconst loggedOutNav = (props, logout) => (\n  < Navbar bg=\"light\" expand=\"lg\" className=\"text-center\" >\n    <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/login/\">Login</Nav.Link>\n        <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar >\n)\n\n\n  ","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\n\nconst FooterPage = () => {\n    return (\n        <MDBFooter color=\"unique-color-dark\" className=\"page-footer font-small pt-0\">\n            <div style={{ backgroundColor: \"#6351ce\" }}>\n                <MDBContainer fluid className=\"text-center text-md-left\">\n                    <MDBRow className=\"py-4 d-flex align-items-center\">\n                        <MDBCol md=\"6\" lg=\"5\" className=\"text-center text-md-left mb-4 mb-md-0\">\n                            <h6 className=\"mb-0 white-text\">\n                                Get connected with us on social networks!\n                            </h6>\n                        </MDBCol>\n                        <MDBCol md=\"6\" lg=\"7\" className=\"text-center text-md-right\">\n                            <a className=\"fb-ic ml-0\">\n                                <i className=\"fab fa-facebook-f white-text mr-lg-4\"> </i>\n                            </a>\n                            <a className=\"tw-ic\">\n                                <i className=\"fab fa-twitter white-text mr-lg-4\"> </i>\n                            </a>\n                            <a className=\"gplus-ic\">\n                                <i className=\"fab fa-google-plus-g white-text mr-lg-4\"> </i>\n                            </a>\n                            <a className=\"li-ic\">\n                                <i className=\"fab fa-linkedin-in white-text mr-lg-4\"> </i>\n                            </a>\n                            <a className=\"ins-ic\">\n                                <i className=\"fab fa-instagram white-text mr-lg-4\"> </i>\n                            </a>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n            <MDBContainer className=\"mt-5 mb-4 text-center text-md-left\">\n                <MDBRow className=\"mt-3\">\n                    <MDBCol md=\"3\" lg=\"4\" xl=\"3\" className=\"mb-4\">\n                        <h6 className=\"text-uppercase font-weight-bold\">\n                            <strong>Unique Cover Letter Generator</strong>\n                        </h6>\n                        <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\n                        <p>\n                            {/* Here you can use rows and columns here to organize your footer\n                            content. Lorem ipsum dolor sit amet, consectetur adipisicing\n                            elit. */}\n                        </p>\n                    </MDBCol>\n                    <MDBCol md=\"2\" lg=\"2\" xl=\"2\" className=\"mb-4\">\n                        <h6 className=\"text-uppercase font-weight-bold\">\n                            <strong>Products</strong>\n                        </h6>\n                        <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\n                        <p>\n                            <a href=\"#!\">About Me</a>\n                        </p>\n                        {/* <p>\n                            <a href=\"#!\">MDWordPress</a>\n                        </p>\n                        <p>\n                            <a href=\"#!\">BrandFlow</a>\n                        </p>\n                        <p>\n                            <a href=\"#!\">Bootstrap Angular</a>\n                        </p> */}\n                    </MDBCol>\n                    <MDBCol md=\"3\" lg=\"2\" xl=\"2\" className=\"mb-4\">\n                        <h6 className=\"text-uppercase font-weight-bold\">\n                            <strong>Useful links</strong>\n                        </h6>\n                        <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\n                        <p>\n                            <a href=\"#!\">Your Account</a>\n                        </p>\n                        <p>\n                            <a href=\"#!\">Become an Affiliate</a>\n                        </p>\n                        <p>\n                            <a href=\"#!\">Shipping Rates</a>\n                        </p>\n                        <p>\n                            <a href=\"#!\">Help</a>\n                        </p>\n                    </MDBCol>\n                    <MDBCol md=\"4\" lg=\"3\" xl=\"3\" className=\"mb-4\">\n                        <h6 className=\"text-uppercase font-weight-bold\">\n                            <strong>Personal Portfolio</strong>\n                        </h6>\n                        <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{ width: \"60px\" }} />\n                        <p>\n                            <i className=\"fa fa-home mr-3\" /> New York, NY 10012, US\n                        </p>\n                        <p>\n                            <i className=\"fa fa-envelope mr-3\" /> info@example.com\n                        </p>\n                        <p>\n                            <i className=\"fa fa-phone mr-3\" /> + 01 234 567 88\n                        </p>\n                        <p>\n                            <i className=\"fa fa-print mr-3\" /> + 01 234 567 89\n                        </p>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n            {/* <div className=\"footer-copyright text-center py-3\">\n                <MDBContainer fluid>\n                    &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.MDBootstrap.com\"> MDBootstrap.com </a>\n                </MDBContainer>\n            </div> */}\n        </MDBFooter>\n    );\n}\n\nexport default FooterPage;","import BaseRouter from './routes'\nimport { BrowserRouter as Router}  from 'react-router-dom'\nimport {connect, useDispatch, useSelector} from 'react-redux'\nimport './css/App.css';\nimport Header from './containers/Banners/Header/NavBar';\nimport FooterPage from './containers/Banners/Footer/FooterBar';\nimport * as actions from './store/actions/Auth'\nimport { Component, useCallback, useEffect } from 'react';\n\n\n\nfunction App() {\n  const props = useSelector(state => ({ ...state, isAuthenticated: localStorage.getItem('access_token') !== null}))\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <Header {...props}/>\n          <BaseRouter/> \n          <FooterPage/>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/ActionTypes'\nimport { updateObject } from '../utility'\n\nconst initialState = {\n    token: null,\n    access_token: null,\n    refresh_token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        access_token: action.access_token,\n        refresh_token: action.refresh_token,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n    })\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: \n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: \n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: \n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: \n            return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducers/auth'\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux'\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}