{"version":3,"sources":["components/jobInfo/AllJobs.js","components/pagination/Pagination.js","components/cover_letter/CoverLetterForm.js","store/axiosApi.js","store/actions/ActionTypes.js","store/actions/Auth.js","containers/job_container/JobListView.js","components/jobInfo/formattedData.js","components/jobInfo/JobDetail.js","components/cover_letter/templates/NonTechnicalCoverLetter.js","components/cover_letter/templates/StandardJobTemplate.js","containers/cover_letters/determineCoverLetterFormat.js","containers/cover_letters/CoverLetterDisplayContainer.js","containers/job_container/JobDetailView.js","containers/forms/CoverLetterView.js","containers/forms/Login.js","containers/Account/Shell.js","components/Account/ChangeEmail.js","components/homepage/homepage.js","containers/Account/accountDashboard.js","components/Account/ChangePassword.js","components/Account/ChangeAccountInfo.js","containers/forms/signUpForms/SignUpDetails.js","containers/forms/signUpForms/SignupInitial.js","routes.js","store/ErrorBoundary.js","containers/Banners/Header/NavBar.js","containers/Banners/Footer/FooterBar.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Jobs","props","allJobs","Object","values","jobs","ListGroup","map","job","href","id","Item","style","minHeight","position_title","company","Pagination","pageIndex","total","perPage","onNext","onPrevious","setAllJobs","setNext","setOnPrevious","setPageIndex","lastPage","Math","ceil","previous","onClick","previousPage","next","nextPage","home","goHome","axios","get","then","res","data","results","className","JobForm","history","useHistory","useState","localStorage","getItem","accessToken","requestType","userId","jwt_decode","user_id","jobID","job_stage","template_choices","buttonTxt","useForm","register","errors","handleSubmit","onSubmit","defaults","headers","Authorization","post","push","catch","console","log","put","window","location","reload","job_stages","Container","Segment","inverted","color","name","ref","keys","key","idx","value","defaultValue","placeholder","job_posting_website","required","city","link","display","margin","recruiter","description","pre_bullet_point_paragraph_one","pre_bullet_point_paragraph_two","top_skills","bullet_point_one","bullet_point_two","bullet_point_three","bullet_point_four","bullet_point_five","bullet_point_six","bullet_point_seven","bullet_point_eight","post_bullet_point_paragraph_one","post_bullet_point_paragraph_two","type","axiosInstance","create","baseURL","timeout","interceptors","response","use","error","originalRequest","config","undefined","status","statusText","refresh_token","access_token","refresh","setItem","access","err","authCheckState","Promise","reject","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","authStart","actionTypes","authSuccess","token","authFail","logout","removeItem","authLogin","username","password","setErrorState","justSignedUp","dispatch","document","getElementsByClassName","expirationTime","expirationDate","Date","getTime","setTimeout","JobList","jobProps","setJobProps","isLoaded","loaded","setLoaded","count","setCount","useSelector","state","isAuthenticated","loading","useEffect","actions","length","as","content","fontSize","formattedJobData","jobDetail","jobDetailKeys","to","NonTechnicalCoverLetter","user","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","email","linkedin","github","portfolio_website","phone_number","preferred_name","last_name","first_name","StandardCoverLetter","determineCoverLetter","coverLetter","CoverLetterChoiceContainer","setUser","currentCoverLetterChoice","setCurrentCoverLetterChoice","defaultValues","template_choice","JobDetailView","setjob","setUserId","paramsJobId","useParams","belongs_to_user","alert","reveal","JobDetail","confirmAlert","title","message","buttons","label","delete","divToHide","button","div","getElementById","innerText","includes","replace","CoverLetterView","Login","setLoading","useDispatch","onAuth","useCallback","setErrorMessage","errorMessage","size","minWidth","Grid","columns","relaxed","stackable","Column","Form","Message","heading","Field","icon","autoComplete","Button","primary","disabled","verticalAlign","Divider","vertical","Shell","jwtDecode","resp","container","divided","Row","width","Menu","fluid","active","pathname","children","ChangeEmail","newEmail","confirmEmail","setError","patch","Table","striped","textAlign","Header","HeaderCell","Body","Cell","Input","dependencies","Footer","colSpan","HomepageHeading","mobile","text","fontWeight","marginBottom","marginTop","Icon","DesktopContainer","hideFixedMenu","setState","fixed","showFixedMenu","this","Visibility","once","onBottomPassed","onBottomPassedReverse","padding","Component","ResponsiveContainer","Homepage","floated","celled","paddingBottom","paddingTop","horizontal","textTransform","AccountDashboard","class","previousLocation","is_superuser","ChangePassword","newPassword","confirmPassword","successMessage","setSuccessMessage","oldPassword","new_password","new_password1","newPassword2","new_password2","backendData","old_password","success","ChangeAccountInfo","middle_name","street_address","city_address","state_address","zip_code","go","negative","AccountDetailsForm","setRequiredFields","RegistrationForm","password1","password2","confirm_password","match","minLength","maxLength","PrivateRoute","components","rest","render","NeedUserCredentials","BaseRouter","exact","path","component","JobListView","HomePage","ErrorBoundary","hasError","React","e","rg4js","identifier","isAnonymous","firstName","fullName","LoggedInNav","loggedOutNav","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","FooterPage","List","target","createBrowserHistory","App","listen","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM"],"mappings":"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","file":"static/js/main.491a327d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { ListGroup } from 'react-bootstrap'\n\n\nconst Jobs = props => {\n    const allJobs = Object.values(props.jobs)\n    \n    return (\n        <ListGroup>\n           {allJobs.map(job => (\n               <a href={`/job/${job.id}`} key={job.id}>\n                   <ListGroup.Item style={{minHeight: \"fit-content\"}}>\n                       {job.position_title} - {job.company}\n                   </ListGroup.Item>\n               </a>  \n           ))}\n        </ListGroup>\n    );\n};\n\n\nexport default Jobs;","import axios from 'axios'\n;\nimport React, { useEffect } from 'react';\n\n\nexport default function Pagination(props) {\n    const { pageIndex, total, perPage, onNext, onPrevious, setAllJobs, setNext, setOnPrevious, setPageIndex } = props;\n    const lastPage = Math.ceil(total / perPage);\n    const previous = pageIndex > 1 ? (<button onClick={() => previousPage()}>Previous</button>) : null;\n    const next = pageIndex < lastPage ? (<button onClick={() => nextPage()}>Next</button>) : null;\n    const home = pageIndex > 1 ? (<button onClick={() => goHome()}>Home</button>) : null;\n\n    const nextPage = () => {\n        axios.get(onNext)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex+1)\n            })\n    }\n\n    const previousPage = () => {\n        axios.get(onPrevious)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex - 1)\n            })\n    }\n\n    const goHome = () => {\n        axios.get(`api/jobs/`)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(1)\n            })\n    }\n\n    return (\n        <div className=\"Pagination\">\n            <div className=\"Pagination-actions\">\n                {previous}\n                {home}\n                {next}\n            </div>\n            <div className=\"Pagination-stats\">\n                Page {pageIndex} of {lastPage}\n                &nbsp;(displaying {perPage} items per page)\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from 'axios'\n;\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Segment } from \"semantic-ui-react\";\n\n\nexport const JobForm = (props) => {\n    const history = useHistory()\n    const [accessToken, setAccessToken] = useState(localStorage.getItem('access_token'))\n    let job = null\n    const requestType = props.requestType\n    const userId = jwt_decode(accessToken).user_id\n    let jobID = null\n    let jobStage = \"Initial\"\n    let templateChoices = \"non-technical-cover-letter\"\n    if (props.job) {\n        job = props.job\n        jobID = job.id\n        jobStage = job.job_stage\n        templateChoices = job.template_choices\n    }\n    const buttonTxt = props.buttonTxt\n    const { register, errors, handleSubmit} = useForm({\n        // defaultValues: {\n        //     job_posting_website: \"LinkedIn\",\n        //     top_skills: \"Dynamic and accomplished Software Engineer with experience and expertise in \",\n        //     bullet_point_one: \"Over the last five years, I have worked in multiple team-based, customer-oriented, professional roles.\",\n        //     bullet_point_two: \"For sixteen years on competitive soccer teams, I practiced the art of communicating in a fast moving environment, including four years of college D3 soccer. \",\n        //     bullet_point_three: \"My passion for competitive soccer has taught me to learn from my mistakes using constructive feedback to improve future action.\",\n        //     bullet_point_four: \"I continually strive for opportunities to improve my skills and have the opportunity to problem-solve.\",\n        //     bullet_point_five: \"A passion for reading books on communication, relationship building, and leadership allow me to learn continually.\",\n        //     job_stage: jobStage,\n        //     template_choices: templateChoices,\n        // }\n    })\n\n    const onSubmit = (data) => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        switch (requestType) {\n            case 'post':\n                axios.post('/api/jobs/', data)\n                    .then(res => history.push(`/job/${res.data.id}`, {...res.data.id}))\n                    .catch(errors => console.log(errors))\n                break\n            case 'put':\n                axios.put(`/api/jobs/${jobID}`, {...data,jobID})\n                    .then(() => window.location.reload())\n                    .catch(errors => console.log(errors))\n                break\n            default:\n                history.push('/login/')\n                break\n        }\n\n    };\n\n    const template_choices = {\n        'non-technical-cover-letter': 'Non-technical Cover Letter',\n        'Standard Job Template': 'Standard Job Template',\n        'Triplebyte (message-version)': 'Triplebyte (message-version)',\n        'cover-letter-4': 'Template 4',\n        'cover-letter-5': 'Template 5',\n    }\n        \n    const job_stages = {\n        'Initial': 'Initial',\n        'Active': 'Active',\n        'Accepted': 'Accepted',\n        'Rejected': 'Rejected',\n        'No Response': 'No Response',\n    }\n\n    if (job) {\n        return (\n            <Container>\n                <Segment inverted>\n\n                    <div className=\"update-job-form\">\n                        <h1 className=\"form-title\">Update Job Info</h1>\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <label className=\"list-form-field\">\n                                <p>Template Choices: </p>\n                                <select style={{ color: 'Red' }} name=\"template_choices\" ref={register} className=\"list-form-field-with-margin\">\n                                    {Object.keys(template_choices).map((key, idx)=> (\n                                        <option value={key} key={idx } name={template_choices[key]}> {template_choices[key]} </option>\n                                    ))}\n                                </select>\n                            </label>\n                            <label className=\"list-form-field\">\n                                <p>Job Stage: </p>\n                                <select style={{ color: 'black' }} name=\"job_stage\" ref={register} className=\"list-form-field-with-margin\">\n                                    {Object.keys(job_stages).map((key, idx)=> (\n                                        <option \n                                            defaultValue={job_stages[key]} \n                                            key={idx} \n                                            name={job_stages[key]}\n                                        > {job_stages[key]} </option>\n                                    ))}\n                                </select>\n                            </label>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"required-field\">*Job Posting Website: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Job Posting Website*\"}\n                                    defaultValue={job.job_posting_website}\n                                    name={\"job_posting_website\"}\n                                    ref={register({ required: true })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.job_posting_website && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"required-field\"> *Position Title: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Position Title*\"}\n                                    defaultValue={job.position_title}\n                                    name={\"position_title\"}\n                                    ref={register({ required: true })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.position_title && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"required-field\">*Company: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Company*\"}\n                                    defaultValue={job.company}\n                                    name={\"company\"}\n                                    ref={register({ required: true })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.company && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">City: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"City\"}\n                                    defaultValue={job.city}\n                                    name={\"city\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.city && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"required-field\">*Job Posting Website: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Job Posting Website*\"}\n                                    defaultValue={job.link}\n                                    name={\"link\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em'}}\n                                />\n                                {errors.link && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Recruiter: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Recruiter\"}\n                                    defaultValue={job.recruiter}\n                                    name={\"recruiter\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.recruiter && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Description: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Description\"}\n                                    defaultValue={job.description}\n                                    name={\"description\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.description && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Pre Bullet Point - Paragraph one: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Pre Bullet Point - Paragraph one\"}\n                                    defaultValue={job.pre_bullet_point_paragraph_one}\n                                    name={\"pre_bullet_point_paragraph_one\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.pre_bullet_point_paragraph_one && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Pre Bullet Point - Paragraph two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Pre Bullet Point - Paragraph two\"}\n                                    name={\"pre_bullet_point_paragraph_two\"}\n                                    defaultValue={job.pre_bullet_point_paragraph_two}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.pre_bullet_point_paragraph_two && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Top Skill: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Top Skill\"}\n                                    defaultValue={job.top_skills}\n                                    name={\"top_skills\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.top_skills && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point One: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point One\"}\n                                    defaultValue={job.bullet_point_one}\n                                    name={\"bullet_point_one\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_one && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Two\"}\n                                    defaultValue={job.bullet_point_two}\n                                    name={\"bullet_point_two\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_two && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Three: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Three\"}\n                                    defaultValue={job.bullet_point_three}\n                                    name={\"bullet_point_three\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_three && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Four: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Four\"}\n                                    defaultValue={job.bullet_point_four}\n                                    name={\"bullet_point_four\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_four && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Five: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Five\"}\n                                    defaultValue={job.bullet_point_five}\n                                    name={\"bullet_point_five\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_five && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Six: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Six\"}\n                                    defaultValue={job.bullet_point_six}\n                                    name={\"bullet_point_six\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_six && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Seven: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Seven\"}\n                                    defaultValue={job.bullet_point_seven}\n                                    name={\"bullet_point_seven\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_seven && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Eight: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Eight\"}\n                                    defaultValue={job.bullet_point_eight}\n                                    name={\"bullet_point_eight\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_eight && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Post Bullet Point - Paragraph one: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Post Bullet Point - Paragraph one\"}\n                                    defaultValue={job.post_bullet_point_paragraph_one}\n                                    name={\"post_bullet_point_paragraph_one\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.post_bullet_point_paragraph_one && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Post Bullet Point - Paragraph two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Post Bullet Point - Paragraph two\"}\n                                    defaultValue={job.post_bullet_point_paragraph_two}\n                                    name={\"post_bullet_point_paragraph_two\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.post_bullet_point_paragraph_two && \"Your input is required\"}\n                            </div>\n                            <div>\n                                <input\n                                    type=\"hidden\"\n                                    style={{ color: 'black' }}\n                                    placeholder={userId}\n                                    name={\"belongs_to_user\"}\n                                    defaultValue={userId}\n                                    ref={register({ required: true })}\n                                />\n                            </div>\n                            <input style={{ color: 'Black' }} type=\"submit\" value={buttonTxt} className=\"form-button\"/>\n                        </form>\n                    </div>\n                </Segment>\n            </Container>\n        );\n    } else {\n        return (\n            <Container>\n                <Segment inverted>\n\n                    <div className=\"create-job-form\">\n                        <h1 className=\"form-title\">Create Cover Letter</h1>\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <label className=\"list-form-field\">\n                                <p className=\"non-required-field\">Template Choices: </p>\n                                <select style={{ color: 'Red' }} name=\"template_choices\" ref={register} className=\"list-form-field-with-margin\">\n                                    {Object.keys(template_choices).map((key, idx) => (\n                                        <option value={key} key={idx} name={template_choices[key]}> {template_choices[key]} </option>\n                                    ))}\n                                </select>\n                            </label>\n                            <label className=\"list-form-field\">\n                                <p className=\"non-required-field\">Job Stage: </p>\n                                <select style={{ color: 'black' }} name=\"job_stage\" ref={register} className=\"list-form-field-with-margin\">\n                                    {Object.keys(job_stages).map((key, idx) => (\n                                        <option key={idx} name={job_stages[key]}> {job_stages[key]} </option>\n                                    ))}\n                                </select>\n                            </label>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"required-field\">*Job Posting Website: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Job Posting Website*\"}\n                                    name={\"job_posting_website\"}\n                                    ref={register({ required: true })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.job_posting_website && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"required-field\">*Position Title: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Position Title*\"}\n                                    name={\"position_title\"}\n                                    ref={register({ required: true })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.position_title && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                {/* <p className=\"non-required-field\">Choice of User: </p> */}\n                                <input\n                                    type=\"hidden\"\n                                    style={{ color: 'black' }}\n                                    placeholder={userId}\n                                    name={\"belongs_to_user\"}\n                                    defaultValue={userId}\n                                    ref={register({ required: true })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {/* {errors.choice_of_user && \"Your input is required\"} */}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"required-field\">*Company: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Company*\"}\n                                    name={\"company\"}\n                                    ref={register({ required: true })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.company && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">City: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"City\"}\n                                    name={\"city\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.city && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"required-field\">*Job Link: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Link*\"}\n                                    name={\"link\"}\n                                    ref={register({ required: true })}\n                                    style={{ display: 'flex', margin: '0em 1em'}}\n                                />\n                                {errors.link && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Recruiter: </p>\n                                <input\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Recruiter\"}\n                                    name={\"recruiter\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.recruiter && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Description: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Description\"}\n                                    name={\"description\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.description && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Pre Bullet Point - Paragraph one: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Pre Bullet Point - Paragraph one\"}\n                                    name={\"pre_bullet_point_paragraph_one\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.pre_bullet_point_paragraph_one && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Pre Bullet Point - Paragraph two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Pre Bullet Point - Paragraph two\"}\n                                    name={\"pre_bullet_point_paragraph_two\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.pre_bullet_point_paragraph_two && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Top Skill: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Top Skill\"}\n                                    name={\"top_skills\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.top_skills && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point One: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point One\"}\n                                    name={\"bullet_point_one\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_one && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Two\"}\n                                    name={\"bullet_point_two\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_two && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Three: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Three\"}\n                                    name={\"bullet_point_three\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_three && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Four: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Four\"}\n                                    name={\"bullet_point_four\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_four && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Five: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Five\"}\n                                    name={\"bullet_point_five\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_five && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Six: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Six\"}\n                                    name={\"bullet_point_six\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_six && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Seven: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Seven\"}\n                                    name={\"bullet_point_seven\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_seven && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Bullet Point Eight: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Bullet Point Eight\"}\n                                    name={\"bullet_point_eight\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.bullet_point_eight && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Post Bullet Point - Paragraph one: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Post Bullet Point - Paragraph one\"}\n                                    name={\"post_bullet_point_paragraph_one\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.post_bullet_point_paragraph_one && \"Your input is required\"}\n                            </div>\n                            <div className=\"list-form-field-with-margin\">\n                                <p className=\"non-required-field\">Post Bullet Point - Paragraph two: </p>\n                                <textarea\n                                    style={{ color: 'black' }}\n                                    placeholder={\"Post Bullet Point - Paragraph two\"}\n                                    name={\"post_bullet_point_paragraph_two\"}\n                                    ref={register({ required: false })}\n                                    className=\"list-form-field-with-margin\"\n                                />\n                                {errors.post_bullet_point_paragraph_two && \"Your input is required\"}\n                            </div>\n                            <input style={{ color: 'Black' }} type=\"submit\" value={buttonTxt} className=\"form-button\" />\n                        </form>\n                    </div>\n                </Segment>\n            </Container>\n        )\n    }\n}\n","import axios from 'axios'\n\nimport { authCheckState} from './actions/Auth';\n\nconst axiosInstance = axios.create({\n    baseURL: '',\n    timeout: 3000,\n    headers: {\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    },\n\n});\n\naxios.interceptors.response.use(response => \n    {\n        return response;\n    }, error => {\n        const originalRequest = error.config;\n        if (error !== undefined && error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\n            const refresh_token = localStorage.getItem('refresh_token');\n            const access_token = localStorage.getItem('access_token');\n            return axiosInstance\n                .post('/api/token/refresh/', { refresh: refresh_token, access_token: access_token })\n                .then(response => {\n                    localStorage.setItem('access_token', response.data.access);\n                    axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    originalRequest.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    return axiosInstance(originalRequest);\n                })\n                .catch(err => {\n                    authCheckState()\n                });\n        }\n        \n        return Promise.reject(error);\n    }, () => {\n        authCheckState()\n    }\n    \n);\n\n\nexport default axiosInstance\n","export const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"","\nimport axios from 'axios'\n\n\nimport axiosInstance from '../axiosApi'\nimport * as actionTypes from './ActionTypes'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, refresh_token = null) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        access_token: token,\n        refresh_token: refresh_token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user')\n    localStorage.removeItem('access_token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('refresh_token')\n    localStorage.removeItem('token')\n    authCheckState()\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const authLogin = (username, password, setErrorState = null, justSignedUp = false, history = null) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(\"/api/token/\", {\n            username: username,\n            password: password\n        }).then(response => {\n            axiosInstance.defaults.headers['Authorization'] = `Bearer ${response.data.access}`;\n            const token = response.data.access;\n            const refresh_token = response.data.refresh;\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n            dispatch(authSuccess(token, refresh_token));\n            if (justSignedUp) {\n                const navBar = document.getElementsByClassName(\"nav-bar\")[0]\n                navBar.style.display = \"none\"\n                history.push(\"/signup-user-details/\")\n            } else {       \n                history.push(\"/all-jobs/\")\n            }\n        }).catch(err => {\n            if (setErrorState !== null){\n                setErrorState(\"Failed to log in. Try again or sign up.\")\n            }\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const authSignUp = (data, setErrorMessage, justSignedUp, history) => {\n    logout()\n    const username = data.username\n    const password1 = data.password\n    const password2 = data.confirm_password\n    const email = data.email\n    return dispatch => {\n        dispatch(authStart());\n        \n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n        }\n        axios.post(\"/rest-auth/registration/\", {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2,\n        }).then(response => {\n            dispatch(authLogin(username, password1, setErrorMessage, justSignedUp, history))\n            // const token = response.data.token;\n            // // const expirationDate = new Date(new Date().getTime() + 5000 * 1000);\n            // const accessToken = response.data.token;\n            // const refreshToken = response.data.refresh;\n            // localStorage.setItem('access_token', accessToken);\n            // // localStorage.setItem('refresh_token', refreshToken);\n        }).catch(err => {\n            setErrorMessage(\"Either the password was too common (i.e password123), the Username taken, or the Email was. Please try again.\")\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('access_token')\n        const refresh_token = localStorage.getItem('refresh_token')\n        if (token === undefined) {\n            dispatch(logout())\n        } \n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport { useHistory } from 'react-router-dom';\n\nimport Jobs from '../../components/jobInfo/AllJobs'\nimport Pagination from '../../components/pagination/Pagination'\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm';\nimport * as actions from '../../store/actions/Auth'\nimport {\n    Container,\n    Header,\n    Segment,\n} from 'semantic-ui-react'\nimport { useSelector } from 'react-redux';\n\n\nconst JobList = () => {\n    let history = useHistory()\n\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const [jobProps, setJobProps] = useState([])\n    const [allJobs, setAllJobs] = useState([])\n    const [next, setNext] = useState([])\n    const [onPrevious, setOnPrevious] = useState([])\n    const [loaded, setLoaded] = useState({isLoaded: false})\n    const [pageIndex, setPageIndex] = useState(1)\n    const [count, setCount] = useState(0)\n    const props = useSelector(state => (\n        {\n            ...state,\n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n\n    useEffect(() => {\n\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(\"/api/jobs/\")\n        .then( res => {\n            setAllJobs(res.data.results)\n            return res\n        })\n        .then(response => {\n            setAllJobs(response.data.results)\n            setJobProps(response.data)\n            setNext(response.data.next)\n            setCount(response.data.count)\n            setOnPrevious(response.data.previous)\n        })\n        .then(() => {\n            setLoaded({isLoaded: true})\n        })\n        .catch(err => {\n            actions.authCheckState()\n        })\n    }, [])\n    if (loaded.isLoaded && !props.loading) {\n        if (allJobs.length) {\n            return (\n                <Container>\n                    <Segment>\n                        <Header\n                            as='h1'\n                            content='All Jobs'\n                            // inverted\n                            style={{\n                                fontSize: '2em',\n                                // fontWeight: 'normal',\n                                // marginBottom: 0,\n                                // marginTop: '.5em',\n                            }}\n                        />\n                        <Segment style={{fontSize: '2em'}}>\n                            <Jobs jobs={allJobs} jobProps={jobProps} />\n                        </Segment>\n                        <Segment style={{ fontSize: '1em' }}>\n                            <Pagination\n                                pageIndex={pageIndex}\n                                total={count}\n                                perPage={20}\n                                onNext={next}\n                                onPrevious={onPrevious}\n                                setAllJobs={setAllJobs}\n                                setNext={setNext}\n                                setOnPrevious={setOnPrevious}\n                                setPageIndex={setPageIndex}\n                            />\n                        </Segment>\n                    </Segment>\n                </Container>\n            )\n        } else {\n            return (\n                <div>\n                    <Container>\n                        <Header \n                            as='h1'\n                            content='No Cover Letters Exist'\n                            // inverted\n                            style={{\n                                fontSize: '2em',\n                                // fontWeight: 'normal',\n                                // marginBottom: 0,\n                                // marginTop: '.5em',\n                            }}\n                        />\n                        <Header \n                            as='h3'\n                            content='Please create one below:'\n                            // inverted\n                            style={{\n                                fontSize: '2em',\n                                // fontWeight: 'normal',\n                                // marginBottom: 0,\n                                // marginTop: '.5em',\n                            }}\n                        />\n                        <Segment>\n                            <JobForm requestType=\"post\" jobID={null} buttonTxt=\"Create Cover Letter\" />\n                        </Segment>\n\n                    </Container>\n\n\n                </div>\n            )\n        }\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobList","export const formattedJobData = {\n    'id': 'Id',\n    'form_creation_date': 'Creation Date',\n    'template_choices': 'Template Choice',\n    'job_stage': 'Job Stage',\n    'choice_of_user': 'Choice of User',\n    'job_posting_website': 'Job Website',\n    'position_title': 'Position Title',\n    'company': 'Company',\n    'city': 'City',\n    'link': 'Job Link',\n    'recruiter': 'Recruiter',\n    'description': 'Description',\n    'pre_bullet_point_paragraph_one': 'Pre Paragraph One',\n    'pre_bullet_point_paragraph_two': 'Pre Paragraph Two',\n    'top_skills': 'Top Skills',\n    'bullet_point_one': 'Bullet Point One',\n    'bullet_point_two': 'Bullet Point Two',\n    'bullet_point_three': 'Bullet Point Three',\n    'bullet_point_four': 'Bullet Point Four',\n    'bullet_point_five': 'Bullet Point Five',\n    'bullet_point_six': 'Bullet Point Six',\n    'bullet_point_seven': 'Bullet Point Seven',\n    'bullet_point_eight': 'Bullet Point Eight',\n    'post_bullet_point_paragraph_one': 'Post Paragraph One',\n    'post_bullet_point_paragraph_two': 'Post Paragraph Two',\n    'modified_date': 'Modified Date',\n    'created_date': 'Created Date',\n    'belongs_to_user': 'Belongs To User ID',\n}\n\nexport const formattedUserData = {\n    \"first_name\": \"First Name\",\n    \"middle_name\":\"Middle Name\",\n    \"last_name\":\"Last Name\",\n    \"preferred_name\":\"Preferred Name\",\n    \"phone_number\":\"Phone Number Name\",\n    \"linkedin\":\"Linkedin\",\n    \"github\":\"Github\",\n    \"portfolio_website\":\"Portfolio Website\",\n    \"street_address\":\"Stree Address\",\n    \"city_address\":\"City Address\",\n    \"state_address\":\"State Address\",\n    \"zip_code\":\"Zip Code\",\n\n}","import React from \"react\";\nimport {formattedJobData} from \"./formattedData\";\nimport {Link} from 'react-router-dom'\nimport {\n    Header, Container, Segment, \n} from 'semantic-ui-react'\n\nconst Jobs = props => {\n    \n    const jobDetail = props.jobDetail\n    const jobDetailKeys = Object.keys(jobDetail)\n\n    return (\n        <Container className=\"job-detail\">\n            <Header\n                as='h1'\n                inverted\n                content='Job Detail'\n                // inverted\n                style={{\n                    fontSize: '2em',\n                    // fontWeight: 'normal',\n                    // marginBottom: 0,\n                    // marginTop: '.5em',\n                }}\n            />\n            <Segment inverted>\n                {jobDetailKeys.map(key => (\n                    <div className=\"job-detail-container\" key={`${key} - container`}>\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p key={`${key}`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p className=\"job-info-data\" key={`key value - ${key}`} key={`${key} - ${key}`}>{jobDetail[key]}</p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p key={`${key} + 1`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p><Link to={jobDetail[key]} className=\"job-info-data\" key={`key value - ${key} + 1`} key={`${key} - ${key}`}>{jobDetail[key]}</Link></p> : null }\n                    </div>\n               ))}\n            </Segment>\n        </Container>\n    );\n};\n\n\nexport default Jobs;\n\n\n\n","\n\n\n\nconst NonTechnicalCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Non Tech Cover Letter</h1>\n                    {/* <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3> */}\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            {user.email ? <p className=\"com\">{user.email}</p> \n                            :\n                            null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a> | </p> \n                            :\n                            null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a> | </p> \n                            :\n                            null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a> | </p> \n                            :\n                            null}\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter }:</p> \n                                :\n                                <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                Thank you for the opportunity to apply for the {` ${job.position_title} `} \n                                role at your company - { job.company }.\n                                After reviewing your job description, it's clear that you're looking\n                                for a candidate that is familiar with\n                                the responsibilities associated with the \n                                {job.position_title ? ` ${job.position_title} ` : null }\n                                 role and can perform them confidently. Given these requirements,\n                                I am confident that I can do the job adeptly and fulfill the above\n                                expectations successfully.\n                            </p>\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <br/>\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title } ` : null }\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email } to arrange a convenient time to chat.\n                            </p>\n                            <br/>\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely, \n                                <br/>\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                :\n                                `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n    \n            </div>\n        )\n    }\n}\n\nexport default NonTechnicalCoverLetter","const StandardCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Standard Letter</h1>\n                    {/* <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3> */}\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            {user.email ? <p className=\"com\">{user.email}</p>\n                                :\n                                null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a> | </p>\n                                :\n                                null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a> | </p>\n                                :\n                                null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a> | </p>\n                                :\n                                null}\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter}:</p>\n                                    :\n                                    <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                As advertised on the {job.job_posting_website ? ` ${job.job_posting_website } ` : ` ${ job.company } ` } website, your need for a\n                                {` ${job.position_title} ` } is an excellent match to my background \n                                and career goals. With my strong education and experience, I am \n                                confident I can make an immediate contribution given the opportunity.\n                            </p>\n                            {job.pre_bullet_point_paragraph_one ? <p>{job.pre_bullet_point_paragraph_one}</p> : null}\n                            {job.pre_bullet_point_paragraph_two ? <p>{job.pre_bullet_point_paragraph_two}</p> : null}\n                            <p>Highlights of my qualifications most relevant to your needs include:</p>\n                            <p> * {job.top_skills}</p>\n                            {job.bullet_point_one ? <p> * {job.bullet_point_one }</p> : null }\n                            {job.bullet_point_two ? <p> * {job.bullet_point_two }</p> : null }\n                            {job.bullet_point_three ? <p> * {job.bullet_point_three }</p> : null }\n                            {job.bullet_point_four ? <p> * {job.bullet_point_four }</p> : null }\n                            {job.bullet_point_five ? <p> * {job.bullet_point_five }</p> : null }\n                            {job.bullet_point_six ? <p> * {job.bullet_point_six }</p> : null }\n                            {job.bullet_point_seven ? <p> * {job.bullet_point_seven }</p> : null }\n                            {job.bullet_point_eight ? <p> * {job.bullet_point_eight }</p> : null }\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <p>These proven abilities can contribute to {`${job.company} `}'s continued success. I would welcome the opportunity to discuss my background with you in detail and to learn more about your company and its goals. </p>\n                            <br />\n                            {job.post_bullet_point_paragraph_one ? <p>{job.post_bullet_point_paragraph_one}</p> : null}\n                            {job.post_bullet_point_paragraph_two ? <p>{job.post_bullet_point_paragraph_two}</p> : null}\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title} ` : null}\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email} to arrange a convenient time to chat.\n                            </p>\n                            <br />\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely,\n                                <br />\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                    :\n                                    `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default StandardCoverLetter","import CoverLetter from '../../components/cover_letter/templates/CoverLetter'\nimport NonTechnicalCoverLetter from '../../components/cover_letter/templates/NonTechnicalCoverLetter'\nimport StandardCoverLetter from '../../components/cover_letter/templates/StandardJobTemplate'\nimport TriplebyteCoverLetter from '../../components/cover_letter/templates/TriplebyteCoverLetter'\n\nexport const determineCoverLetter = (coverLetter, job, user) => {\n    \n    switch (coverLetter) {\n        case \"non-technical-cover-letter\":\n            return <NonTechnicalCoverLetter job={job} user={user} />\n        // case 'cover-letter':\n        //     return <CoverLetter job={job} user={user}/>\n        // case 'Triplebyte (message-version)':\n        //     return <TriplebyteCoverLetter job={job} user={user}/>\n        case 'Standard Job Template':\n            return <StandardCoverLetter job={job} user={user}/>\n        default:\n            return <NonTechnicalCoverLetter job={job} user={user} />;\n    }\n}","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport { useForm } from 'react-hook-form'\nimport { determineCoverLetter } from './determineCoverLetterFormat'\nimport { Link } from 'react-router-dom'\nimport { Container, Segment } from 'semantic-ui-react'\n\n\n\nconst CoverLetterChoiceContainer = ({job, userId}) => {\n    const accessToken = localStorage.getItem(\"access_token\")\n    const [user, setUser] = useState({})\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [currentCoverLetterChoice, setCurrentCoverLetterChoice] = useState(job.template_choices)\n    const { register, handleSubmit } = useForm({\n        defaultValues: {\n            template_choice: job.template_choices,\n        }\n    })\n\n    const template_choices = {\n        'non-technical-cover-letter': 'Non-technical Cover Letter',\n        'Standard Job Template': 'Standard Job Template',\n        'Triplebyte (message-version)': 'Triplebyte (message-version)',\n        'cover-letter': 'Cover Letter',\n        'cover-letter-4': 'Template 4',\n        'cover-letter-5': 'Template 5',\n    }\n\n    const onSubmit = (data) => {\n        setCurrentCoverLetterChoice(data['template_choice'])\n    }\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}`)\n            .then(res => {\n                setUser(res.data)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(err => {\n                setLoaded({ isLoaded: false })\n            })\n    }, [])\n\n    if (loaded.isLoaded) {\n        return (\n        <div className=\"cover-letter-display-container\">\n            <Container>\n                <Segment inverted>\n\n                        <div>\n                            <Link to=\"/job/form\">Create another cover letter?</Link>\n                        </div>\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <label>\n                                <p>Template Choices: </p>\n                                <select style={{ color: 'Red' }} name=\"template_choice\" ref={register} style={{ display: 'flex', margin: '0em 1em' }}>\n                                    {Object.keys(template_choices).map((key, idx) => (\n                                        <option value={key} key={idx} name={template_choices[key]}> {template_choices[key]} </option>\n                                        ))}\n                                </select>\n                            </label>\n                            <input className=\"cover-letter-display-button\" type=\"submit\" value=\"Change Cover Letter\" />\n                        </form>\n                        <div>\n                            {determineCoverLetter(currentCoverLetterChoice, job, user)}\n                        </div>\n                </Segment>\n            </Container>\n        </div>\n    \n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CoverLetterChoiceContainer","import React, { useState, useEffect } from 'react'\nimport JobDetail from '../../components/jobInfo/JobDetail'\nimport axios from 'axios'\n\nimport { useHistory, useParams } from 'react-router'\nimport { useForm } from 'react-hook-form'\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm'\nimport { confirmAlert, alert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport CoverLetterChoiceContainer from '../cover_letters/CoverLetterDisplayContainer'\n\n\nconst JobDetailView = () => {\n    const [job, setjob] = useState([])\n    const [userId, setUserId] = useState([])\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const { handleSubmit } = useForm()\n    const paramsJobId = useParams().jobID\n    const history = useHistory()\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/jobs/${paramsJobId}/`, {...paramsJobId})\n            .then(res => {\n                setjob(res.data)\n                setUserId(res.data.belongs_to_user)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(error => {\n                setLoaded({isLoaded: false})\n                alert(error)\n                history.push('/login')\n            })\n    }, [])\n\n    const onSubmit = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: `Are you sure you want to delete ${job.position_title} at ${job.company}?`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`/api/jobs/${paramsJobId}/`, {...paramsJobId})\n                            .then(() => history.push('/all-jobs'))\n                            .catch(error => console.log(error))\n                    }\n                },\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n\n    if (loaded.isLoaded) {\n        return (\n            <div>\n                <div className=\"hide-buttons\">\n                    <button id=\"show-job-update-button\" onClick={() => reveal('update-job-container', 'show-job-update-button')}>Show Update Form</button>\n                    <button id=\"show-cover-letter-button\" onClick={() => reveal('cover-letter-container', \"show-cover-letter-button\")}>Show Cover Letter</button>\n                    <button id=\"hide-job-details-button\" onClick={() => reveal('job-detail', \"hide-job-details-button\")}>Hide Job Details</button>\n                </div>\n                <div className=\"job-container\">\n                    <div className=\"job-and-cover-letter-container\">\n                        <div>\n                            <JobDetail jobDetail={job} />\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"delete-button\">\n                                <button className=\"btn-warning\" type=\"submit\">Delete</button>\n                            </form>\n\n                        </div>\n                        <div className=\"update-job-container\">\n                            <JobForm requestType=\"put\" job={job} buttonTxt=\"Update\" />\n                        </div>\n                    </div>\n                    <div className=\"cover-letter-container\" id=\"cover-letter-choice\">\n                        <CoverLetterChoiceContainer job={job} userId={userId} />\n                    </div>\n                    \n                </div>\n                {/* <div className=\"job-container\">\n                    \n                </div> */}\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobDetailView\n\n\nconst reveal = (divToHide, button) => {\n    const div = document.getElementsByClassName(divToHide)[0]\n    if (divToHide !== \"job-detail\") {\n        div.style.display === '' ? div.style.display = 'block' : div.style.display = ''\n    } else {\n        div.style.display === 'none' ? div.style.display = 'block' : div.style.display = 'none'\n    } \n\n\n    let buttonTxt = document.getElementById(button)\n    if (buttonTxt.innerText.includes(\"Hide\")) {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Hide\", \"Show\")\n    } else {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Show\", \"Hide\")\n    }\n}","import React, { useCallback, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from \"../../store/actions/Auth\"\nimport { useHistory } from 'react-router-dom';\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm'\nimport NotLoggedInPage from '../../components/NotLoggedInPage';\nimport { Segment } from 'semantic-ui-react';\n\n\nconst CoverLetterView = () => {\n    const paramsJobId = null\n    let history = useHistory()\n    const props = useSelector(state => (\n        {\n            ...state, \n            isAuthenticated: state.token !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    return (\n        <Segment inverted>\n            <JobForm requestType=\"post\" jobID={paramsJobId} buttonTxt=\"Create Cover Letter\"/>\n        </Segment>\n    )\n}\n\nexport default CoverLetterView","// import { Form, Input, Button, Checkbox, Spin, Space, Alert } from 'antd';\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab, Divider\n} from 'semantic-ui-react'\n\nimport {Nav} from 'react-bootstrap';\nimport React, { useEffect, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as actions from '../../store/actions/Auth'\nimport { useHistory }  from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\n\n\n\nconst Login = () => {\n    const history = useHistory()\n    const [loading, setLoading] = useState(false)\n    const props = useSelector(state => (\n        { ...state, \n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const {register, handleSubmit} = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        (username, password) => dispatch(actions.authLogin(username, password, setErrorMessage, false, history))\n    )\n\n    const [errorMessage, setErrorMessage] = useState(null)\n    \n    const onFinish = (values) => {\n        setLoading(true)\n        try {\n            onAuth(values.username, values.password)\n        } catch {\n            setErrorMessage(\"Please try again or signup.\")\n        }\n        setLoading(false)\n    };\n\n    \n    return (\n        <div className=\"login-form\">\n            <Segment size=\"large\">\n                <Segment placeholder inverted style={{minWidth: \"10vh\"}}>\n                    <Grid columns={2} relaxed='very' stackable>\n                        <Grid.Column>\n                            <Form onSubmit={handleSubmit(onFinish)} loading={props.loading} error={errorMessage !== null} inverted>\n                                {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                <Form.Field required>\n                                    <label>Username</label>\n                                    <input\n                                        icon='user'\n                                        label='Username'\n                                        name={'username'}\n                                        placeholder='Username'\n                                        autoComplete=\"username\"\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Password</label>\n                                    <input\n                                        icon='lock'\n                                        label='Password'\n                                        name={'password'}\n                                        autoComplete=\"current-password\"\n                                        type='password'\n                                        ref={register()}\n                                    />\n\n                                </Form.Field>\n\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Login</Button>\n                            </Form>\n                        </Grid.Column>\n\n                        <Grid.Column verticalAlign='middle'>\n                            <Button content='Sign up' icon='signup' size='big' onClick={() => history.push(\"/signup\")}/>\n                        </Grid.Column>\n                    </Grid>\n                    <Divider vertical inverted>Or</Divider>\n                </Segment>\n            </Segment>\n        </div>\n    );\n};\n\n\nexport default Login","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport {logout} from '../../store/actions/Auth'\nimport {Grid, Container, Segment, Header, Menu} from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\nimport axiosInstance from '../../store/axiosApi'\n\nconst Shell = props => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const userId = jwtDecode(localStorage.getItem('access_token')).user_id\n    const [user, setUser] = useState({})\n    const [loaded, isLoaded] = useState(false)\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n        // axios.get(`${url}/api/users/${userId}`)\n        axios.get(`/api/users/${userId}`)\n        .then(resp => {\n            setUser(resp.data)\n            // history.push({user: resp.data})\n        })\n        .then(() => {\n            isLoaded(true)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }, [localStorage.getItem('access_token')])\n\n        return (    \n            <Segment vertical>\n                <Container>\n                    <Grid container stackable=\"true\" verticalAlign='top' divided columns={2}>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                <Header as=\"h3\" inverted>Account</Header>\n                                <Menu vertical fluid>\n                                    <Menu.Item \n                                        onClick={() => history.push(\"/user-admin/change-email/\", {user: user})} \n                                        active={history.location.pathname === \"/user-admin/change-email/\"}\n                                        name=\"change-email\">\n                                        Change Email\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/user-admin/change-password/\", { user: user })}\n                                        active={history.location.pathname === \"/user-admin/change-password/\"}\n                                        name=\"change-password\">\n                                        Change Password\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/user-admin/change-account-info/\", { user: user })}\n                                        active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                        name=\"change-account-info\">\n                                        Change Account Info\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => dispatch(logout())}\n                                        name=\"logout\">\n                                        Logout\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Column>\n                            <Grid.Column width={12}>\n                                {props.children}\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n}\n\nexport default Shell\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Button, Table\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\nimport Shell from '../../containers/Account/Shell';\n\n\n\nconst ChangeEmail = (props) => {\n    const [user, setUser] = useState(\"\")\n    const [newEmail] = useState(\"\")\n    const [confirmEmail] = useState(\"\")\n    const [error, setError] = useState({})\n    const {register, handleSubmit} = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(false)\n\n    useEffect(() => {\n        axios.get(`/api/users/${userId}/`, { userId: userId })\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n\n    const onSubmit = data => {\n        const email = data.newEmail\n        const confirmEmail = data.confirmEmail\n        if (data.newEmail !== '' || data.confirmEmail !== '') {\n            if (email === confirmEmail) {\n                if (email !== user.email) {\n                    setLoading(true)\n                    data = {email: email}\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    axios.patch(`/api/users/${user.id}/`, data)\n                    .then(resp => {\n                        setUser(resp.data)\n                    })\n                    .catch(err => {\n                        setError(err.Message)\n                    })\n                    setLoading(false)\n                } else {\n                    setError(`Your email is already ${email}`)\n                }\n            } else {\n                setError(\"Emails don't match!\")\n            }\n        } else {\n            setError(\"Fields are empty!\")\n\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Email</Table.HeaderCell>\n                            <Table.HeaderCell>New Email</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {/* <Header as=\"h2\">Change Email</Header> */}\n                        {/* <br /> */}\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Email: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <Input\n                                            // placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.email}\n                                            type=\"text\"\n                                            name={\"currentEmail\"}\n                                            ref={register({ name: \"currentEmail\" })}\n                                            disabled\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                    <Form.Field>Change Email</Form.Field>\n                                </Table.Cell>\n                                <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Email</label>\n                                    <input\n                                        placeholder=\"New Email\"\n                                        defaultValue={newEmail}\n                                        type=\"email\"\n                                        name={\"newEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Email</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Email\"\n                                        defaultValue={confirmEmail}\n                                        dependencies={[\"newEmail\"]}\n                                        type=\"email\"\n                                        name={\"confirmEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n \n\nexport default ChangeEmail","\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Icon,\n    List,\n    Menu,\n    Segment,\n    Sidebar,\n    Visibility,\n} from 'semantic-ui-react'\n\n\n/* Heads up!\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\n * components for such things.\n */\nconst HomepageHeading = ({ mobile }) => {\n    const history = useHistory()\n    return(\n        <Container text>\n            <Header\n                as='h1'\n                content='Unique Cover Letter Generator'\n                inverted\n                style={{\n                    fontSize: mobile ? '2em' : '4em',\n                    fontWeight: 'normal',\n                    marginBottom: 0,\n                    marginTop: mobile ? '1.5em' : '3em',\n                }}\n            />\n            <Header\n                as='h2'\n                content='Want to save time while applying to jobs?'\n                inverted\n                style={{\n                    fontSize: mobile ? '1.5em' : '1.7em',\n                    fontWeight: 'normal',\n                    marginTop: mobile ? '0.5em' : '1.5em',\n                }}\n            />\n            <Button primary size='huge' onClick={() => history.push('/all-jobs/')}>\n                Get Started\n                <Icon name='right arrow' />\n            </Button>\n        </Container>\n    )\n}\n\n\nHomepageHeading.propTypes = {\n    mobile: PropTypes.bool,\n}\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n    state = {}\n\n    hideFixedMenu = () => this.setState({ fixed: false })\n    showFixedMenu = () => this.setState({ fixed: true })\n\n    render() {\n        const { children } = this.props\n        const { fixed } = this.state\n\n        return (\n            <Container>\n                <Visibility\n                    once={false}\n                    onBottomPassed={this.showFixedMenu}\n                    onBottomPassedReverse={this.hideFixedMenu}\n                >\n                    <Segment\n                        inverted\n                        textAlign='center'\n                        style={{ minHeight: 700, padding: '1em 0em' }}\n                        vertical\n                    >\n                        <HomepageHeading />\n                    </Segment>\n                </Visibility>\n\n                {children}\n            </Container>\n        )\n    }\n}\n\nDesktopContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n    state = {}\n\n    handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n    handleToggle = () => this.setState({ sidebarOpened: true })\n\n    render() {\n        const { children } = this.props\n        const { sidebarOpened } = this.state\n\n        return (\n            <Container as={Sidebar.Pushable} at='mobile'>\n                <Sidebar.Pushable>\n                    <Sidebar\n                        as={Menu}\n                        animation='overlay'\n                        inverted\n                        onHide={this.handleSidebarHide}\n                        vertical\n                        visible={sidebarOpened}\n                    >\n                        <Menu.Item as='a' active>\n                            Home\n                        </Menu.Item>\n                        <Menu.Item as='a'>Work</Menu.Item>\n                        <Menu.Item as='a'>Company</Menu.Item>\n                        <Menu.Item as='a'>Careers</Menu.Item>\n                        <Menu.Item as='a'>Log in</Menu.Item>\n                        <Menu.Item as='a'>Sign Up</Menu.Item>\n                    </Sidebar>\n\n                    <Sidebar.Pusher dimmed={sidebarOpened}>\n                        <Segment\n                            inverted\n                            textAlign='center'\n                            style={{ minHeight: 350, padding: '1em 0em' }}\n                            vertical\n                        >\n                            <Container>\n                                <Menu inverted pointing secondary size='large'>\n                                    <Menu.Item onClick={this.handleToggle}>\n                                        <Icon name='sidebar' />\n                                    </Menu.Item>\n                                    <Menu.Item position='right'>\n                                        <Button as='a' inverted>\n                                            Log in\n                                        </Button>\n                                        <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                                            Sign Up\n                                        </Button>\n                                    </Menu.Item>\n                                </Menu>\n                            </Container>\n                            <HomepageHeading mobile />\n                        </Segment>\n\n                        {children}\n                    </Sidebar.Pusher>\n                </Sidebar.Pushable>\n            </Container>\n        )\n    }\n}\n\nMobileContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst ResponsiveContainer = ({ children }) => (\n    /* Heads up!\n     * For large applications it may not be best option to put all page into these containers at\n     * they will be rendered twice for SSR.\n     */\n        <DesktopContainer>{children}</DesktopContainer>\n)\n\nResponsiveContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst Homepage = () => (\n    <ResponsiveContainer>\n        <Segment style={{ padding: '8em 0em' }} vertical inverted>\n            <Grid container stackable=\"true\" verticalAlign='middle'>\n                <Grid.Row>\n                    <Grid.Column width={8}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            We Help Companies and Companions\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            We can give your company superpowers to do things that they never thought possible.\n                            Let us delight your customers and empower your needs... through pure data analytics.\n                        </p>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            We Make Bananas That Can Dance\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            Yes that's right, you thought it was the stuff of dreams, but even bananas can be\n                            bioengineered.\n                        </p>\n                    </Grid.Column>\n                    <Grid.Column floated='right' width={6}>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column textAlign='center'>\n                        <Button size='huge'>Check Them Out</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n\n        <Segment style={{ padding: '0em' }} vertical inverted>\n            <Grid celled='internally' columns='equal' stackable>\n                <Grid.Row textAlign='center'>\n                    <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            \"What a Company\"\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n                    </Grid.Column>\n                    <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            \"I shouldn't have gone with their competitor.\"\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            <b>Nan</b> Chief Fun Officer Acme Toys\n                        </p>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n\n        <Segment style={{ padding: '8em 0em' }} vertical inverted>\n            <Container text>\n                <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                    Breaking The Grid, Grabs Your Attention\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Instead of focusing on content creation and hard work, we have learned how to master the\n                    art of doing nothing by providing massive amounts of whitespace and generic content that\n                    can seem massive, monolithic and worth your attention.\n                </p>\n                <Button as='a' size='large'>\n                    Read More\n                </Button>\n\n                <Divider\n                    as='h4'\n                    className='header'\n                    horizontal\n                    style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n                >\n                    <a href='#'>Case Studies</a>\n                </Divider>\n\n                <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                    Did We Tell You About Our Bananas?\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\n                    it's really true. It took years of gene splicing and combinatory DNA research, but our\n                    bananas can really dance.\n                </p>\n                <Button as='a' size='large'>\n                    I'm Still Quite Interested\n                </Button>\n            </Container>\n        </Segment>\n\n    </ResponsiveContainer>\n)\n\nexport default Homepage","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport { logout } from '../../store/actions/Auth'\nimport { Grid, Container, Segment, Header, Menu } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\n\n\nconst AccountDashboard = () => {\n    const [user, setUser] = useState({})\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(true)\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n  \n    if (loaded) {\n        return (\n            <div class=\"outer-semantic\">\n                <Segment placeholder className=\"outer-semantic\">\n                    <Container text textAlign=\"center\">\n                        <Grid container divided textAlign=\"center\" >\n                            {/* <Grid.Row> */}\n                                {/* <Grid.Column width={8}> */}\n                                <Container content>\n                                    <Header as=\"h3\">Account</Header>\n                                    <Menu vertical fluid>\n                                        <Menu.Item\n                                            onClick={() => history.push(\"/user-admin/change-email/\", { user: user, previousLocation: \"/admin/change-email/\"})}\n                                            active={history.location.pathname === \"/user-admin/change-email/\"}\n                                            name=\"change-email\">\n                                            Change Email\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/user-admin/change-password/\", { user: user, previousLocation: \"/admin/change-password/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-password/\"}\n                                            name=\"change-password\">\n                                            Change Password\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/user-admin/change-account-info/\", { user: user, previousLocation: \"/admin/change-info/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                            name=\"change-account-info\">\n                                            Change Account Info\n                                        </Menu.Item>\n                                        { user.is_superuser ? <Menu.Item onClick={() => history.push(\"/admin/\")}\n                                            active={history.location.pathname === \"/admin/\"}\n                                            name=\"change-account-info\">\n                                            Admin\n                                        </Menu.Item> : null}\n                                        <Menu.Item onClick={() => dispatch(logout())}\n                                            name=\"logout\">\n                                            Logout\n                                        </Menu.Item>\n                                    </Menu>\n                                </Container>\n                                {/* </Grid.Column> */}\n                            {/* </Grid.Row> */}\n                        </Grid>\n                    </Container>\n                </Segment>\n            </div>\n        )\n    } else {\n        return(\n            <Segment vertical>\n                <Container>\n                    <Grid container stackable=\"true\" verticalAlign='top' divided columns={2}>\n                        <Grid.Column width={4}>\n                            Loading\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n    }\n}\n\nexport default AccountDashboard","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\n\nimport axios from 'axios'\n\nimport jwtDecode from 'jwt-decode';\nimport Shell from '../../containers/Account/Shell';\n\n\n\n\nconst ChangePassword = (props) => {\n    const [newPassword, setNewPassword] = useState(\"\")\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [error, setError] = useState({})\n    const [successMessage, setSuccessMessage] = useState(null)\n    const { register, handleSubmit } = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n\n\n\n    const onSubmit = data => {\n        const oldPassword = data.oldPassword\n        const new_password = data.new_password1\n        const newPassword2 = data.new_password2\n        if (new_password !== '' || newPassword2 !== '' || oldPassword) {\n            if (new_password === newPassword2) {\n                    setLoading(true)\n                    const backendData = { old_password: oldPassword, new_password: new_password }\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    // axios.patch(`${url}/api/change-password/`, backendData)\n                    axios.patch(`/api/change-password/`, backendData)\n                        .then(resp => {\n                            setSuccessMessage(\"You have successfully changed the password!\")\n                            setError({})\n                        })\n                        .catch(err => {\n                            setError(\"Woops seems like something went wrong. Did you enter the correct current password?\")\n                            setSuccessMessage(null)\n                        })\n                    setLoading(false)\n            } else {\n                setError(\"Passwords don't match!\")\n                setSuccessMessage(null)\n            }\n        } else {\n            setError(\"Fields are empty!\")\n            setSuccessMessage(null)\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null} success={successMessage !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Password</Table.HeaderCell>\n                            <Table.HeaderCell>New Password</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Password: </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field>\n                                    <label>Current Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Current Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"oldPassword\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                <Form.Field>New Password</Form.Field>\n                            </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"New Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"new_password1\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Password\"\n                                        defaultValue={confirmPassword}\n                                        dependencies={[\"newPassword\"]}\n                                        type=\"password\"\n                                        name={\"new_password2\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                {successMessage && (<Message success heading=\"Success\" content={successMessage} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n\n\nexport default ChangePassword","import React, { useEffect, useState } from 'react'\nimport { Form, Message, \n        Button,Table, \n    } from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\nimport { confirmAlert, alert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport Shell from '../../containers/Account/Shell';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../../store/actions/Auth'\n\n\nconst ChangeAccountInfo = (props) => {\n    const [user, setUser] = useState({})\n    const history = useHistory()\n    const [error, setError] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n\n    const onSubmit = data => {\n        setLoading(true)\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`/api/users/${user.id}/`, data)\n            .then(resp => {\n                setUser(resp.data)\n                // history.go()\n            })\n            .catch(err => {\n                setError(err.Message)\n            })\n        setLoading(false)\n    }\n\n    const onDelete = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: `Are you sure you want to delete your account ${user.first_name} ${user.last_name}? This is permenant and there is no coming back.`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`/api/users/${user.id}/`)\n                            // .then(resp => console.log(resp))\n                            .then(() => actions.logout())\n                            .then(() => history.push('/login/'))\n                            .then( () => history.go(0))\n                            .catch(error => console.log(error))\n                    }\n                }\n                ,\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n    if (user) {\n        return (\n            <Shell>\n                <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                    <Table striped inverted textAlign=\"center\">\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n    \n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">First Name: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.first_name}\n                                            type=\"text\"\n                                            name={\"first_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                \n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Middle Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"middle_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update middle Name: ${user.middle_name}`}\n                                            defaultValue={user.middle_name}\n                                            type=\"text\"\n                                            name={\"middle_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Last Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"last_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Last Name: ${user.last_name}`}\n                                            defaultValue={user.last_name}\n                                            type=\"text\"\n                                            name={\"last_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"preferred_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Preferred Name: ${user.preferred_name}`}\n                                            defaultValue={user.preferred_name}\n                                            type=\"text\"\n                                            name={\"preferred_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Phone Number: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"phone_number\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Phone Number: ${user.phone_number}`}\n                                            defaultValue={user.phone_number}\n                                            type=\"text\"\n                                            name={\"phone_number\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">LinkedIn: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field name=\"LinkedIn\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update LinkedIn: ${user.linkedin}`}\n                                            defaultValue={user.linkedin}\n                                            type=\"text\"\n                                            name={\"linkedin\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Github: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"github\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Github: ${user.github}`}\n                                            defaultValue={user.github}\n                                            type=\"text\"\n                                            name={\"github\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Portfolio Website: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"portfolioWebsite\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Portfolio Website: ${user.portfolio_website}`}\n                                            defaultValue={user.portfolio_website}\n                                            type=\"text\"\n                                            name={\"portfolio_website\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Street Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Street Address: ${user.street_address}`}\n                                            defaultValue={user.street_address}\n                                            type=\"text\"\n                                            name={\"street_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">City Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update City Address: ${user.city_address}`}\n                                            defaultValue={user.city_address}\n                                            type=\"text\"\n                                            name={\"city_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">State Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update State Address: ${user.state_address}`}\n                                            defaultValue={user.state_address}\n                                            type=\"text\"\n                                            name={\"state_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Zip Code: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Zip Code: ${user.zip_code}`}\n                                            defaultValue={user.zip_code}\n                                            type=\"text\"\n                                            name={\"zip_code\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n    \n                        <Table.Footer>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan='2'textAlign=\"center\">\n                                    {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                    <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                </Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Form>\n                <br></br>\n                <Form onSubmit={handleSubmit(onDelete)} error={error !== null}>\n                    <Button type=\"submit\" negative>Delete Account</Button>\n                    {error.length && (<Message error heading=\"There was an error deleting your account. Please try again later.\" content={error} />)}\n                </Form>\n            </Shell>\n        )\n    } else {\n        history.push('/user-admin/')\n    }\n\n}\n\n\nexport default ChangeAccountInfo","import React, { useState } from 'react'\nimport {\n    Form, Message,\n    Button, Grid,\n    Segment, Table, \n} from 'semantic-ui-react'\nimport { Prompt, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios'\n\nimport jwtDecode from 'jwt-decode';\n\nconst AccountDetailsForm = () => {\n    const history = useHistory()\n    const [requiredFields, setRequiredFields] = useState({})\n    const [errorMessage, setErrorMessage] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    \n    \n    // const dispatch = useDispatch()\n    // window.onbeforeunload = handleChangePages()\n    \n    // const handleChangePages = (e) => {\n    //     if (requiredFields) {\n    //         return null\n    //     } else {\n    //         const message = 'You need to fill in First and Last Name at the minimum.';\n    //         e.returnValue = message;\n    //         return message;\n    //     }\n    // }\n\n    const onSubmit = data => {\n        const navBar = document.getElementsByClassName(\"nav-bar\")[0]\n        navBar.style.display = null\n        setLoading(true)\n        const accessToken = localStorage.getItem('access_token')\n        const userId = jwtDecode(accessToken).user_id\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`/api/users/${userId}/`, data)\n            .then(() => {\n                history.push(\"/all-jobs/\")\n                setRequiredFields(data)\n            })\n            .catch(err => {\n                setErrorMessage(err.Message)\n            })\n        \n        setLoading(false)\n\n    }\n\n    return (\n        <div className=\"login-form\">\n            <Segment placeholder>\n                <Grid stackable=\"true\" >\n                    <Grid.Column stackable={true}>\n                        <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                            <Table striped inverted textAlign=\"center\">\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>Account Info</Table.HeaderCell>\n                                        <Table.HeaderCell> </Table.HeaderCell>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`**First Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"first_name\"}\n                                                        ref={register()}\n                                                        style={{ fontWeight: \"bolder\" }}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Middle Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"middle_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`**Last Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"last_name\"}\n                                                        ref={register()}\n                                                        style={{fontWeight: \"bolder\"}}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Preferred Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"preferred_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Cover Letter Information </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field name=\"phone_number\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Phone Number:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"phone_number\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"LinkedIn\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`LinkedIn:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"linkedin\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"github\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Github:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"github\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"portfolioWebsite\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Portfolio Website:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"portfolio_website\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Address: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Street Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"street_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`City Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"city_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`State Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"state_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Zip Code:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"zip_code\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Footer>\n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                            {errorMessage.length && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                            <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Footer>\n                            </Table>\n                        </Form>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </div>\n\n    );\n};\n\nexport default AccountDetailsForm","import React, {useCallback, useState } from 'react'\nimport * as actions from '../../../store/actions/Auth'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    Form, Message,Button, \n    Grid, Segment, Table,  Divider\n} from 'semantic-ui-react'\n\n// import {\n//     Form,\n//     Input,\n//     Select,\n//     Button,\n// } from 'antd';\nimport { Nav } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\n\nconst RegistrationForm = () => {\n    const history = useHistory()\n    const [loading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const props = useSelector(state => (\n        {\n            ...state,\n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const { register, handleSubmit } = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        ({ ...values }) => dispatch(actions.authSignUp(values, setErrorMessage, true, history))\n    )\n    const onSubmit = (values) => {\n        const data = {...values}\n        const passwordCheck = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n       if (data.password === data.confirm_password) {\n            if (data.password.length > 5) {\n                if (data.password.match(passwordCheck)){\n                    onAuth(data)\n                } else {\n                    setErrorMessage(\"Password needs to contain at least one numeric digit, one uppercase and one lowercase letter\")\n                }\n            } else {\n                setErrorMessage(\"Password needs to be greater than 5 characters\")\n            }\n       } else {\n           setErrorMessage(\"Passwords don't match!\")\n       }\n        // history.push('/')\n    };\n\n\n    return (\n        <div className=\"login-form\">\n            <Segment size=\"large\">\n                <Segment placeholder inverted>\n                    <Grid stackable=\"true\" >\n                        <Grid.Column stackable>\n                            <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                                <Table striped inverted textAlign=\"center\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Username: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Username:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"username\"}\n                                                        ref={register()}\n                                                        minLength={4}\n                                                        maxLength={20}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Email: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Email:`}\n                                                        defaultValue={\"\"}\n                                                        autoComplete=\"new-email\"\n                                                        type=\"email\"\n                                                        name={\"email\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Password: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`Password:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"password\"\n                                                        autoComplete=\"new-password\"\n                                                        name={\"password\"}\n                                                        minLength={6}\n                                                        maxLength={20}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Confirm Password: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`Confirm Password:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"password\"\n                                                        autoComplete=\"new-password\"\n                                                        minLength={6}\n                                                        maxLength={20}\n                                                        name={\"confirm_password\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                    <Table.Footer>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                                {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                            </Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Footer>\n                                </Table>\n                            </Form>\n                        </Grid.Column>\n                    </Grid>\n                    <Divider horizontal inverted>Or</Divider>\n                    <Grid.Column verticalAlign='middle'>\n                        <Button content='Login' icon='signup' size='medium' onClick={() => history.push(\"/login\")}/>\n                    </Grid.Column>\n                </Segment>\n            </Segment>\n        </div>\n    );\n};\n\nexport default RegistrationForm","import React from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\nimport JobListView from './containers/job_container/JobListView'\nimport JobDetailView from './containers/job_container/JobDetailView'\nimport CoverLetterView from './containers/forms/CoverLetterView'\nimport Login from './containers/forms/Login'\nimport ChangeEmail from './components/Account/ChangeEmail'\nimport HomePage from './components/homepage/homepage'\nimport AccountDashboard from './containers/Account/accountDashboard'\nimport ChangePassword from './components/Account/ChangePassword'\nimport ChangeAccountInfo from './components/Account/ChangeAccountInfo'\nimport AccountDetailsForm from './containers/forms/signUpForms/SignUpDetails'\nimport RegistrationForm from './containers/forms/signUpForms/SignupInitial'\n\n\nconst PrivateRoute = ({components: Component, ...rest}) => {\n    const authenticated = localStorage.getItem(\"access_token\") !== null\n    return (\n        authenticated === true ? \n        <Route {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/login\"/>\n    )\n    \n}\nconst NeedUserCredentials = ({components: Component, ...rest}) => {\n    const state = useHistory().location.state\n    return (\n        state !== undefined ? \n        <PrivateRoute {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/user-admin/\"/>\n    )\n}\n\n\n\nconst BaseRouter = (props) => (\n    <div>\n        <Switch>\n            <PrivateRoute exact path='/job/form/' component={CoverLetterView}/>\n            <PrivateRoute exact path='/job/:jobID/' component={JobDetailView}/>\n            <PrivateRoute exact path='/all-jobs/' component={JobListView}/>\n            <PrivateRoute exact path='/signup-user-details/' component={AccountDetailsForm}/>\n            <NeedUserCredentials exact path='/user-admin/change-email/' component={ChangeEmail} {...props}/>\n            <NeedUserCredentials exact path='/user-admin/change-password/' component={ChangePassword} {...props}/>\n            <NeedUserCredentials exact path='/user-admin/change-account-info/' component={ChangeAccountInfo} {...props}/> */}\n            <PrivateRoute exact path='/user-admin/' component={AccountDashboard} />\n            <Route exact path='/signup/' component={RegistrationForm}/>\n            <Route exact path='/login/' component={Login}/>\n            <Route exact path='' component={HomePage}/>\n            <Route path='/' component={HomePage}/>\n        </Switch>\n    </div>\n)\n\n\n\nexport default BaseRouter","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    // componentDidCatch(error, errorInfo) {\n    //     // You can also log the error to an error reporting service\n    //     logErrorToMyService(error, errorInfo);\n    // }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","import { \n  Navbar, \n  Nav, \n  NavDropdown, \n} from 'react-bootstrap';\nimport React, { useCallback, useEffect, useState, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../../../store/actions/Auth'\nimport ErrorBoundary from '../../../store/ErrorBoundary';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport rg4js from 'raygun4js';\n\n\n\nconst Header = () => {\n  let history = useHistory()\n  const [user, setUser] = useState({})\n  const props = useSelector(state => (\n    {\n      ...state,\n      isAuthenticated: localStorage.getItem('access_token') !== null,\n      loading: state.loading,\n      error: state.error\n    }))\n  \n  const dispatch = useDispatch()\n\n  const logout = () => {\n    try {\n      history.push('/login/')\n      dispatch(actions.logout())\n    } catch (e) {\n      alert('unable to logout')\n    }\n  }\n\n  const accessToken = localStorage.getItem('access_token')\n  const refresh_token = localStorage.getItem('refresh_token')\n  const userId = accessToken !== null ? jwtDecode(accessToken).user_id : null\n\n  useEffect(() => {\n    props.loading = true\n    axios.defaults.headers = {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    }\n    if (userId) {\n      axios.get(`/api/users/${userId}/`)\n        .then(resp => {\n          setUser(resp.data)\n          rg4js('setUser', {\n            identifier: `${resp.data.username}`,\n            isAnonymous: false,\n            email: `${resp.data.email}`,\n            firstName: `${resp.data.first_name}`,\n            fullName: `${resp.data.first_name} ${resp.data.last_name}`\n          })\n          props.loading = false\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }, [props.isAuthenticated])\n\n  return  (\n    <div>\n      {props.isAuthenticated ? LoggedInNav(props, logout, user) : loggedOutNav(props, logout)}\n    </div>\n  )\n}\n\n\n\nexport default Header\n\nconst LoggedInNav = (props, logout, user) => {\n  if (!props.loading) {\n    return(\n      <Navbar bg=\"light\" expand=\"lg\" className=\"nav-bar\" sticky={true}>\n        <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\n            <Nav.Link href=\"/all-jobs/\">All Jobs</Nav.Link>\n            <Nav.Link href=\"/job/form/\">Cover Letter Form</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Header>Welcome {user.preferred_name ? user.preferred_name : user.first_name}</NavDropdown.Header>\n              <NavDropdown.Item href=\"/user-admin/\">Account</NavDropdown.Item>\n              {\n                user.is_superuser ? \n                <NavDropdown.Item href=\"/admin/\">Admin</NavDropdown.Item> :\n                null\n              }\n              <NavDropdown.Divider />\n              <ErrorBoundary>\n                <NavDropdown.Item onClick={() => logout()}>Logout</NavDropdown.Item>\n              </ErrorBoundary>\n            </NavDropdown>\n          </Nav>\n          {/* <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"outline-success\">Search</Button>\n            </Form> */}\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  } else {\n    return (\n      <Header>Loading</Header>\n    )\n  }\n}\n\n\nconst loggedOutNav = () => (\n  < Navbar bg=\"light\" expand=\"lg\" className=\"text-center\" >\n    <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/login/\">Login</Nav.Link>\n        <Nav.Link href=\"/signup/\">Sign Up</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar >\n)\n\n\n  ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Container,\n    Grid,\n    Header,\n    List,\n    Segment,\n} from 'semantic-ui-react'\n\n\nconst FooterPage = () => {\n    return (\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n            <Container>\n                <Grid divided inverted stackable>\n                    <Grid.Row>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='Creator' />\n                            <List link inverted>\n                                <List.Item href='http://macallan.space/' target=\"_blank\">Personal Portfolio</List.Item>\n                                <List.Item href='https://github.com/Micjoey' target=\"_blank\">Github</List.Item>\n                                <List.Item href='https://www.linkedin.com/in/macallan-savett/' target=\"_blank\">LinkedIn</List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='About' />\n                            <List link inverted>\n                                <List.Item as='a'>About</List.Item>\n                                <List.Item as='a'>FAQ</List.Item>\n                                <List.Item as='a'>How To Access</List.Item>\n                                {/* <List.Item as='a'>Favorite X-Men</List.Item> */}\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={7}>\n                            <Header as='h4' inverted>\n                                Footer Header\n                            </Header>\n                            <p>\n                                Any suggestions or comments please send to\n                            </p>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Segment>\n    );\n}\n\nexport default FooterPage;","import BaseRouter from './routes'\nimport { BrowserRouter as Router}  from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport './css/App.css';\nimport Header from './containers/Banners/Header/NavBar';\nimport FooterPage from './containers/Banners/Footer/FooterBar';\nimport {\n  Container, Segment,\n} from 'semantic-ui-react'\nimport { createBrowserHistory } from 'history';\nimport rg4js from 'raygun4js';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  const props = useSelector(state => ({ ...state, isAuthenticated: localStorage.getItem('access_token') !== null}))\n  history.listen((location, action) => {\n    rg4js('trackEvent', { type: 'pageView', path: location.pathname });\n  });\n  return (\n    <Segment inverted>\n      {/* <Container> */}\n        <div className=\"App\">\n          <header className=\"App-header\">\n              <Router>\n                <Header {...props}/>\n                <BaseRouter/> \n                <FooterPage/>\n              </Router>\n          </header>\n        </div>\n      {/* </Container> */}\n    </Segment>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/ActionTypes'\nimport { updateObject } from '../utility'\n\nconst initialState = {\n    token: null,\n    access_token: null,\n    refresh_token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        access_token: action.access_token,\n        refresh_token: action.refresh_token,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        access_token: null,\n        refresh_token: null,\n        token: null,\n    })\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: \n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: \n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: \n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: \n            return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducers/auth'\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux'\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}