{"version":3,"sources":["components/jobInfo/AllJobs.js","components/pagination/Pagination.js","components/FieldChoices.js","components/cover_letter/CoverLetterForm.js","store/axiosApi.js","store/actions/ActionTypes.js","store/actions/Auth.js","components/cover_letter/templates/NonTechnicalCoverLetter.js","components/cover_letter/templates/StandardJobTemplate.js","components/cover_letter/templates/TriplebyteCoverLetter.js","containers/cover_letters/determineCoverLetterFormat.js","containers/forms/CoverLetterView.js","containers/job_container/JobListView.js","components/jobInfo/formattedData.js","components/jobInfo/JobDetail.js","containers/cover_letters/CoverLetterDisplayContainer.js","components/cover_letter/UpdateCoverLetter.js","containers/job_container/JobDetailView.js","containers/forms/Login.js","containers/Account/Shell.js","components/Account/ChangeEmail.js","components/homepage/homepage.js","containers/Account/accountDashboard.js","components/Account/ChangePassword.js","components/Account/ChangeAccountInfo.js","containers/forms/signUpForms/SignUpDetails.js","containers/forms/signUpForms/SignupInitial.js","components/Account/SetDefaultFormValues.js","containers/Account/PreferredDetailsContainer.js","routes.js","store/ErrorBoundary.js","containers/Banners/Header/NavBar.js","containers/Banners/Footer/FooterBar.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["Jobs","props","allJobs","Object","values","jobs","ListGroup","map","job","href","id","Item","style","minHeight","position_title","company","Pagination","pageIndex","total","perPage","onNext","onPrevious","setAllJobs","setNext","setOnPrevious","setPageIndex","lastPage","Math","ceil","previous","onClick","previousPage","next","nextPage","home","goHome","axios","get","then","res","data","results","className","job_template_choices","key","value","text","job_stages","JobForm","history","useHistory","useForm","reValidateMode","handleSubmit","register","watch","errors","useState","localStorage","getItem","accessToken","handleChange","e","name","setFormVariables","prevState","specificDropDown","nameOfDropdown","nameOfDropdownTwo","Container","Segment","inverted","Form","onSubmit","defaults","headers","Authorization","post","push","catch","as","content","fontSize","fontWeight","textAlign","Button","secondary","confirmAlert","title","message","buttons","label","Select","fluid","required","placeholder","options","onChange","defaultValue","job_stage","Input","type","recruiter","Popup","trigger","job_posting_website","link","TextArea","description","Grid","container","columns","padded","verticalAlign","centered","Row","Column","pre_bullet_point_paragraph_one","pre_bullet_point_paragraph_two","top_skills","bullet_point_one","bullet_point_two","bullet_point_three","bullet_point_four","bullet_point_five","bullet_point_six","bullet_point_seven","bullet_point_eight","primary","axiosInstance","create","baseURL","timeout","interceptors","response","use","error","originalRequest","config","undefined","status","statusText","refresh_token","access_token","refresh","setItem","access","err","authCheckState","Promise","reject","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","authStart","actionTypes","authSuccess","token","authFail","logout","removeItem","authLogin","username","password","setErrorState","justSignedUp","rg4js","identifier","isAnonymous","dispatch","document","getElementsByClassName","display","expirationTime","expirationDate","Date","getTime","setTimeout","NonTechnicalCoverLetter","user","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","email","linkedin","github","portfolio_website","phone_number","preferred_name","last_name","first_name","StandardCoverLetter","post_bullet_point_paragraph_one","post_bullet_point_paragraph_two","TriplebyteCoverLetter","determineCoverLetter","coverLetter","CoverLetterView","setUser","userId","jwtDecode","user_id","city","formVariables","useSelector","state","isAuthenticated","loading","useEffect","resp","firstName","fullName","formValues","updatedFormVariables","assign","stackable","JobList","jobProps","setJobProps","isLoaded","loaded","setLoaded","count","setCount","actions","length","formattedJobData","jobDetail","paramsJobId","jobDetailKeys","keys","dataFields","delete","console","log","to","CoverLetterChoiceContainer","template_choices","currentCoverLetterChoice","setCurrentCoverLetterChoice","defaultValues","template_choice","SegmentGroup","ref","idx","offset","UpdateJobForm","updatedJob","updateJob","vertical","List","divided","selection","put","window","location","reload","Label","color","horizontal","requiwhite","width","JobDetailView","setJob","setUserId","useParams","jobID","belongs_to_user","alert","reveal","JobDetail","divToHide","button","div","coverLetterButton","getElementById","innerText","replace","buttonTxt","includes","backgroundColor","Login","setLoading","useDispatch","onAuth","useCallback","setErrorMessage","errorMessage","size","minWidth","relaxed","Message","heading","Field","icon","autoComplete","disabled","Divider","Shell","Menu","active","pathname","previousLocation","children","ChangeEmail","newEmail","confirmEmail","setError","patch","Table","striped","Header","HeaderCell","Body","Cell","dependencies","Footer","colSpan","HomepageHeading","mobile","marginBottom","marginTop","Icon","DesktopContainer","hideFixedMenu","setState","fixed","showFixedMenu","this","Visibility","once","onBottomPassed","onBottomPassedReverse","padding","Component","ResponsiveContainer","Homepage","AccountDashboard","class","is_superuser","ChangePassword","newPassword","confirmPassword","successMessage","setSuccessMessage","oldPassword","new_password","new_password1","newPassword2","new_password2","backendData","old_password","success","ChangeAccountInfo","middle_name","street_address","city_address","state_address","zip_code","go","negative","AccountDetailsForm","RegistrationForm","password1","password2","confirm_password","match","minLength","maxLength","SetDefaultFormValue","newValues","setNewValues","defaultInfo","default_info","updatedUser","PreferredDetailsContainer","setdefaultInfo","PrivateRoute","components","rest","render","NeedUserCredentials","BaseRouter","exact","path","component","JobListView","HomePage","ErrorBoundary","hasError","React","LoggedInNav","loggedOutNav","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","FooterPage","target","createBrowserHistory","App","listen","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM"],"mappings":"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","file":"static/js/main.86fdcec6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { ListGroup } from 'react-bootstrap'\n\n\nconst Jobs = props => {\n    const allJobs = Object.values(props.jobs)\n    \n    return (\n        <ListGroup>\n           {allJobs.map(job => (\n               <a href={`/job/${job.id}`} key={job.id}>\n                   <ListGroup.Item style={{minHeight: \"fit-content\"}}>\n                       {job.position_title} - {job.company}\n                   </ListGroup.Item>\n               </a>  \n           ))}\n        </ListGroup>\n    );\n};\n\n\nexport default Jobs;","import axios from 'axios'\n;\nimport React, { useEffect } from 'react';\n\n\nexport default function Pagination(props) {\n    const { pageIndex, total, perPage, onNext, onPrevious, setAllJobs, setNext, setOnPrevious, setPageIndex } = props;\n    const lastPage = Math.ceil(total / perPage);\n    const previous = pageIndex > 1 ? (<button onClick={() => previousPage()}>Previous</button>) : null;\n    const next = pageIndex < lastPage ? (<button onClick={() => nextPage()}>Next</button>) : null;\n    const home = pageIndex > 1 ? (<button onClick={() => goHome()}>Home</button>) : null;\n\n    const nextPage = () => {\n        axios.get(onNext)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex+1)\n            })\n    }\n\n    const previousPage = () => {\n        axios.get(onPrevious)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(pageIndex - 1)\n            })\n    }\n\n    const goHome = () => {\n        axios.get(`api/jobs/`)\n            .then(res => {\n                setAllJobs(res.data.results)\n                setNext(res.data.next)\n                setOnPrevious(res.data.previous)\n                setPageIndex(1)\n            })\n    }\n\n    return (\n        <div className=\"Pagination\">\n            <div className=\"Pagination-actions\">\n                {previous}\n                {home}\n                {next}\n            </div>\n            <div className=\"Pagination-stats\">\n                Page {pageIndex} of {lastPage}\n                &nbsp;(displaying {perPage} items per page)\n            </div>\n        </div>\n    );\n}\n","export const job_template_choices = [\n    { key: 'non-technical-cover-letter', value: 'non-technical-cover-letter', text: 'Non-technical Cover Letter' },\n    { key: 'Triplebyte (message-version)', value: 'Triplebyte (message-version)', text: 'Triplebyte (message-version)' },\n    { key: 'Standard Job Template', value: 'Standard Job Template', text: 'Standard Job Template' },\n    // 'cover-letter-4': 'Template 4',\n    // 'cover-letter-5': 'Template 5',\n]\n\nexport const job_stages = [\n    { key: 'Initial', value: 'Initial', text: 'Initial' },\n    { key: 'Accepted', value: 'Accepted', text: 'Accepted' },\n    { key: 'Rejected', value: 'Rejected', text: 'Rejected' },\n    { key: 'No Response', value: 'No Response', text: 'No Response' },\n\n]","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Container, Form, Grid, Header, Input, Popup, Segment, Select } from \"semantic-ui-react\";\nimport { job_template_choices, job_stages } from \"../FieldChoices\";\nimport { confirmAlert } from \"react-confirm-alert\";\n\n\nexport const JobForm = (props) => {\n    const job = props.job\n    const history = useHistory()\n    const { register, watch, errors, handleSubmit} = useForm({\n        reValidateMode: 'onChange'\n    })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const handleChange = (e, { name, value }) => {\n        props.setFormVariables(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    const areYouSure = () => {\n        confirmAlert({\n            title: `You sure?`,\n            message: `If you leave now you will lose any information you have in your fields.\n             You can also set your default values in your Account page in the top right.`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => history.push('/default-form-values/')\n                }\n                ,\n                {\n                    label: 'No',\n                },\n            ]\n        })\n    }\n    \n    const onSubmit = () => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.post('/api/jobs/', job)\n            .then(res => history.push(`/job/${res.data.id}`, {...res.data.id}))\n            .catch(errors => \n                {\n                    // {console.log(errors)}\n                }\n            )\n    };\n    const specificDropDown = (nameOfDropdown, nameOfDropdownTwo = null) => {\n        return job.job_template_choices === nameOfDropdown || job.job_template_choices === nameOfDropdownTwo\n    }\n\n        \n\n    return (\n        <Container>\n            <Segment inverted>\n                <Form onSubmit={handleSubmit(onSubmit)} >\n                    <Header\n                        as='h3'\n                        content='Create Cover Letter'\n                        inverted\n                        style={{\n                            fontSize: '4em',\n                            fontWeight: 'normal',\n                        }}\n                        textAlign=\"center\"\n                    />\n                    <Button secondary onClick={() => areYouSure()}>Set Default Values</Button>\n                    <br/>\n                    <Form.Select\n                        fluid\n                        required\n                        placeholder=\"Choose Template\" \n                        options={job_template_choices} \n                        name=\"job_template_choices\"\n                        onChange={handleChange}\n                        defaultValue={job.job_template_choices}\n                    />\n                    <Form.Select \n                        placeholder=\"Choose Job Stage\" \n                        options={job_stages}\n                        name=\"job_stage\"\n                        onChange={handleChange}\n                        defaultValue={job.job_stage}\n                    />\n                    <Form.Input \n                        type=\"text\" \n                        placeholder={job.position_title ? job.position_title : \"**Position Title**\"}\n                        name=\"position_title\"\n                        onChange={handleChange}\n                        defaultValue={job.position_title}\n                        required\n                    />\n                    <Form.Input \n                        type=\"text\" \n                        placeholder={job.company ? job.company : \"**Company Applying To**\"}\n                        name=\"company\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <Form.Input \n                        type=\"text\" \n                        placeholder={job.recruiter ? job.recruiter : \"Recruiter's Name\"}\n                        name=\"recruiter\"\n                        onChange={handleChange}\n                    />\n                    <Popup\n                        content={`I.e LinkedIn or Google. It will default to the ${job.company}.`}\n                        trigger={\n                        <Form.Input \n                            type=\"text\" \n                            placeholder={job.job_posting_website ? job.job_posting_website : \"Hosting Website\"}\n                            name=\"job_posting_website\"\n                            onChange={handleChange}\n                            defaultValue={job.job_posting_website}\n                        />}\n                    />\n                    <Popup\n                        content=\"Web Url link\"\n                        trigger={\n                        <Form.Input \n                            type=\"text\" \n                            placeholder={job.link ? job.link : \"**Link for Job Post**\"}\n                            name=\"link\"\n                            onChange={handleChange}\n                            required\n                        />}\n                    />\n                    <Form.TextArea \n                        type=\"text\" \n                        placeholder={job.description ? job.description : \"Description of Job Post\"}\n                        name=\"description\"\n                        onChange={handleChange}\n                    />\n                    <Grid container columns=\"equal\" padded=\"vertically\" verticalAlign=\"middle\" centered>\n                        <Grid.Row>\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") ?\n                                <Grid.Column>\n                                        <Popup\n                                            content=\"This field fulfills the pre-bullet-point paragraph.\"\n                                            trigger={\n                                                <Form.TextArea\n                                                    placeholder={job.pre_bullet_point_paragraph_one ? job.pre_bullet_point_paragraph_one : `Unique Paragraph One `}\n                                                    name=\"pre_bullet_point_paragraph_one\"\n                                                    onChange={handleChange} \n                                                    defaultValue={job.pre_bullet_point_paragraph_one}\n                                                />\n                                            } />\n                                </Grid.Column>\n                                    :\n                                    null\n                                }\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.pre_bullet_point_paragraph_one || job.pre_bullet_point_paragraph_two)  ?\n                                <Grid.Column>\n                                        <Popup\n                                            content=\"This field fulfills the SECOND pre-bullet-point paragraph.\"\n                                            trigger={\n                                                <Form.TextArea\n                                                    placeholder={job.pre_bullet_point_paragraph_two ? job.pre_bullet_point_paragraph_two : `Unique Paragraph Two `}\n                                                    name=\"pre_bullet_point_paragraph_two\"\n                                                    onChange={handleChange} \n                                                    defaultValue={job.pre_bullet_point_paragraph_two}\n                                                />\n                                            } />\n                                </Grid.Column>\n                                    :\n                                    null\n                                }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") ?\n                                <Grid.Column>\n                                    <Popup\n                                        content=\"Fill in the YOUR skills that match the JOBS description.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder={job.top_skills ? job.top_skills : `**Top skills related to job**`}\n                                                name=\"top_skills\"\n                                                onChange={handleChange}\n                                                defaultValue={job.top_skills}\n                                                required\n                                            />\n                                        } />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.top_skills || job.bullet_point_one) ?\n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_one ? job.bullet_point_one : `Second Bullet Point `}\n                                            name=\"bullet_point_one\"\n                                            onChange={handleChange} \n                                            defaultValue={job.bullet_point_one}\n                                        />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.bullet_point_one || job.bullet_point_two)?\n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_two ? job.bullet_point_two : `Third Bullet Point `}\n                                            name=\"bullet_point_two\"\n                                            onChange={handleChange} \n                                            defaultValue={job.bullet_point_two}\n                                        />\n                                </Grid.Column>\n                                    :\n                                    null\n                                }\n                                {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.bullet_point_two  || job.bullet_point_three)? \n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_three ? job.bullet_point_three : `Fourth Bullet Point `}\n                                            name=\"bullet_point_three\"\n                                            onChange={handleChange}\n                                            defaultValue={job.bullet_point_three}\n                                        /> \n                                </Grid.Column>\n                                    :\n                                    null\n                                }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.bullet_point_three || job.bullet_point_four)?\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={job.bullet_point_five ? job.bullet_point_four : `Fifth Bullet Point `}\n                                        name=\"bullet_point_four\"\n                                        onChange={handleChange} \n                                        defaultValue={job.bullet_point_five}\n                                    />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.bullet_point_four || job.bullet_point_five) ?\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={job.bullet_point_five ? job.bullet_point_five : `Sixth Bullet Point `}\n                                        name=\"bullet_point_five\"\n                                        onChange={handleChange} \n                                        defaultValue={job.bullet_point_five}\n                                    />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.bullet_point_five || job.bullet_point_six) ?\n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_six ? job.bullet_point_six : `Seventh Bullet Point `}\n                                            name=\"bullet_point_six\"\n                                            onChange={handleChange} \n                                            defaultValue={job.bullet_point_six}\n                                        />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.bullet_point_six || job.bullet_point_seven) ?\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={job.bullet_point_seven ? job.bullet_point_seven : `Eigth Bullet Point `}\n                                        name=\"bullet_point_seven\"\n                                        onChange={handleChange} \n                                        defaultValue={job.bullet_point_seven}\n                                    />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n                        </Grid.Row>\n                        <Grid.Row>\n                            {specificDropDown(\"Standard Job Template\", \"Triplebyte (message-version)\") && (job.bullet_point_seven || job.bullet_point_eight) ?\n                                <Grid.Column>\n                                        <Form.TextArea\n                                            placeholder={job.bullet_point_eight ? job.bullet_point_eight : `Ninth Bullet Point `}\n                                            name=\"bullet_point_eight\"\n                                            onChange={handleChange} \n                                            defaultValue={job.bullet_point_eight}\n                                        />\n                                </Grid.Column>\n                                :\n                                null\n                            }\n\n                        </Grid.Row>\n                    </Grid>\n                    <Form.Button primary content=\"Create Cover Letter\"/>\n                    \n                </Form>\n            </Segment>\n        </Container>\n    )\n}\n\n","import axios from 'axios'\n\nimport { authCheckState} from './actions/Auth';\n\nconst axiosInstance = axios.create({\n    baseURL: '',\n    timeout: 3000,\n    headers: {\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\n        'Content-Type': 'application/json',\n        'accept': 'application/json'\n    },\n\n});\n\naxios.interceptors.response.use(response => \n    {\n        return response;\n    }, error => {\n        const originalRequest = error.config;\n        if (error !== undefined && error.response.status === 401 && error.response.statusText === \"Unauthorized\") {\n            const refresh_token = localStorage.getItem('refresh_token');\n            const access_token = localStorage.getItem('access_token');\n            return axiosInstance\n                .post('/api/token/refresh/', { refresh: refresh_token, access_token: access_token })\n                .then(response => {\n                    localStorage.setItem('access_token', response.data.access);\n                    axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    originalRequest.headers['Authorization'] = \"Bearer \" + response.data.access;\n                    return axiosInstance(originalRequest);\n                })\n                .catch(err => {\n                    authCheckState()\n                });\n        }\n        \n        return Promise.reject(error);\n    }, () => {\n        authCheckState()\n    }\n    \n);\n\n\nexport default axiosInstance\n","export const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"","\nimport axios from 'axios'\nimport rg4js from 'raygun4js';\nimport axiosInstance from '../axiosApi'\nimport * as actionTypes from './ActionTypes'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, refresh_token = null) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        access_token: token,\n        refresh_token: refresh_token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user')\n    localStorage.removeItem('access_token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('refresh_token')\n    localStorage.removeItem('token')\n    authCheckState()\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const authLogin = (username, password, setErrorState = null, justSignedUp = false, history = null) => {\n    rg4js('setUser', {\n        identifier: `${username}`,\n        isAnonymous: false,\n    })\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(\"/api/token/\", {\n            username: username,\n            password: password\n        }).then(response => {\n            axiosInstance.defaults.headers['Authorization'] = `Bearer ${response.data.access}`;\n            const token = response.data.access;\n            const refresh_token = response.data.refresh;\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n            \n            dispatch(authSuccess(token, refresh_token));\n            if (justSignedUp) {\n                const navBar = document.getElementsByClassName(\"nav-bar\")[0]\n                navBar.style.display = \"none\"\n                history.push(\"/signup-user-details/\")\n            } else {       \n                history.push(\"/all-jobs/\")\n            }\n        }).catch(err => {\n            if (setErrorState !== null){\n                setErrorState(\"Failed to log in. Try again or sign up.\")\n            }\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const authSignUp = (data, setErrorMessage, justSignedUp, history) => {\n    logout()\n    const username = data.username\n    const password1 = data.password\n    const password2 = data.confirm_password\n    const email = data.email\n    return dispatch => {\n        dispatch(authStart());\n        \n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n        }\n        axios.post(\"/rest-auth/registration/\", {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2,\n        }).then(response => {\n            dispatch(authLogin(username, password1, setErrorMessage, justSignedUp, history))\n            // const token = response.data.token;\n            // // const expirationDate = new Date(new Date().getTime() + 5000 * 1000);\n            // const accessToken = response.data.token;\n            // const refreshToken = response.data.refresh;\n            // localStorage.setItem('access_token', accessToken);\n            // // localStorage.setItem('refresh_token', refreshToken);\n        }).catch(err => {\n            setErrorMessage(\"Either the password was too common (i.e password123), the Username taken, or the Email was. Please try again.\")\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('access_token')\n        const refresh_token = localStorage.getItem('refresh_token')\n        if (token === undefined) {\n            dispatch(logout())\n        } \n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}","\n\n\n\nconst NonTechnicalCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Non Tech Cover Letter</h1>\n                    {/* <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3> */}\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            <div>\n\n                                {user.email ? <p className=\"com\">{user.email}</p> \n                                :\n                                null}\n                                {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a></p> \n                                :\n                                null}\n                                {user.github ? <p><a href={user.github}>{user.github}</a></p> \n                                :\n                                null}\n                                {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a></p> \n                                :\n                                null}\n                            </div>\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter }:</p> \n                                :\n                                <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                Thank you for the opportunity to apply for the {` ${job.position_title} `} \n                                role at your company{job.company ? ` - ${ job.company }` : null}.\n                                After reviewing your job description, it's clear that you're looking\n                                for a candidate that is familiar with\n                                the responsibilities associated with the  \n                                {job.position_title ? ` ${job.position_title} ` : \" \" }\n                                role and can perform them confidently. Given these requirements,\n                                I am confident that I can do the job adeptly and fulfill the above\n                                expectations successfully.\n                            </p>\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <br/>\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title } ` : \" \" }\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email } to arrange a convenient time to chat.\n                            </p>\n                            <br/>\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely, \n                                <br/>\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                :\n                                `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n    \n            </div>\n        )\n    }\n}\n\nexport default NonTechnicalCoverLetter","const StandardCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Standard Letter</h1>\n                    {/* <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3> */}\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n                            {user.email ? <p className=\"com\">{user.email}</p>\n                                :\n                                null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a></p>\n                                :\n                                null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a></p>\n                                :\n                                null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a></p>\n                                :\n                                null}\n                            <br></br>\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter}:</p>\n                                    :\n                                    <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                As advertised on the {job.job_posting_website ? ` ${job.job_posting_website } ` : ` ${ job.company } ` } website, your need for a\n                                {` ${job.position_title} ` } is an excellent match to my background \n                                and career goals. With my strong education and experience, I am \n                                confident I can make an immediate contribution given the opportunity.\n                            </p>\n                            {job.pre_bullet_point_paragraph_one ? <p>{job.pre_bullet_point_paragraph_one}</p> : null}\n                            {job.pre_bullet_point_paragraph_two ? <p>{job.pre_bullet_point_paragraph_two}</p> : null}\n                            {job.top_skills ? <p>Highlights of my qualifications most relevant to your needs include:</p> : null }\n                            {job.top_skills ? <p> * {job.top_skills}</p> : null }\n                            {job.bullet_point_one ? <p> * {job.bullet_point_one }</p> : null }\n                            {job.bullet_point_two ? <p> * {job.bullet_point_two }</p> : null }\n                            {job.bullet_point_three ? <p> * {job.bullet_point_three }</p> : null }\n                            {job.bullet_point_four ? <p> * {job.bullet_point_four }</p> : null }\n                            {job.bullet_point_five ? <p> * {job.bullet_point_five }</p> : null }\n                            {job.bullet_point_six ? <p> * {job.bullet_point_six }</p> : null }\n                            {job.bullet_point_seven ? <p> * {job.bullet_point_seven }</p> : null }\n                            {job.bullet_point_eight ? <p> * {job.bullet_point_eight }</p> : null }\n                            <p>\n                                I am a diligent professional who has been consistently praised\n                                as hard-working by my peers. Throughout my career, I have\n                                developed proven communication, analytical, and teamwork skills,\n                                which I hope to leverage into the\n                                {job.position_title ? ` ${job.position_title} ` : null} role at\n                                {job.company ? ` ${job.company}.` : `your company.`}\n                            </p>\n                            <p>These proven abilities can contribute to {`${job.company} `}'s continued success. I would welcome the opportunity to discuss my background with you in detail and to learn more about your company and its goals. </p>\n                            <br />\n                            {job.post_bullet_point_paragraph_one ? <p>{job.post_bullet_point_paragraph_one}</p> : null}\n                            {job.post_bullet_point_paragraph_two ? <p>{job.post_bullet_point_paragraph_two}</p> : null}\n                            <p>\n                                After reviewing my resume, I hope you will agree that I am a\n                                competent and competitive candidate for the\n                                {job.position_title ? ` ${job.position_title} ` : null}\n                                role. I look forward to elaborating on how my specific skills\n                                and abilities will benefit your organization.\n                                I can be reached at {user.phone_number} or\n                                via email at {user.email} to arrange a convenient time to chat.\n                            </p>\n                            <br />\n                            <p>\n                                Thank you for your consideration and I look forward to hearing from you soon.\n                            </p>\n                            <p>\n                                My résumé is attached and offers additional information about\n                                my specific achievements.\n                            </p>\n                            <p>\n                                Sincerely,\n                                <br />\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                    :\n                                    `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default StandardCoverLetter","const TriplebyteCoverLetter = (props) => {\n    const job = props.job\n    const user = props.user\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    if (user && job) {\n        return (\n            <div className=\"full-cover-letter\">\n                <header>\n                    <h1>Triplebyte Cover Letter</h1>\n                    {/* <h3> Resume Link for tracking - <br /> <a href=\"http://macallan.space/?utm_source=Resume%20Link&utm_medium=link&utm_campaign=Resume%20Link\"> https://bit.ly/2HXrCWl </a> </h3> */}\n                </header>\n                <div>\n                    <div className=\"cover-letter-body\">\n                        <p>{today}</p>\n                        <div>\n\n                            <div>\n                                {job.recruiter ? <p> Dear {job.recruiter}:</p>\n                                    :\n                                    <p> Dear Hiring Manager:</p>}\n                            </div>\n                            <p>\n                                As advertised on the {job.job_posting_website ? ` ${job.job_posting_website} ` : ` ${job.company} `} website, your need for a\n                                {` ${job.position_title} `} is an excellent match to my background\n                                and career goals. With my strong education and experience, I am\n                                confident I can make an immediate contribution given the opportunity.\n                            </p>\n                            {job.pre_bullet_point_paragraph_one ? <p>{job.pre_bullet_point_paragraph_one}</p> : null}\n                            {job.pre_bullet_point_paragraph_two ? <p>{job.pre_bullet_point_paragraph_two}</p> : null}\n                            {job.top_skills ? <p>Highlights of my qualifications most relevant to your needs include:</p> : null}\n                            {job.top_skills ? <p> * {job.top_skills}</p> : null}\n                            {job.bullet_point_one ? <p> * {job.bullet_point_one}</p> : null}\n                            {job.bullet_point_two ? <p> * {job.bullet_point_two}</p> : null}\n                            {job.bullet_point_three ? <p> * {job.bullet_point_three}</p> : null}\n                            {job.bullet_point_four ? <p> * {job.bullet_point_four}</p> : null}\n                            {job.bullet_point_five ? <p> * {job.bullet_point_five}</p> : null}\n                            {job.bullet_point_six ? <p> * {job.bullet_point_six}</p> : null}\n                            {job.bullet_point_seven ? <p> * {job.bullet_point_seven}</p> : null}\n                            {job.bullet_point_eight ? <p> * {job.bullet_point_eight}</p> : null}\n                            <p>\n                                These proven abilities can contribute to the continued success of\n                                {job.company ? ` tour comapny - ${job.company}.` : ` your company.`}\n                            </p>\n                            <br />\n                            {job.post_bullet_point_paragraph_one ? <p>{job.post_bullet_point_paragraph_one}</p> : null}\n                            {job.post_bullet_point_paragraph_two ? <p>{job.post_bullet_point_paragraph_two}</p> : null}\n                            <br />\n                            <p>\n                                Sincerely,\n                                <br />\n                                {user.preferred_name ? `${user.preferred_name} ${user.last_name}`\n                                    :\n                                    `${user.first_name} ${user.last_name}`\n                                }\n                            </p>\n                            <br/>\n                            <br/>\n                            {user.email ? <p className=\"com\">{user.email}</p>\n                                :\n                                null}\n                            {user.linkedin ? <p><a href={user.linkedin}>{user.linkedin}</a></p>\n                                :\n                                null}\n                            {user.github ? <p><a href={user.github}>{user.github}</a></p>\n                                :\n                                null}\n                            {user.portfolio_website ? <p><a href={user.portfolio_website}>{user.portfolio_website}</a></p>\n                                :\n                                null}\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default TriplebyteCoverLetter","import CoverLetter from '../../components/cover_letter/templates/CoverLetter'\nimport NonTechnicalCoverLetter from '../../components/cover_letter/templates/NonTechnicalCoverLetter'\nimport StandardCoverLetter from '../../components/cover_letter/templates/StandardJobTemplate'\nimport TriplebyteCoverLetter from '../../components/cover_letter/templates/TriplebyteCoverLetter'\n\n\nexport const determineCoverLetter = (coverLetter, job, user) => {\n    switch (coverLetter) {\n        case \"non-technical-cover-letter\":\n            return <NonTechnicalCoverLetter job={job} user={user} />\n        // case 'cover-letter':\n        //     return <CoverLetter job={job} user={user}/>\n        case 'Triplebyte (message-version)':\n            return <TriplebyteCoverLetter job={job} user={user}/>\n        case 'Standard Job Template':\n            return <StandardCoverLetter job={job} user={user}/>\n        default:\n            return <NonTechnicalCoverLetter job={job} user={user} />;\n    }\n}","import React, { useEffect, useState, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm'\nimport { Button, Form, Grid, Header, Segment, Select } from 'semantic-ui-react';\nimport { determineCoverLetter } from '../cover_letters/determineCoverLetterFormat';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport rg4js from 'raygun4js';\nimport { useForm } from \"react-hook-form\";\n\nconst CoverLetterView = () => {\n    const [user, setUser] = useState({})\n    const accessToken = localStorage.getItem('access_token')\n    const userId = accessToken !== null ? jwtDecode(accessToken).user_id : null\n    \n    const [formVariables, setFormVariables] = useState({\n        job_template_choices: \"non-technical-cover-letter\",\n        recruiter: '',\n        position_title: '',\n        job_stage: 'Initial',\n        company: '',\n        job_posting_website: '',\n        top_skills: '',\n        city: '',\n        link: '',\n        description: '',\n        pre_bullet_point_paragraph_one: '',\n        pre_bullet_point_paragraph_two: '',\n        top_skills: '',\n        bullet_point_one: '',\n        bullet_point_two: '',\n        bullet_point_three: '',\n        bullet_point_four: '',\n        bullet_point_five: '',\n        bullet_point_six: '',\n        bullet_point_seven: '',\n        bullet_point_eight: '',\n        post_bullet_point_paragraph_one: '',\n        post_bullet_point_paragraph_two: '',\n        belongs_to_user: userId,\n    })\n\n    const props = useSelector(state => (\n        {\n            ...state, \n            isAuthenticated: state.token !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n\n    useEffect(() => {\n        props.loading = true\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        if (userId) {\n            axios.get(`/api/users/${userId}/`)\n                .then(resp => {\n                    setUser(resp.data)\n                    rg4js('setUser', {\n                        identifier: `${resp.data.username}`,\n                        isAnonymous: false,\n                        email: `${resp.data.email}`,\n                        firstName: `${resp.data.first_name}`,\n                        fullName: `${resp.data.first_name} ${resp.data.last_name}`\n                    })\n                    props.loading = false\n                })\n                .catch(err => {\n                    // console.log(err)\n                })\n            axios.get('/api/defaultInfo/')\n                .then(resp => {\n                    const formValues = resp.data.results[0]\n                    const updatedFormVariables = Object.assign({}, formVariables, {...formValues})\n                    setFormVariables(updatedFormVariables)\n                })\n        }\n    }, [])\n\n    return (\n        <Segment placeholder padded=\"very\">\n            <Grid columns={2} stackable>\n                <Grid.Row>\n                    <Grid.Column verticalAlign=\"left\">\n                        <Segment inverted >\n                            <JobForm job={formVariables} setFormVariables={setFormVariables} user={user}/>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column>\n                        {determineCoverLetter(\n                                    formVariables.job_template_choices,\n                                    formVariables,\n                                    user)}\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n    )\n}\n\nexport default CoverLetterView\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport { useHistory } from 'react-router-dom';\n\nimport Jobs from '../../components/jobInfo/AllJobs'\nimport Pagination from '../../components/pagination/Pagination'\nimport { JobForm } from '../../components/cover_letter/CoverLetterForm';\nimport * as actions from '../../store/actions/Auth'\nimport {\n    Container,\n    Header,\n    Segment,\n} from 'semantic-ui-react'\nimport { useSelector } from 'react-redux';\nimport CoverLetterView from '../forms/CoverLetterView';\n\n\nconst JobList = () => {\n    let history = useHistory()\n\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const [jobProps, setJobProps] = useState([])\n    const [allJobs, setAllJobs] = useState([])\n    const [next, setNext] = useState([])\n    const [onPrevious, setOnPrevious] = useState([])\n    const [loaded, setLoaded] = useState({isLoaded: false})\n    const [pageIndex, setPageIndex] = useState(1)\n    const [count, setCount] = useState(0)\n    const props = useSelector(state => (\n        {\n            ...state,\n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n\n    useEffect(() => {\n\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(\"/api/jobs/\")\n        .then( res => {\n            setAllJobs(res.data.results)\n            return res\n        })\n        .then(response => {\n            setAllJobs(response.data.results)\n            setJobProps(response.data)\n            setNext(response.data.next)\n            setCount(response.data.count)\n            setOnPrevious(response.data.previous)\n        })\n        .then(() => {\n            setLoaded({isLoaded: true})\n        })\n        .catch(err => {\n            actions.authCheckState()\n        })\n    }, [])\n    if (loaded.isLoaded && !props.loading) {\n        if (allJobs.length) {\n            return (\n                <Container>\n                    <Segment>\n                        <Header\n                            as='h1'\n                            content='All Jobs'\n                            // inverted\n                            style={{\n                                fontSize: '2em',\n                                // fontWeight: 'normal',\n                                // marginBottom: 0,\n                                // marginTop: '.5em',\n                            }}\n                        />\n                        <Segment style={{fontSize: '2em'}}>\n                            <Jobs jobs={allJobs} jobProps={jobProps} />\n                        </Segment>\n                        <Segment style={{ fontSize: '1em' }}>\n                            <Pagination\n                                pageIndex={pageIndex}\n                                total={count}\n                                perPage={20}\n                                onNext={next}\n                                onPrevious={onPrevious}\n                                setAllJobs={setAllJobs}\n                                setNext={setNext}\n                                setOnPrevious={setOnPrevious}\n                                setPageIndex={setPageIndex}\n                            />\n                        </Segment>\n                    </Segment>\n                </Container>\n            )\n        } else {\n            return (\n                <Container>\n                    <Segment>\n                        <Header\n                            as=\"h1\"\n                            content=\"You haven't applied to any jobs yet!\"\n                        />\n                    </Segment>\n                    <CoverLetterView/>\n                </Container>\n            )\n        }\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobList","export const formattedJobData = {\n    'id': 'Id',\n    'form_creation_date': 'Creation Date',\n    'template_choices': 'Template Choice',\n    'job_stage': 'Job Stage',\n    'choice_of_user': 'Choice of User',\n    'job_posting_website': 'Hosting Job Website',\n    'position_title': 'Position Title',\n    'company': 'Company',\n    'city': 'City',\n    'link': 'Job Link',\n    'recruiter': 'Recruiter',\n    'description': 'Description',\n    'pre_bullet_point_paragraph_one': 'Pre Paragraph One',\n    'pre_bullet_point_paragraph_two': 'Pre Paragraph Two',\n    'top_skills': 'Top Skills',\n    'bullet_point_one': 'Bullet Point One',\n    'bullet_point_two': 'Bullet Point Two',\n    'bullet_point_three': 'Bullet Point Three',\n    'bullet_point_four': 'Bullet Point Four',\n    'bullet_point_five': 'Bullet Point Five',\n    'bullet_point_six': 'Bullet Point Six',\n    'bullet_point_seven': 'Bullet Point Seven',\n    'bullet_point_eight': 'Bullet Point Eight',\n    'post_bullet_point_paragraph_one': 'Post Paragraph One',\n    'post_bullet_point_paragraph_two': 'Post Paragraph Two',\n    'modified_date': 'Modified Date',\n    'created_date': 'Created Date',\n    'belongs_to_user': 'Belongs To User ID',\n}\n\nexport const formattedUserData = {\n    \"first_name\": \"First Name\",\n    \"middle_name\":\"Middle Name\",\n    \"last_name\":\"Last Name\",\n    \"preferred_name\":\"Preferred Name\",\n    \"phone_number\":\"Phone Number Name\",\n    \"linkedin\":\"Linkedin\",\n    \"github\":\"Github\",\n    \"portfolio_website\":\"Portfolio Website\",\n    \"street_address\":\"Stree Address\",\n    \"city_address\":\"City Address\",\n    \"state_address\":\"State Address\",\n    \"zip_code\":\"Zip Code\",\n\n}","import React from \"react\";\nimport {formattedJobData} from \"./formattedData\";\nimport {Link} from 'react-router-dom'\nimport {\n    Header, Container, Segment, \n} from 'semantic-ui-react'\n\nimport axios from 'axios'\nimport { confirmAlert, alert } from 'react-confirm-alert'; \nimport { useForm } from \"react-hook-form\";\n\n\n\nconst Jobs = props => {\n    const accessToken = props.accessToken\n    const history = props.history\n    const jobDetail = props.jobDetail\n    const paramsJobId = jobDetail.id\n    const jobDetailKeys = Object.keys(jobDetail)\n    const { handleSubmit } = useForm()\n    \n    const onSubmit = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: `Are you sure you want to delete ${jobDetail.position_title} at ${jobDetail.company}?`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`/api/jobs/${paramsJobId}/`, { ...paramsJobId })\n                            .then(() => history.push('/all-jobs'))\n                            .catch(error => {\n                                // console.log(error)\n                            })\n                    }\n                },\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n    return (\n        <Container className=\"job-detail\">\n            <Segment>\n\n                <Header\n                    as='h1'\n                    // inverted\n                    content='Job Detail'\n                    // inverted\n                    style={{\n                        fontSize: '2em',\n                        // fontWeight: 'normal',\n                        // marginBottom: 0,\n                        // marginTop: '.5em',\n                    }}\n                    textAlign=\"center\"\n                />\n            </Segment>\n            <Segment>\n                {dataFields(jobDetail, jobDetailKeys)}\n                {/* {jobDetailKeys.map(key => (\n                    <div className=\"job-detail-container\" key={`${key} - container`}>\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p key={`${key}`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] !== 'Id' && formattedJobData[key] !== 'Job Link' ? <p className=\"job-info-data\" key={`key value - ${key}`} key={`${key} - ${key}`}>{jobDetail[key]}</p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p key={`${key} + 1`} className=\"job-info-field\">{formattedJobData[key]}: </p> : null }\n                        {formattedJobData[key] === 'Job Link' ? <p><Link to={jobDetail[key]} className=\"job-info-data\" key={`key value - ${key} + 1`} key={`${key} - ${key}`}>{jobDetail[key]}</Link></p> : null }\n                    </div>\n               ))} */}\n            </Segment>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"delete-button\">\n                <button className=\"btn-warning\" type=\"submit\">Delete</button>\n            </form>\n        </Container>\n    );\n};\n\n\nexport default Jobs;\n\n\n\nconst dataFields = (jobDetail, jobDetailKeys) => {\n    console.log(jobDetail, jobDetailKeys)\n   const jobDetailMap = jobDetailKeys.map(key => {\n        if (jobDetail[key] !== '') {\n            if (key !== 'id' && formattedJobData[key] !== 'Job Link' && key !== 'belongs_to_user') {\n                console.log(\"hit in here\")\n                return (\n                    <div className=\"job-detail-container\" key={`${key} - container`}>\n                        <p key={`${key}`} className=\"job-info-field\">{formattedJobData[key]}: </p>\n                        <p className=\"job-info-data\" key={`key value - ${key}`} key={`${key} - ${key}`}>{jobDetail[key]}</p>\n                    </div>\n                )\n            } else if (formattedJobData[key] === 'Job Link') {\n                return (\n                    <div className=\"job-detail-container\" key={`${key} - container`}>\n                        <p key={`${key} + 1`} className=\"job-info-field\">{formattedJobData[key]}: </p>\n                        <p><Link to={jobDetail[key]} className=\"job-info-data\" key={`key value - ${key} + 1`} key={`${key} - ${key}`}>{jobDetail[key]}</Link></p>\n                    </div>\n                )\n            }\n        }\n    })\n    return (\n        jobDetailMap\n    )\n}","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport { useForm } from 'react-hook-form'\nimport { determineCoverLetter } from './determineCoverLetterFormat'\nimport { Link } from 'react-router-dom'\nimport { Container, Popup, Segment, SegmentGroup } from 'semantic-ui-react'\nimport { job_template_choices } from '../../components/FieldChoices'\n\n\n\nconst CoverLetterChoiceContainer = ({job, userId}) => {\n    const accessToken = localStorage.getItem(\"access_token\")\n    const [user, setUser] = useState({})\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [currentCoverLetterChoice, setCurrentCoverLetterChoice] = useState(job.template_choices)\n    const template_choices = job_template_choices\n    const { register, handleSubmit } = useForm({\n        defaultValues: {\n            template_choice: job.template_choices,\n        }\n    })\n\n    const onSubmit = (data) => {\n        setCurrentCoverLetterChoice(data['template_choice'])\n    }\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(res => {\n                setUser(res.data)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(err => {\n                setLoaded({ isLoaded: false })\n            })\n    }, [])\n\n    if (loaded.isLoaded) {\n        return (\n        <div className=\"cover-letter-display-container\">\n            <Container>\n                <SegmentGroup inverted>\n                        <Segment>\n                            <Link to=\"/job/form\">Create another cover letter?</Link>\n                        </Segment>\n                        <Segment>\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <label>\n                                    <p>Template Choices: </p>\n                                    <select name=\"template_choice\" ref={register} className=\"list-form-field-with-margin\">\n                                        {Object.keys(template_choices).map((key, idx) => (\n                                            <option value={key} key={idx} name={template_choices[key]}> {template_choices[key]} </option>\n                                            ))}\n                                    </select>\n                                </label>\n                                <Popup\n                                    content=\"This will temporarily change the cover letter.\"\n                                    offset={[120,-10]}\n                                    trigger={\n                                    <input className=\"cover-letter-display-button\" type=\"submit\" value=\"Change Cover Letter\" />\n                                    }\n                                />\n                            </form>\n                            <div>\n                                {determineCoverLetter(currentCoverLetterChoice, job, user)}\n                            </div>\n                        </Segment>\n                </SegmentGroup>\n            </Container>\n        </div>\n    \n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CoverLetterChoiceContainer","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { Container, Form, Grid, Header, Input, Label, List, Popup, Segment, Select } from \"semantic-ui-react\";\nimport { job_template_choices, job_stages } from \"../FieldChoices\";\n\nexport const UpdateJobForm = (props) => {\n\n    const job = props.job\n    const [updatedJob, updateJob] = useState(job)\n    const { register, handleSubmit } = useForm({\n        reValidateMode: 'onChange'\n    })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const handleChange = (e, { name, value }) => {\n        updateJob(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n\n    const onSubmit = () => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.put(`/api/jobs/${job.id}/`, updatedJob)\n            .then(() => window.location.reload())\n            .catch(errors => \n                {\n                    // console.log(errors)\n                })\n    };\n\n\n\n    return (\n        <Container>\n            <Segment inverted vertical>\n                <List divided selection>\n                <Form onSubmit={handleSubmit(onSubmit)} >\n                    <Header\n                        as='h3'\n                        content='Update Cover Letter'\n                        inverted\n                        style={{\n                            fontSize: '4em',\n                            fontWeight: 'normal',\n                        }}\n                        textAlign=\"center\"\n                    />\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Template Choice</Label>\n                        <Form.Select\n                            fluid\n                            requiwhite\n                            // defaultValue={job.template_choices}\n                            defaultValue={job.template_choices}\n                            options={job_template_choices}\n                            name=\"job_template_choices\"\n                            onChange={handleChange}\n                        />\n                    </List.Item>\n                    <br/>\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Job Stage</Label>\n                        <Form.Select\n                            defaultValue={job.job_stage}\n                            options={job_stages}\n                            name=\"job_stage\"\n                            onChange={handleChange}\n                        />\n                    </List.Item>\n                    <br />\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Position Title</Label>\n                        <Form.Input\n                            type=\"text\"\n                            defaultValue={job.position_title}\n                            name=\"position_title\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </List.Item>\n                    <br />\n                    <List.Item>\n                            <Label color=\"red\" horizontal>Job Stage</Label>\n                        <Form.Input\n                            type=\"text\"\n                            defaultValue={job.company}\n                            name=\"company\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </List.Item>\n                    <br />\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Recruiter's Name</Label>\n                        <Form.Input\n                            placeholder=\"Recruiter's Name\"\n                            defaultValue={job.recruiter ? job.recruiter : \"\"}\n                            name=\"recruiter\"\n                            onChange={handleChange}\n                        />\n                    </List.Item><br />\n                        <List.Item>\n                            <Label color=\"red\" horizontal>Job Posting Website</Label>\n                            <Form.Input\n                                type=\"text\"\n                                defaultValue={job.job_posting_website}\n                                name=\"link\"\n                                onChange={handleChange}\n                                required\n                            />\n                        </List.Item><br />\n                    <List.Item>\n                        <Label color=\"red\" horizontal>Url for Job Post</Label>\n                        <Form.Input\n                            type=\"url\"\n                            defaultValue={job.link}\n                            name=\"link\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </List.Item><br />\n                    \n                    <List.Item>\n                            <Label color=\"red\" horizontal>Description of Job Post</Label>\n                        <Form.TextArea\n                            type=\"text\"\n                            placeholder=\"Description of Job Post\"\n                            defaultValue={job.description ? job.description : \"\"}\n                            name=\"description\"\n                            onChange={handleChange}\n                        />\n                    </List.Item>\n                    <Grid verticalAlign=\"middle\">\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>First Custom Paragraph</Label>\n                                        <Popup\n                                            content=\"This field fulfills the pre-bullet-point paragraph.\"\n                                            trigger={\n                                                <Form.TextArea\n                                                    placeholder='Unique Paragraph One'\n                                                    defaultValue={job.pre_bullet_point_paragraph_one ? job.pre_bullet_point_paragraph_one : ``}\n                                                    name=\"pre_bullet_point_paragraph_one\"\n                                                    onChange={handleChange} />\n                                            } />\n                                    </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>Second Custom Paragraph</Label>\n                                    <Popup\n                                        content=\"This field fulfills the SECOND pre-bullet-point paragraph.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder=\"Unique Paragraph Two\"\n                                                defaultValue={job.pre_bullet_point_paragraph_two ? job.pre_bullet_point_paragraph_two : ``}\n                                                name=\"pre_bullet_point_paragraph_two\"\n                                                onChange={handleChange} />\n                                        } />\n                                    </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Top Skills</Label>\n                                        <Popup\n                                        content=\"Fill in the YOUR skills that match the JOBS description.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder=\"Top skills related to job\"\n                                                defaultValue={job.top_skills ? job.top_skills : ``}\n                                                name=\"top_skills\"\n                                                onChange={handleChange}\n                                            />\n                                        } />\n                                    </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Second Bullet Point</Label>\n                                    <Form.TextArea\n                                        placeholder=\"Second Bullet Point \"\n                                        defaultValue={job.bullet_point_one ? job.bullet_point_one : ``}\n                                        name=\"bullet_point_one\"\n                                        onChange={handleChange} />\n                                </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Third Bullet Point</Label>\n                                    <Form.TextArea\n                                        placeholder=\"Third Bullet Point \"\n                                        defaultValue={job.bullet_point_two ? job.bullet_point_two : ``}\n                                        name=\"bullet_point_two\"\n                                        onChange={handleChange} />\n                                </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>Fourth Bullet Point</Label>\n                                        <Form.TextArea\n                                            placeholder=\"Fourth Bullet Point\"\n                                            defaultValue={job.bullet_point_three ? job.bullet_point_three : ``}\n                                            name=\"bullet_point_three\"\n                                            onChange={handleChange} />\n                                    </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>Fifth Bullet Point</Label>\n                                        <Form.TextArea\n                                            placeholder=\"Fifth Bullet Point\"\n                                            defaultValue={job.bullet_point_five ? job.bullet_point_five : ``}\n                                            name=\"bullet_point_five\"\n                                            onChange={handleChange} />\n                                    </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                    <br />\n                                    <List.Item>\n                                        <Label color=\"red\" horizontal>Sixth Bullet Point</Label>\n                                        <Form.TextArea\n                                            placeholder=\"Sixth Bullet Point\"\n                                            defaultValue={job.bullet_point_six ? job.bullet_point_six : ``}\n                                            name=\"bullet_point_six\"\n                                            onChange={handleChange} />\n                                    </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Seventh Bullet Point</Label>\n                                    <Form.TextArea\n                                        placeholder=\"Seventh Bullet Point\"\n                                        defaultValue={job.bullet_point_seven ? job.bullet_point_seven : ``}\n                                        name=\"bullet_point_seven\"\n                                        onChange={handleChange} />\n                                </List.Item>\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                                <br />\n                                <List.Item>\n                                        <Label color=\"red\" horizontal>Eigth Bullet Point</Label>\n                                    <Form.TextArea\n                                        placeholder=\"Eigth Bullet Point\"\n                                        defaultValue={job.bullet_point_eight ? job.bullet_point_eight : ``}\n                                        name=\"bullet_point_eight\"\n                                        onChange={handleChange} />\n                                </List.Item>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                    <br/>\n                    <Form.Button primary content=\"Update Cover Letter\" />\n                </Form>\n                </List>\n            </Segment>\n        </Container>\n    )\n}\n\n","import React, { useState, useEffect } from 'react'\nimport JobDetail from '../../components/jobInfo/JobDetail'\nimport axios from 'axios'\n\nimport { useHistory, useParams } from 'react-router'\n\nimport { alert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport CoverLetterChoiceContainer from '../cover_letters/CoverLetterDisplayContainer'\nimport { UpdateJobForm } from '../../components/cover_letter/UpdateCoverLetter'\nimport { Button, Container, Segment, SegmentGroup } from 'semantic-ui-react'\n\n\n\nconst JobDetailView = () => {\n    const [job, setJob] = useState([])\n    const [userId, setUserId] = useState([])\n    const [loaded, setLoaded] = useState({ isLoaded: false })\n    const [accessToken] = useState(localStorage.getItem('access_token'))\n    const paramsJobId = useParams().jobID\n    const history = useHistory()\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/jobs/${paramsJobId}/`)\n            .then(res => {\n                setJob(res.data)\n                setUserId(res.data.belongs_to_user)\n            }).then(() => {\n                setLoaded({ isLoaded: true })\n            })\n            .catch(error => {\n                setLoaded({isLoaded: false})\n                alert(error)\n                history.push('/login')\n            })\n    }, [])\n\n    \n\n    if (loaded.isLoaded) {\n        return (\n            <Container>\n                <Segment className=\"hide-buttons\" inverted>\n                    <Button \n                        id=\"show-job-update-button\" \n                        onClick={() => reveal(\"update-job-container\",\"show-job-update-button\")}\n                        >Show Update Job Form</Button>\n                    <Button \n                        id=\"show-cover-letter-button\" \n                        onClick={() => reveal('cover-letter-container', \"show-cover-letter-button\")}\n                        >Show Cover Letter</Button>\n                    <Button \n                        id=\"hide-job-details-button\" \n                        onClick={() => reveal('job-detail', \"hide-job-details-button\")}\n                        >Hide Job Details</Button>\n                </Segment>\n                <Container className=\"job-container\">\n                    <SegmentGroup>\n\n                        <Segment className=\"job-and-cover-letter-container\" inverted>\n                            <JobDetail jobDetail={job} userId={userId} accessToken={accessToken} history={history}/>\n                        </Segment>\n                        <Segment className=\"cover-letter-container\" id=\"cover-letter-choice\" inverted>\n                            <CoverLetterChoiceContainer job={job} userId={userId} inverted/>\n                        </Segment>\n                        <Segment className=\"update-job-container\" inverted>\n                            <UpdateJobForm job={job} userId={userId} setJob={setJob} />\n                        </Segment>\n                    </SegmentGroup>\n                </Container>\n            </Container>\n\n        )\n    } else {\n        return (\n            <div>\n                <h1>Loading</h1>\n            </div>\n        )\n    }\n\n}\n\nexport default JobDetailView\n\n\nconst reveal = (divToHide, button) => {\n    const div = document.getElementsByClassName(divToHide)[0]\n    const coverLetter = document.getElementsByClassName(\"cover-letter-container\")[0]\n    const coverLetterButton = document.getElementById(\"show-cover-letter-button\")\n    if (divToHide !== \"job-detail\") {\n        div.style.display === '' ? div.style.display = 'block' : div.style.display = ''\n        \n    } else {\n        div.style.display === 'none' ? div.style.display = 'block' : div.style.display = 'none'\n        if (coverLetter.style.display === 'none' || coverLetter.style.display === '')  {\n            coverLetter.style.display = 'block'\n            coverLetterButton.innerText = coverLetterButton.innerText.replace(\"Show\", \"Hide\")\n        } else {\n            coverLetter.style.display = ''\n        }\n    } \n\n\n    let buttonTxt = document.getElementById(button)\n    if (buttonTxt.innerText.includes(\"Hide\")) {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Hide\", \"Show\")\n        buttonTxt.style.backgroundColor = \"#e0e1e2\"\n    } else {\n        buttonTxt.innerText = buttonTxt.innerText.replace(\"Show\", \"Hide\")\n        buttonTxt.style.backgroundColor = \"grey\"\n        \n    }\n}\n","// import { Form, Input, Button, Checkbox, Spin, Space, Alert } from 'antd';\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab, Divider\n} from 'semantic-ui-react'\n\nimport {Nav} from 'react-bootstrap';\nimport React, { useEffect, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as actions from '../../store/actions/Auth'\nimport { useHistory }  from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\n\n\n\nconst Login = () => {\n    const history = useHistory()\n    const [loading, setLoading] = useState(false)\n    const props = useSelector(state => (\n        { ...state, \n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const {register, handleSubmit} = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        (username, password) => dispatch(actions.authLogin(username, password, setErrorMessage, false, history))\n    )\n\n    const [errorMessage, setErrorMessage] = useState(null)\n    \n    const onFinish = (values) => {\n        setLoading(true)\n        try {\n            onAuth(values.username, values.password)\n        } catch {\n            setErrorMessage(\"Please try again or signup.\")\n        }\n        setLoading(false)\n    };\n\n    \n    return (\n        <div className=\"login-form\">\n            <Segment size=\"large\">\n                <Segment placeholder inverted style={{minWidth: \"10vh\"}}>\n                    <Grid columns={1} relaxed='very' stackable>\n                        <Grid.Column>\n                            <Form onSubmit={handleSubmit(onFinish)} loading={props.loading} error={errorMessage !== null} inverted>\n                                {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                <Form.Field required>\n                                    <label>Username</label>\n                                    <input\n                                        icon='user'\n                                        label='Username'\n                                        name={'username'}\n                                        placeholder='Username'\n                                        autoComplete=\"username\"\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Password</label>\n                                    <input\n                                        icon='lock'\n                                        label='Password'\n                                        name={'password'}\n                                        autoComplete=\"current-password\"\n                                        type='password'\n                                        ref={register()}\n                                    />\n\n                                </Form.Field>\n\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Login</Button>\n                            </Form>\n                            <Divider horizontal inverted>Or</Divider>\n                        {/* <Grid.Column verticalAlign='middle'> */}\n                            <Button content='Sign up' icon='signup' size='big' onClick={() => history.push(\"/signup\")}/>\n                        {/* </Grid.Column> */}\n                        </Grid.Column>\n\n                    </Grid>\n                    \n                </Segment>\n            </Segment>\n        </div>\n    );\n};\n\n\nexport default Login","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport {logout} from '../../store/actions/Auth'\nimport {Grid, Container, Segment, Header, Menu} from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\nimport axiosInstance from '../../store/axiosApi'\n\nconst Shell = props => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const userId = jwtDecode(localStorage.getItem('access_token')).user_id\n    const [user, setUser] = useState({})\n    const [loaded, isLoaded] = useState(false)\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n        // axios.get(`${url}/api/users/${userId}`)\n        axios.get(`/api/users/${userId}`)\n        .then(resp => {\n            setUser(resp.data)\n            // history.push({user: resp.data})\n        })\n        .then(() => {\n            isLoaded(true)\n        })\n        .catch(err => {\n            // console.log(err)\n        })\n    }, [localStorage.getItem('access_token')])\n\n        return (    \n            <Segment vertical>\n                <Container>\n                    <Grid container stackable=\"true\" verticalAlign='top' divided columns={2}>\n                        <Grid.Row>\n                            <Grid.Column width={4}>\n                                <Header as=\"h3\" inverted>Account</Header>\n                                <Menu vertical fluid>\n                                    <Menu.Item \n                                        onClick={() => history.push(\"/user-admin/change-email/\", {user: user})} \n                                        active={history.location.pathname === \"/user-admin/change-email/\"}\n                                        name=\"change-email\">\n                                        Change Email\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/user-admin/change-password/\", { user: user })}\n                                        active={history.location.pathname === \"/user-admin/change-password/\"}\n                                        name=\"change-password\">\n                                        Change Password\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/user-admin/change-account-info/\", { user: user })}\n                                        active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                        name=\"change-account-info\">\n                                        Change Account Info\n                                    </Menu.Item>\n                                    <Menu.Item onClick={() => history.push(\"/default-form-values/\", { user: user, previousLocation: \"/admin/change-info/\" })}\n                                        active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                        name=\"change-account-info\">\n                                        Set Default Form\n                                        </Menu.Item>\n                                    <Menu.Item onClick={() => dispatch(logout())}\n                                        name=\"logout\">\n                                        Logout\n                                    </Menu.Item>\n                                </Menu>\n                            </Grid.Column>\n                            <Grid.Column width={12}>\n                                {props.children}\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n}\n\nexport default Shell\n\n","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Button, Table\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\nimport Shell from '../../containers/Account/Shell';\n\n\n\nconst ChangeEmail = (props) => {\n    const [user, setUser] = useState(\"\")\n    const [newEmail] = useState(\"\")\n    const [confirmEmail] = useState(\"\")\n    const [error, setError] = useState({})\n    const {register, handleSubmit} = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(false)\n\n    useEffect(() => {\n        axios.get(`/api/users/${userId}/`, { userId: userId })\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                // console.log(err)\n            })\n    }, [])\n\n\n    const onSubmit = data => {\n        const email = data.newEmail\n        const confirmEmail = data.confirmEmail\n        if (data.newEmail !== '' || data.confirmEmail !== '') {\n            if (email === confirmEmail) {\n                if (email !== user.email) {\n                    setLoading(true)\n                    data = {email: email}\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    axios.patch(`/api/users/${user.id}/`, data)\n                    .then(resp => {\n                        setUser(resp.data)\n                    })\n                    .catch(err => {\n                        setError(err.Message)\n                    })\n                    setLoading(false)\n                } else {\n                    setError(`Your email is already ${email}`)\n                }\n            } else {\n                setError(\"Emails don't match!\")\n            }\n        } else {\n            setError(\"Fields are empty!\")\n\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Email</Table.HeaderCell>\n                            <Table.HeaderCell>New Email</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {/* <Header as=\"h2\">Change Email</Header> */}\n                        {/* <br /> */}\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Email: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <Input\n                                            // placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.email}\n                                            type=\"text\"\n                                            name={\"currentEmail\"}\n                                            ref={register({ name: \"currentEmail\" })}\n                                            disabled\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                    <Form.Field>Change Email</Form.Field>\n                                </Table.Cell>\n                                <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Email</label>\n                                    <input\n                                        placeholder=\"New Email\"\n                                        defaultValue={newEmail}\n                                        type=\"email\"\n                                        name={\"newEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Email</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Email\"\n                                        defaultValue={confirmEmail}\n                                        dependencies={[\"newEmail\"]}\n                                        type=\"email\"\n                                        name={\"confirmEmail\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n \n\nexport default ChangeEmail","\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Icon,\n    List,\n    Menu,\n    Segment,\n    Sidebar,\n    Visibility,\n} from 'semantic-ui-react'\n\n\n/* Heads up!\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\n * components for such things.\n */\nconst HomepageHeading = ({ mobile }) => {\n    const history = useHistory()\n    return(\n        <Container text>\n            <Header\n                as='h1'\n                content='Unique Cover Letter Generator'\n                inverted\n                style={{\n                    fontSize: mobile ? '2em' : '4em',\n                    fontWeight: 'normal',\n                    marginBottom: 0,\n                    marginTop: mobile ? '1.5em' : '3em',\n                }}\n            />\n            <Header\n                as='h2'\n                content='Want to save time while applying to jobs?'\n                inverted\n                style={{\n                    fontSize: mobile ? '1.5em' : '1.7em',\n                    fontWeight: 'normal',\n                    marginTop: mobile ? '0.5em' : '1.5em',\n                }}\n            />\n            <Button primary size='huge' onClick={() => history.push('/all-jobs/')}>\n                Get Started\n                <Icon name='right arrow' />\n            </Button>\n        </Container>\n    )\n}\n\n\nHomepageHeading.propTypes = {\n    mobile: PropTypes.bool,\n}\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n    state = {}\n\n    hideFixedMenu = () => this.setState({ fixed: false })\n    showFixedMenu = () => this.setState({ fixed: true })\n\n    render() {\n        const { children } = this.props\n        const { fixed } = this.state\n\n        return (\n            <Container>\n                <Visibility\n                    once={false}\n                    onBottomPassed={this.showFixedMenu}\n                    onBottomPassedReverse={this.hideFixedMenu}\n                >\n                    <Segment\n                        inverted\n                        textAlign='center'\n                        style={{ minHeight: 700, padding: '1em 0em' }}\n                        vertical\n                    >\n                        <HomepageHeading />\n                    </Segment>\n                </Visibility>\n\n                {children}\n            </Container>\n        )\n    }\n}\n\nDesktopContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n    state = {}\n\n    handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n    handleToggle = () => this.setState({ sidebarOpened: true })\n\n    render() {\n        const { children } = this.props\n        const { sidebarOpened } = this.state\n\n        return (\n            <Container as={Sidebar.Pushable} at='mobile'>\n                <Sidebar.Pushable>\n                    <Sidebar\n                        as={Menu}\n                        animation='overlay'\n                        inverted\n                        onHide={this.handleSidebarHide}\n                        vertical\n                        visible={sidebarOpened}\n                    >\n                        <Menu.Item as='a' active>\n                            Home\n                        </Menu.Item>\n                        <Menu.Item as='a'>Work</Menu.Item>\n                        <Menu.Item as='a'>Company</Menu.Item>\n                        <Menu.Item as='a'>Careers</Menu.Item>\n                        <Menu.Item as='a'>Log in</Menu.Item>\n                        <Menu.Item as='a'>Sign Up</Menu.Item>\n                    </Sidebar>\n\n                    <Sidebar.Pusher dimmed={sidebarOpened}>\n                        <Segment\n                            inverted\n                            textAlign='center'\n                            style={{ minHeight: 350, padding: '1em 0em' }}\n                            vertical\n                        >\n                            <Container>\n                                <Menu inverted pointing secondary size='large'>\n                                    <Menu.Item onClick={this.handleToggle}>\n                                        <Icon name='sidebar' />\n                                    </Menu.Item>\n                                    <Menu.Item position='right'>\n                                        <Button as='a' inverted>\n                                            Log in\n                                        </Button>\n                                        <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                                            Sign Up\n                                        </Button>\n                                    </Menu.Item>\n                                </Menu>\n                            </Container>\n                            <HomepageHeading mobile />\n                        </Segment>\n\n                        {children}\n                    </Sidebar.Pusher>\n                </Sidebar.Pushable>\n            </Container>\n        )\n    }\n}\n\nMobileContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst ResponsiveContainer = ({ children }) => (\n    /* Heads up!\n     * For large applications it may not be best option to put all page into these containers at\n     * they will be rendered twice for SSR.\n     */\n        <DesktopContainer>{children}</DesktopContainer>\n)\n\nResponsiveContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst Homepage = () => (\n    <ResponsiveContainer>\n        {/* <Segment style={{ padding: '8em 0em' }} vertical inverted>\n            <Grid container stackable=\"true\" verticalAlign='middle'>\n                <Grid.Row>\n                    <Grid.Column width={8}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            We Help Job Seekers Create Unique Cover Letters\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            People spend enourmous amount of time trying to create unique cover letters.\n                        </p>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            We Make Bananas That Can Dance\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            Yes that's right, you thought it was the stuff of dreams, but even bananas can be\n                            bioengineered.\n                        </p>\n                    </Grid.Column>\n                    <Grid.Column floated='right' width={6}>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column textAlign='center'>\n                        <Button size='huge'>Check Them Out</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n\n        <Segment style={{ padding: '0em' }} vertical inverted>\n            <Grid celled='internally' columns='equal' stackable>\n                <Grid.Row textAlign='center'>\n                    <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            \"What a Company\"\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n                    </Grid.Column>\n                    <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n                        <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                            \"I shouldn't have gone with their competitor.\"\n                        </Header>\n                        <p style={{ fontSize: '1.33em' }}>\n                            <b>Nan</b> Chief Fun Officer Acme Toys\n                        </p>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n\n        <Segment style={{ padding: '8em 0em' }} vertical inverted>\n            <Container text>\n                <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                    Breaking The Grid, Grabs Your Attention\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Instead of focusing on content creation and hard work, we have learned how to master the\n                    art of doing nothing by providing massive amounts of whitespace and generic content that\n                    can seem massive, monolithic and worth your attention.\n                </p>\n                <Button as='a' size='large'>\n                    Read More\n                </Button>\n\n                <Divider\n                    as='h4'\n                    className='header'\n                    horizontal\n                    style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n                >\n                    <a href='#'>Case Studies</a>\n                </Divider>\n\n                <Header as='h3' style={{ fontSize: '2em' }} inverted>\n                    Did We Tell You About Our Bananas?\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but\n                    it's really true. It took years of gene splicing and combinatory DNA research, but our\n                    bananas can really dance.\n                </p>\n                <Button as='a' size='large'>\n                    I'm Still Quite Interested\n                </Button>\n            </Container>\n        </Segment> */}\n\n    </ResponsiveContainer>\n)\n\nexport default Homepage","import React, { useEffect, useState } from 'react'\nimport { useHistory, } from 'react-router-dom'\nimport { logout } from '../../store/actions/Auth'\nimport { Grid, Container, Segment, Header, Menu } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\n\n\nconst AccountDashboard = () => {\n    const [user, setUser] = useState({})\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n    const [loaded, isLoaded] = useState(true)\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .then(() => {\n                isLoaded(true)\n            })\n            .catch(err => {\n                // console.log(err)\n            })\n    }, [])\n  \n    if (loaded) {\n        return (\n            <div class=\"outer-semantic\">\n                <Segment placeholder className=\"outer-semantic\" padded=\"very\">\n                    <Container text textAlign=\"center\">\n                        <Grid container divided textAlign=\"center\" >\n                            {/* <Grid.Row> */}\n                                {/* <Grid.Column width={8}> */}\n                                <Container content>\n                                    <Segment>\n                                        <Header as=\"h3\">Account Info</Header>\n                                    </Segment>\n                                    <Menu vertical fluid>\n                                        <Menu.Item\n                                            onClick={() => history.push(\"/user-admin/change-email/\", { user: user, previousLocation: \"/admin/change-email/\"})}\n                                            active={history.location.pathname === \"/user-admin/change-email/\"}\n                                            name=\"change-email\">\n                                            Change Email\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/user-admin/change-password/\", { user: user, previousLocation: \"/admin/change-password/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-password/\"}\n                                            name=\"change-password\">\n                                            Change Password\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/user-admin/change-account-info/\", { user: user, previousLocation: \"/admin/change-info/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                            name=\"change-account-info\">\n                                            Change Account Info\n                                        </Menu.Item>\n                                        <Menu.Item onClick={() => history.push(\"/default-form-values/\", { user: user, previousLocation: \"/admin/change-info/\" })}\n                                            active={history.location.pathname === \"/user-admin/change-account-info/\"}\n                                            name=\"change-account-info\">\n                                            Set Default Form\n                                        </Menu.Item>\n                                        { user.is_superuser ? <Menu.Item onClick={() => history.push(\"/admin/\")}\n                                            active={history.location.pathname === \"/admin/\"}\n                                            name=\"change-account-info\">\n                                            Admin\n                                        </Menu.Item> : null}\n                                        {/* <Menu.Item onClick={() => dispatch(logout())}\n                                            name=\"logout\">\n                                            Logout\n                                        </Menu.Item> */}\n                                    </Menu>\n                                </Container>\n                                {/* </Grid.Column> */}\n                            {/* </Grid.Row> */}\n                        </Grid>\n                    </Container>\n                </Segment>\n            </div>\n        )\n    } else {\n        return(\n            <Segment vertical>\n                <Container>\n                    <Grid container stackable=\"true\" verticalAlign='top' divided columns={2}>\n                        <Grid.Column width={4}>\n                            Loading\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </Segment>\n        )\n    }\n}\n\nexport default AccountDashboard","import React, { useEffect, useState } from 'react'\nimport {\n    Form, Input, Message,\n    Header, Button, Grid,\n    Container, Segment, Menu,\n    Table, Icon, Label, Tab\n} from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\n\nimport axios from 'axios'\n\nimport jwtDecode from 'jwt-decode';\nimport Shell from '../../containers/Account/Shell';\n\n\n\n\nconst ChangePassword = (props) => {\n    const [newPassword, setNewPassword] = useState(\"\")\n    const [currentPassword, setCurrentPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [error, setError] = useState({})\n    const [successMessage, setSuccessMessage] = useState(null)\n    const { register, handleSubmit } = useForm()\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n\n\n\n    const onSubmit = data => {\n        const oldPassword = data.oldPassword\n        const new_password = data.new_password1\n        const newPassword2 = data.new_password2\n        if (new_password !== '' || newPassword2 !== '' || oldPassword) {\n            if (new_password === newPassword2) {\n                    setLoading(true)\n                    const backendData = { old_password: oldPassword, new_password: new_password }\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    // axios.patch(`${url}/api/change-password/`, backendData)\n                    axios.patch(`/api/change-password/`, backendData)\n                        .then(resp => {\n                            setSuccessMessage(\"You have successfully changed the password!\")\n                            setError({})\n                        })\n                        .catch(err => {\n                            setError(\"Woops seems like something went wrong. Did you enter the correct current password?\")\n                            setSuccessMessage(null)\n                        })\n                    setLoading(false)\n            } else {\n                setError(\"Passwords don't match!\")\n                setSuccessMessage(null)\n            }\n        } else {\n            setError(\"Fields are empty!\")\n            setSuccessMessage(null)\n        }\n    }\n\n    return (\n        <Shell>\n            <Form onSubmit={handleSubmit(onSubmit)} error={error !== null} success={successMessage !== null}>\n                <Table striped inverted textAlign=\"center\">\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>Current Password</Table.HeaderCell>\n                            <Table.HeaderCell>New Password</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        <Table.Row>\n                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Current Password: </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field>\n                                    <label>Current Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Current Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"oldPassword\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell verticalAlign=\"middle\" textAlign=\"center\">\n                                <Form.Field>New Password</Form.Field>\n                            </Table.Cell>\n                            <Table.Cell>\n                                <Form.Field required>\n                                    <label>New Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"New Password\"\n                                        defaultValue={newPassword}\n                                        type=\"password\"\n                                        name={\"new_password1\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <label>Confirm Password</label>\n                                    <input\n                                        // value=\n                                        placeholder=\"Confirm Password\"\n                                        defaultValue={confirmPassword}\n                                        dependencies={[\"newPassword\"]}\n                                        type=\"password\"\n                                        name={\"new_password2\"}\n                                        ref={register()}\n                                    />\n                                </Form.Field>\n                            </Table.Cell>\n                        </Table.Row>\n                    </Table.Body>\n\n                    <Table.Footer>\n                        <Table.Row>\n                            <Table.HeaderCell colSpan='2' textAlign=\"center\">\n                                {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                {successMessage && (<Message success heading=\"Success\" content={successMessage} />)}\n                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n            </Form>\n        </Shell>\n    )\n}\n\n\nexport default ChangePassword","import React, { useEffect, useState } from 'react'\nimport { Form, Message, \n        Button,Table, \n    } from 'semantic-ui-react'\nimport { useForm } from \"react-hook-form\";\nimport { confirmAlert, alert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport Shell from '../../containers/Account/Shell';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../../store/actions/Auth'\n\n\nconst ChangeAccountInfo = (props) => {\n    const [user, setUser] = useState({})\n    \n    const history = useHistory()\n    const [error, setError] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/users/${userId}/`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .catch(err => {\n                // console.log(err)\n            })\n    }, [])\n\n\n    const onSubmit = data => {\n        setLoading(true)\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`/api/users/${user.id}/`, data)\n            .then(resp => {\n                setUser(resp.data)\n                // history.go()\n            })\n            .catch(err => {\n                setError(err.Message)\n            })\n        setLoading(false)\n    }\n\n    const onDelete = () => {\n        confirmAlert({\n            title: `Confirm Delete `,\n            message: `Are you sure you want to delete your account ${user.first_name} ${user.last_name}? This is permenant and there is no coming back.`,\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        axios.defaults.headers = {\n                            \"Content-type\": \"application/json\",\n                            Authorization: `Bearer ${accessToken}`\n                        }\n                        axios.delete(`/api/users/${user.id}/`)\n                            // .then(resp => console.log(resp))\n                            .then(() => actions.logout())\n                            .then(() => history.push('/login/'))\n                            .then( () => history.go(0))\n                            .catch(error => {\n\n                                // console.log(error)\n                            })\n                    }\n                }\n                ,\n                {\n                    label: 'No',\n                }\n            ]\n        });\n    }\n    if (user) {\n        return (\n            <Shell>\n                <Form onSubmit={handleSubmit(onSubmit)} error={error !== null}>\n                    <Table striped inverted textAlign=\"center\">\n                        <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Header>\n    \n                        <Table.Body>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">First Name: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update First Name: ${user.first_name}`}\n                                            defaultValue={user.first_name}\n                                            type=\"text\"\n                                            name={\"first_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                \n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Middle Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"middle_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update middle Name: ${user.middle_name}`}\n                                            defaultValue={user.middle_name}\n                                            type=\"text\"\n                                            name={\"middle_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Last Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"last_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Last Name: ${user.last_name}`}\n                                            defaultValue={user.last_name}\n                                            type=\"text\"\n                                            name={\"last_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"preferred_name\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Preferred Name: ${user.preferred_name}`}\n                                            defaultValue={user.preferred_name}\n                                            type=\"text\"\n                                            name={\"preferred_name\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Phone Number: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"phone_number\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Phone Number: ${user.phone_number}`}\n                                            defaultValue={user.phone_number}\n                                            type=\"text\"\n                                            name={\"phone_number\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">LinkedIn: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field name=\"LinkedIn\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update LinkedIn: ${user.linkedin}`}\n                                            defaultValue={user.linkedin}\n                                            type=\"text\"\n                                            name={\"linkedin\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Github: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"github\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Github: ${user.github}`}\n                                            defaultValue={user.github}\n                                            type=\"text\"\n                                            name={\"github\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Portfolio Website: </Table.Cell>\n                                <Table.Cell>\n                                    <Form.Field name=\"portfolioWebsite\">\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Portfolio Website: ${user.portfolio_website}`}\n                                            defaultValue={user.portfolio_website}\n                                            type=\"text\"\n                                            name={\"portfolio_website\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Street Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Street Address: ${user.street_address}`}\n                                            defaultValue={user.street_address}\n                                            type=\"text\"\n                                            name={\"street_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">City Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update City Address: ${user.city_address}`}\n                                            defaultValue={user.city_address}\n                                            type=\"text\"\n                                            name={\"city_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">State Address: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update State Address: ${user.state_address}`}\n                                            defaultValue={user.state_address}\n                                            type=\"text\"\n                                            name={\"state_address\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                            <Table.Row>\n                                <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Zip Code: </Table.Cell>\n                                <Table.Cell>\n                                        <Form.Field>\n                                        {/* <label>Confirm Email</label> */}\n                                        <input\n                                            placeholder={`Update Zip Code: ${user.zip_code}`}\n                                            defaultValue={user.zip_code}\n                                            type=\"text\"\n                                            name={\"zip_code\"}\n                                            ref={register()}\n                                        />\n                                    </Form.Field>\n                                </Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n    \n                        <Table.Footer>\n                            <Table.Row>\n                                <Table.HeaderCell colSpan='2'textAlign=\"center\">\n                                    {error.length && (<Message error heading=\"There was an error\" content={error} />)}\n                                    <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                </Table.HeaderCell>\n                            </Table.Row>\n                        </Table.Footer>\n                    </Table>\n                </Form>\n                <br></br>\n                <Form onSubmit={handleSubmit(onDelete)} error={error !== null}>\n                    <Button type=\"submit\" negative>Delete Account</Button>\n                    {error.length && (<Message error heading=\"There was an error deleting your account. Please try again later.\" content={error} />)}\n                </Form>\n            </Shell>\n        )\n    } else {\n        history.push('/user-admin/')\n    }\n\n}\n\n\nexport default ChangeAccountInfo","import React, { useState } from 'react'\nimport {\n    Form, Message,\n    Button, Grid,\n    Segment, Table, \n} from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode';\nimport { confirmAlert } from 'react-confirm-alert';\n\nconst AccountDetailsForm = () => {\n    const history = useHistory()\n    // const [requiredFields, setRequiredFields] = useState({})\n    const [errorMessage, setErrorMessage] = useState({})\n    const { register, handleSubmit } = useForm({})\n    const [loading, setLoading] = useState(false)\n\n\n    const onSubmit = data => {\n        const navBar = document.getElementsByClassName(\"nav-bar\")[0]\n        navBar.style.display = null\n        setLoading(true)\n        const accessToken = localStorage.getItem('access_token')\n        const userId = jwtDecode(accessToken).user_id\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.patch(`/api/users/${userId}/`, data)\n            .then(\n                confirmAlert({\n                    title: `Success!`,\n                    message: `You have finished filling out your user profile. Would you like to set default values for your future cover letters or go straight to creating them?`,\n                    buttons: [\n                        {\n                            label: 'Yes, straight to cover letters',\n                            color: 'red',\n                            onClick: () => history.push('/job/form/')\n                        }\n                        ,\n                        {\n                            label: 'Set your default form values',\n                            onClick: () => { history.push('/default-form-values/') }\n                        },\n                        {\n                            label: 'No, I would like to change my account information.',\n                            onClick: () => { history.push('/user-admin/') }\n                        },\n                    ]\n                })\n            )\n            .catch(err => {\n                setErrorMessage(err.Message)\n            })\n        \n        setLoading(false)\n\n    }\n\n    return (\n        <div className=\"login-form\">\n            <Segment placeholder>\n                <Grid stackable=\"true\" >\n                    <Grid.Column stackable={true}>\n                        <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                            <Table striped inverted textAlign=\"center\">\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell>Account Info</Table.HeaderCell>\n                                        <Table.HeaderCell> </Table.HeaderCell>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`**First Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"first_name\"}\n                                                        ref={register()}\n                                                        style={{ fontWeight: \"bolder\" }}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Middle Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"middle_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`**Last Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"last_name\"}\n                                                        ref={register()}\n                                                        style={{fontWeight: \"bolder\"}}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Preferred Name: </Table.Cell>\n                                            <Table.Cell stackable>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Preferred Name:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"preferred_name\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Cover Letter Information </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field name=\"phone_number\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Phone Number:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"phone_number\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"LinkedIn\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`LinkedIn:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"linkedin\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"github\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Github:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"github\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field name=\"portfolioWebsite\">\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Portfolio Website:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"portfolio_website\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Address: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`Street Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"street_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`City Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"city_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        placeholder={`State Address:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"state_address\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                    <input\n                                                        placeholder={`Zip Code:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"zip_code\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Footer>\n                                    <Table.Row>\n                                        <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                            {errorMessage.length && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                            <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                        </Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Footer>\n                            </Table>\n                        </Form>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </div>\n\n    );\n};\n\nexport default AccountDetailsForm","import React, {useCallback, useState } from 'react'\nimport * as actions from '../../../store/actions/Auth'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    Form, Message,Button, \n    Grid, Segment, Table,  Divider\n} from 'semantic-ui-react'\n\n// import {\n//     Form,\n//     Input,\n//     Select,\n//     Button,\n// } from 'antd';\nimport { Nav } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form'\n\nconst RegistrationForm = () => {\n    const history = useHistory()\n    const [loading] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const props = useSelector(state => (\n        {\n            ...state,\n            isAuthenticated: localStorage.getItem('access_token') !== null,\n            loading: state.loading,\n            error: state.error\n        }))\n    const { register, handleSubmit } = useForm()\n    const dispatch = useDispatch()\n    const onAuth = useCallback(\n        ({ ...values }) => dispatch(actions.authSignUp(values, setErrorMessage, true, history))\n    )\n    const onSubmit = (values) => {\n        const data = {...values}\n        const passwordCheck = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n       if (data.password === data.confirm_password) {\n            if (data.password.length > 5) {\n                if (data.password.match(passwordCheck)){\n                    onAuth(data)\n                } else {\n                    setErrorMessage(\"Password needs to contain at least one numeric digit, one uppercase and one lowercase letter\")\n                }\n            } else {\n                setErrorMessage(\"Password needs to be greater than 5 characters\")\n            }\n       } else {\n           setErrorMessage(\"Passwords don't match!\")\n       }\n        // history.push('/')\n    };\n\n\n    return (\n        <div className=\"login-form\">\n            <Segment size=\"large\">\n                <Segment placeholder inverted>\n                    <Grid stackable=\"true\" >\n                        <Grid.Column stackable>\n                            <Form onSubmit={handleSubmit(onSubmit)} error={errorMessage !== null}>\n                                <Table striped inverted textAlign=\"center\">\n                                    <Table.Header>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan={10}>Account Info</Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Header>\n                                    <Table.Body>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Username: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Username:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"text\"\n                                                        name={\"username\"}\n                                                        ref={register()}\n                                                        minLength={4}\n                                                        maxLength={20}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Email: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    {/* <label>Confirm Email</label> */}\n                                                    <input\n                                                        required\n                                                        placeholder={`Email:`}\n                                                        defaultValue={\"\"}\n                                                        autoComplete=\"new-email\"\n                                                        type=\"email\"\n                                                        name={\"email\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                        <Table.Row>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Password: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`Password:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"password\"\n                                                        autoComplete=\"new-password\"\n                                                        name={\"password\"}\n                                                        minLength={6}\n                                                        maxLength={20}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                            <Table.Cell textAlign=\"center\" verticalAlign=\"middle\">Confirm Password: </Table.Cell>\n                                            <Table.Cell>\n                                                <Form.Field>\n                                                    <input\n                                                        required\n                                                        placeholder={`Confirm Password:`}\n                                                        defaultValue={\"\"}\n                                                        type=\"password\"\n                                                        autoComplete=\"new-password\"\n                                                        minLength={6}\n                                                        maxLength={20}\n                                                        name={\"confirm_password\"}\n                                                        ref={register()}\n                                                    />\n                                                </Form.Field>\n                                            </Table.Cell>\n                                        </Table.Row>\n                                    </Table.Body>\n                                    <Table.Footer>\n                                        <Table.Row>\n                                            <Table.HeaderCell colSpan='10' textAlign=\"center\">\n                                                {errorMessage && (<Message error heading=\"There was an error.\" content={errorMessage} />)}\n                                                <Button primary type=\"submit\" loading={loading} disabled={loading}>Submit</Button>\n                                            </Table.HeaderCell>\n                                        </Table.Row>\n                                    </Table.Footer>\n                                </Table>\n                            </Form>\n                        </Grid.Column>\n                    </Grid>\n                    <Divider horizontal inverted>Or</Divider>\n                    <Grid.Column verticalAlign='middle'>\n                        <Button content='Login' icon='signup' size='medium' onClick={() => history.push(\"/login\")}/>\n                    </Grid.Column>\n                </Segment>\n            </Segment>\n        </div>\n    );\n};\n\nexport default RegistrationForm","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Container, Form, Grid, Header, Popup, Segment } from 'semantic-ui-react'\nimport jwtDecode from 'jwt-decode'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { job_template_choices, job_stages } from \"../FieldChoices\";\nimport { confirmAlert } from 'react-confirm-alert'\n\n\n\n\nconst SetDefaultFormValue = props => {\n    const [newValues, setNewValues] = useState({})\n    const history = useHistory()\n    const { handleSubmit } = useForm({\n        reValidateMode: 'onChange'\n    })\n\n    const accessToken = props.accessToken\n\n    const handleChange = (e, { name, value }) => {\n        setNewValues(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    const onSubmit = () => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        if (newValues[\"id\"] === undefined) {\n            axios.post('/api/defaultInfo/', newValues)\n                .then(resp => {\n                    setNewValues(resp.data)\n                    return resp.data\n                })\n                .then(data => {\n                    const updatedUser = Object.assign({}, props.user, { default_info: data.id })\n                    return updatedUser\n                })\n                .then(updatedUser => {\n                    axios.defaults.headers = {\n                        \"Content-type\": \"application/json\",\n                        Authorization: `Bearer ${accessToken}`\n                    }\n                    axios.patch(`/api/users/${props.user.id}/`, updatedUser)\n                })\n                .then(\n                    confirmAlert({\n                        title: `Success!`,\n                        message: `You successfully set your default values, do you wish to create a new cover letter?`,\n                        buttons: [\n                            {\n                                label: 'Yes',\n                                onClick: () => history.push('/job/form/')\n                            }\n                            ,\n                            {\n                                label: 'Go To All Jobs',\n                                onClick: () => { history.push('/all-jobs/') }\n                            },\n                            {\n                                label: 'Go To Account Dashboard',\n                                onClick: () => { history.push('/user-admin/') }\n                            },\n                            {\n                                label: 'No',\n                                onClick: () => { history.go(0) }\n                            },\n                        ]\n                    })\n                )\n                .catch(errors => {\n    \n                    // {console.log(errors)}\n                    }\n                )\n        } else {\n            axios.patch(`/api/defaultInfo/${newValues.id}/`, newValues)\n                .then(\n                    confirmAlert({\n                    title: `Success!`,\n                    message: `You successfully set your default values, do you wish to create a new cover letter?`,\n                    buttons: [\n                                {\n                                    label: 'Yes',\n                                    onClick: () => history.push('/job/form/')\n                                }\n                                ,\n                                {\n                                    label: 'Go To All Jobs',\n                                    onClick: () => { history.push('/all-jobs/') }\n                                },\n                                {\n                                    label: 'Go To Account Dashboard',\n                                    onClick: () => { history.push('/user-admin/') }\n                                },\n                                {\n                                    label: 'No',\n                                    onClick: () => { history.go(0) }\n                                },\n                            ]\n                    })\n                ).catch(errors => {\n                    // {console.log(errors)}\n                }\n            )\n        }\n    };\n\n    useEffect(() => {\n        setNewValues(props.defaultInfo)\n    }, [props.defaultInfo])\n\n    return (\n        <Container>\n            <Segment inverted>\n                <Form onSubmit={handleSubmit(onSubmit)} >\n                    <Header\n                        as='h3'\n                        content='Default Form Values'\n                        inverted\n                        style={{\n                            fontSize: '3em',\n                            fontWeight: 'normal',\n                        }}\n                        textAlign=\"center\"\n                    />\n                    <Form.Select\n                        fluid\n                        placeholder=\"Choose Template\"\n                        options={job_template_choices}\n                        value={newValues.template_choices ? newValues.template_choices : \"\"}\n                        name=\"template_choices\"\n                        onChange={handleChange}\n                    />\n                    <Form.Select\n                        placeholder=\"Choose Job Stage\"\n                        options={job_stages}\n                        value={newValues.job_stage ? newValues.job_stage : \"\"}\n                        name=\"job_stage\"\n                        onChange={handleChange}\n                    />\n\n                    <Form.Input\n                        type=\"text\"\n                        placeholder=\"Position Title\"\n                        name=\"position_title\"\n                        onChange={handleChange}\n                        value={newValues.position_title ? newValues.position_title : \"\"}\n                    />\n                    <Form.Input\n                        type=\"text\"\n                        placeholder=\"City\"\n                        name=\"city\"\n                        onChange={handleChange}\n                        value={newValues.city ? newValues.city : \"\"}\n                    />\n                    \n                    <Popup\n                        content={`I.e LinkedIn or Google. It will default to the company\n                         otherwise if no value is given in the form.`}\n                        trigger={\n                            <Form.Input\n                                type=\"text\"\n                                placeholder=\"Hosting Website\"\n                                name=\"job_posting_website\"\n                                onChange={handleChange}\n                                value={newValues.job_posting_website ? newValues.job_posting_website : \"\"}\n                            />}\n                    />\n                    <Grid container columns=\"equal\" padded=\"vertically\" verticalAlign=\"middle\" centered>\n                        <Grid.Row>\n                                <Grid.Column>\n                                    <Popup\n                                        content=\"This field fulfills the pre-bullet-point paragraph.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder=\"Unique Paragraph One\"\n                                                name=\"pre_bullet_point_paragraph_one\"\n                                                onChange={handleChange} \n                                                value={newValues.pre_bullet_point_paragraph_one ? newValues.pre_bullet_point_paragraph_one : \"\"}\n                                            />\n                                        } />\n                                </Grid.Column>\n\n                                <Grid.Column>\n                                    <Popup\n                                        content=\"This field fulfills the SECOND pre-bullet-point paragraph.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder=\"Unique Paragraph Two\"\n                                                name=\"pre_bullet_point_paragraph_two\"\n                                                onChange={handleChange} \n                                                value={newValues.pre_bullet_point_paragraph_two ? newValues.pre_bullet_point_paragraph_two : \"\"}\n                                                />\n                                        } />\n                                </Grid.Column>\n\n                        </Grid.Row>                       \n                         <Grid.Row>\n                                <Grid.Column>\n                                    <Popup\n                                        content=\"Fill in the YOUR skills that match the JOBS description.\"\n                                        trigger={\n                                            <Form.TextArea\n                                                placeholder={`Top skills related to job`}\n                                                name=\"top_skills\"\n                                                onChange={handleChange}\n                                                value={newValues.top_skills ? newValues.top_skills : \"\"}\n                                            />\n                                        } />\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Form.TextArea                              \n                                        placeholder={`Second Bullet Point `}\n                                        name=\"bullet_point_one\"\n                                        onChange={handleChange} \n                                        value={newValues.bullet_point_one ? newValues.bullet_point_one : \"\"}\n                                    />\n                                </Grid.Column>\n\n                        </Grid.Row>\n                        <Grid.Row>\n\n                                <Grid.Column>\n                                    <Form.TextArea                                        \n                                        placeholder={`Third Bullet Point `}\n                                        name=\"bullet_point_two\"\n                                        onChange={handleChange} \n                                        value={newValues.bullet_point_two ? newValues.bullet_point_two : \"\"}\n                                    />                   \n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={newValues.bullet_point_three ? newValues.bullet_point_three : `Fourth Bullet Point `}\n                                        name=\"bullet_point_three\"\n                                        onChange={handleChange} />\n                                </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={ `Fifth Bullet Point `}\n                                        name=\"bullet_point_four\"\n                                        onChange={handleChange} \n                                        value={newValues.bullet_point_four ? newValues.bullet_point_four : \"\"}\n                                    />\n                                </Grid.Column>\n\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={ `Sixth Bullet Point `}\n                                        value={newValues.bullet_point_five ? newValues.bullet_point_five : \"\"}\n                                        name=\"bullet_point_five\"\n                                        onChange={handleChange} \n                                    />\n                                </Grid.Column>\n\n                        </Grid.Row>\n                        <Grid.Row>\n                                <Grid.Column>\n                                    <Form.TextArea\n                                        placeholder={ `Seventh Bullet Point `}\n                                        value={newValues.bullet_point_six ? newValues.bullet_point_six : \"\"}\n                                        name=\"bullet_point_six\"\n                                        onChange={handleChange} \n                                    />\n                                </Grid.Column>\n\n\n                                <Grid.Column>\n                                    <Form.TextArea                                        \n                                        placeholder={ `Eigth Bullet Point `}\n                                        value={newValues.bullet_point_seven ? newValues.bullet_point_seven : \"\"}\n                                        name=\"bullet_point_seven\"\n                                        onChange={handleChange} \n                                    />\n                                </Grid.Column>\n\n                        </Grid.Row>\n                    </Grid>\n                    <Form.Button primary content=\"Set Default Values\" />\n                </Form>\n            </Segment>\n        </Container>\n    )\n}\n\nexport default SetDefaultFormValue","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Container, Segment } from 'semantic-ui-react'\nimport jwtDecode from 'jwt-decode'\nimport SetDefaultFormValue from '../../components/Account/SetDefaultFormValues'\n\n\n\n\nconst PreferredDetailsContainer = () => {\n    const [defaultInfo, setdefaultInfo] = useState({})\n    const [user, setUser] = useState({})\n    const accessToken = localStorage.getItem('access_token')\n    const userId = jwtDecode(accessToken).user_id\n\n    useEffect(() => {\n        axios.defaults.headers = {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${accessToken}`\n        }\n        axios.get(`/api/defaultInfo/`)\n            .then(resp => {\n                const formValues = resp.data.results[0]\n                if (formValues[\"id\"]) {\n                    setdefaultInfo(formValues)\n                } \n            })\n            .catch(err => {\n\n            })\n        axios.get(`/api/users/${userId}/`)\n            .then(resp => {\n                setUser(resp.data)\n            })\n            .catch(err => {\n                // console.log(err)\n            })\n    }, [])\n    if (user) {\n        return(\n            <Container>\n                <Segment>\n                    <SetDefaultFormValue \n                        defaultInfo={defaultInfo} \n                        accessToken={accessToken}\n                        user={user}\n                    />\n                </Segment>\n            </Container>\n        )\n    } else {\n        <h1> loading </h1>\n    }\n}\n\nexport default PreferredDetailsContainer","import React from 'react'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\nimport JobListView from './containers/job_container/JobListView'\nimport JobDetailView from './containers/job_container/JobDetailView'\nimport CoverLetterView from './containers/forms/CoverLetterView'\nimport Login from './containers/forms/Login'\nimport ChangeEmail from './components/Account/ChangeEmail'\nimport HomePage from './components/homepage/homepage'\nimport AccountDashboard from './containers/Account/accountDashboard'\nimport ChangePassword from './components/Account/ChangePassword'\nimport ChangeAccountInfo from './components/Account/ChangeAccountInfo'\nimport AccountDetailsForm from './containers/forms/signUpForms/SignUpDetails'\nimport RegistrationForm from './containers/forms/signUpForms/SignupInitial'\nimport { UpdateJobForm } from './components/cover_letter/UpdateCoverLetter'\nimport PreferredDetailsContainer from './containers/Account/PreferredDetailsContainer'\n\n\nconst PrivateRoute = ({components: Component, ...rest}) => {\n    const authenticated = localStorage.getItem(\"access_token\") !== null\n    return (\n        authenticated === true ? \n        <Route {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/login\"/>\n    )\n    \n}\nconst NeedUserCredentials = ({components: Component, ...rest}) => {\n    const state = useHistory().location.state\n    return (\n        state !== undefined ? \n        <PrivateRoute {...rest} render={ props => <Component {...props}/>} />\n        :\n        <Redirect to=\"/user-admin/\"/>\n    )\n}\n\n\n\nconst BaseRouter = (props) => (\n    <div>\n        <Switch>\n            <PrivateRoute exact path='/job/form/' component={CoverLetterView}/>\n            <PrivateRoute exact path='/job/form/update/' component={UpdateJobForm} {...props}/>\n            <PrivateRoute exact path='/job/:jobID/' component={JobDetailView}/>\n            <PrivateRoute exact path='/all-jobs/' component={JobListView}/>\n            <PrivateRoute exact path='/signup-user-details/' component={AccountDetailsForm}/>\n            <PrivateRoute exact path='/default-form-values/' component={PreferredDetailsContainer}/>\n            <NeedUserCredentials exact path='/user-admin/change-email/' component={ChangeEmail} {...props}/>\n            <NeedUserCredentials exact path='/user-admin/change-password/' component={ChangePassword} {...props}/>\n            <NeedUserCredentials exact path='/user-admin/change-account-info/' component={ChangeAccountInfo} {...props}/> */}\n            <PrivateRoute exact path='/user-admin/' component={AccountDashboard} />\n            <Route exact path='/signup/' component={RegistrationForm}/>\n            <Route exact path='/login/' component={Login}/>\n            <Route exact path='' component={HomePage}/>\n            <Route path='/' component={HomePage}/>\n        </Switch>\n    </div>\n)\n\n\n\nexport default BaseRouter","import React from 'react'\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    // componentDidCatch(error, errorInfo) {\n    //     // You can also log the error to an error reporting service\n    //     logErrorToMyService(error, errorInfo);\n    // }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","import { \n  Navbar, \n  Nav, \n  NavDropdown, \n} from 'react-bootstrap';\nimport React, { useCallback, useEffect, useState, } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../../../store/actions/Auth'\nimport ErrorBoundary from '../../../store/ErrorBoundary';\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport rg4js from 'raygun4js';\n\n\n\nconst Header = () => {\n  let history = useHistory()\n  const [user, setUser] = useState({})\n  const props = useSelector(state => (\n    {\n      ...state,\n      isAuthenticated: localStorage.getItem('access_token') !== null,\n      loading: state.loading,\n      error: state.error\n    }))\n  \n  const dispatch = useDispatch()\n\n  const logout = () => {\n    try {\n      history.push('/login/')\n      dispatch(actions.logout())\n    } catch (e) {\n      alert('unable to logout')\n    }\n  }\n\n  const accessToken = localStorage.getItem('access_token')\n  const userId = accessToken !== null ? jwtDecode(accessToken).user_id : null\n\n  useEffect(() => {\n    props.loading = true\n    axios.defaults.headers = {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    }\n    if (userId) {\n      axios.get(`/api/users/${userId}/`)\n        .then(resp => {\n          setUser(resp.data)\n          rg4js('setUser', {\n            identifier: `${resp.data.username}`,\n            isAnonymous: false,\n            email: `${resp.data.email}`,\n            firstName: `${resp.data.first_name}`,\n            fullName: `${resp.data.first_name} ${resp.data.last_name}`\n          })\n          props.loading = false\n        })\n        .catch(err => {\n          // console.log(err)\n        })\n    }\n  }, [props.isAuthenticated])\n\n  return  (\n    <div>\n      {props.isAuthenticated ? LoggedInNav(props, logout, user) : loggedOutNav(props, logout)}\n    </div>\n  )\n}\n\n\n\nexport default Header\n\nconst LoggedInNav = (props, logout, user) => {\n  if (!props.loading) {\n    return(\n      <Navbar bg=\"light\" expand=\"lg\" className=\"nav-bar\" sticky={true}>\n        <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\n            <Nav.Link href=\"/all-jobs/\">All Jobs</Nav.Link>\n            <Nav.Link href=\"/job/form/\">Cover Letter Form</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Header>Welcome {user.preferred_name ? user.preferred_name : user.first_name}</NavDropdown.Header>\n              <NavDropdown.Item href=\"/user-admin/\">Account</NavDropdown.Item>\n              {\n                user.is_superuser ? \n                <NavDropdown.Item href=\"/admin/\">Admin</NavDropdown.Item> :\n                null\n              }\n              <NavDropdown.Divider />\n              <ErrorBoundary>\n                <NavDropdown.Item onClick={() => logout()}>Logout</NavDropdown.Item>\n              </ErrorBoundary>\n            </NavDropdown>\n          </Nav>\n          {/* <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"outline-success\">Search</Button>\n            </Form> */}\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  } else {\n    return (\n      <Header>Loading</Header>\n    )\n  }\n}\n\n\nconst loggedOutNav = () => (\n  < Navbar bg=\"light\" expand=\"lg\" className=\"text-center\" >\n    <Navbar.Brand href=\"/\">Unique Cover Letter Generator</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/login/\">Login</Nav.Link>\n        <Nav.Link href=\"/signup/\">Sign Up</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar >\n)\n\n\n  ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Container,\n    Grid,\n    Header,\n    List,\n    Segment,\n} from 'semantic-ui-react'\n\n\nconst FooterPage = () => {\n    return (\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n            <Container>\n                <Grid divided inverted stackable>\n                    <Grid.Row>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='Creator' />\n                            <List link inverted>\n                                <List.Item href='http://macallan.space/' target=\"_blank\">Personal Portfolio</List.Item>\n                                <List.Item href='https://github.com/Micjoey' target=\"_blank\">Github</List.Item>\n                                <List.Item href='https://www.linkedin.com/in/macallan-savett/' target=\"_blank\">LinkedIn</List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='About' />\n                            <List link inverted>\n                                <List.Item as='a'>About</List.Item>\n                                <List.Item as='a'>FAQ</List.Item>\n                                <List.Item as='a'>How To Access</List.Item>\n                                {/* <List.Item as='a'>Favorite X-Men</List.Item> */}\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={7}>\n                            <Header as='h4' inverted>\n                                Footer Header\n                            </Header>\n                            <p>\n                                Any suggestions or comments please send to\n                            </p>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Segment>\n    );\n}\n\nexport default FooterPage;","import BaseRouter from './routes'\nimport { BrowserRouter as Router}  from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport './css/App.css';\nimport Header from './containers/Banners/Header/NavBar';\nimport FooterPage from './containers/Banners/Footer/FooterBar';\nimport {\n  Container, Segment,\n} from 'semantic-ui-react'\nimport { createBrowserHistory } from 'history';\nimport rg4js from 'raygun4js';\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  const props = useSelector(state => ({ ...state, isAuthenticated: localStorage.getItem('access_token') !== null}))\n  history.listen((location, action) => {\n    rg4js('trackEvent', { type: 'pageView', path: location.pathname });\n  });\n  return (\n    <Segment inverted>\n      {/* <Container> */}\n        <div className=\"App\">\n          <header className=\"App-header\">\n              <Router>\n                <Header {...props}/>\n                <BaseRouter/> \n                <FooterPage/>\n              </Router>\n          </header>\n        </div>\n      {/* </Container> */}\n    </Segment>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/ActionTypes'\nimport { updateObject } from '../utility'\n\nconst initialState = {\n    token: null,\n    access_token: null,\n    refresh_token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    })\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        access_token: action.access_token,\n        refresh_token: action.refresh_token,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        access_token: null,\n        refresh_token: null,\n        token: null,\n    })\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: \n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: \n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: \n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: \n            return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducers/auth'\nimport thunk from 'redux-thunk'\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux'\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </>\n)\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}